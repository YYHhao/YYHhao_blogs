{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u4e2a\u4eba\u535a\u5ba2 \u7b80\u4ecb \u8bb0\u5f55\u4e00\u4e9b\u81ea\u5df1\u7684\u5b66\u4e60\u7b14\u8bb0. \u4ec0\u4e48\u90fd\u5b66\u4e00\u70b9\uff0c\u603b\u6709\u7528\u5230\u7684\u65f6\u5019. \u672c\u4eba\u662f\u4e2a\u83dc\u9e1f\uff0c\u5e0c\u671b\u80fd\u4e0e\u5927\u4f6c\u4ea4\u6d41\uff0c\u4e0d\u65ad\u8fdb\u6b65. \u8054\u7cfb\u65b9\u5f0f QQ: 1968306533 \u5fae\u4fe1: yang1968306533 \u90ae\u7bb1: young1968306533@163.com","title":"\u4e3b\u9875"},{"location":"#_1","text":"","title":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u4e2a\u4eba\u535a\u5ba2"},{"location":"#_2","text":"\u8bb0\u5f55\u4e00\u4e9b\u81ea\u5df1\u7684\u5b66\u4e60\u7b14\u8bb0. \u4ec0\u4e48\u90fd\u5b66\u4e00\u70b9\uff0c\u603b\u6709\u7528\u5230\u7684\u65f6\u5019. \u672c\u4eba\u662f\u4e2a\u83dc\u9e1f\uff0c\u5e0c\u671b\u80fd\u4e0e\u5927\u4f6c\u4ea4\u6d41\uff0c\u4e0d\u65ad\u8fdb\u6b65.","title":"\u7b80\u4ecb"},{"location":"#_3","text":"QQ: 1968306533 \u5fae\u4fe1: yang1968306533 \u90ae\u7bb1: young1968306533@163.com","title":"\u8054\u7cfb\u65b9\u5f0f"},{"location":"alglearning/SA/","text":"\u6a21\u62df\u9000\u5316\u7b97\u6cd5(SimulatedAnnealing) \u4e00\u3001\u4ec0\u4e48\u662f\u6a21\u62df\u9000\u706b\uff1f \u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u57fa\u4e8e\u8499\u7279\u5361\u6d1b(Monte-Carlo)\u8fed\u4ee3\u6c42\u89e3\u7b56\u7565\u7684\u4e00\u79cd\u968f\u673a\u5bfb\u4f18\u7b97\u6cd5,\u4e3b\u8981\u7528\u4e8e\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u7684\u6c42\u89e3\u3002 \u7b97\u6cd5\u601d\u60f3:\u4ece\u4e00\u4e2a\u8f83\u9ad8\u6e29\u5ea6\u51fa\u53d1\uff0c\u4e0d\u65ad\u964d\u6e29\uff0c\u76f4\u5230\u6e29\u5ea6\u964d\u4f4e\u5230\u6ee1\u8db3\u70ed\u5e73\u8861\u6761\u4ef6\u4e3a\u6b62\u3002\u540c\u65f6\u5728\u6bcf\u4e2a\u6e29\u5ea6\u4e0b\uff0c\u8fdb\u884cn\u8f6e\u641c\u7d22\uff0c\u6bcf\u8f6e\u641c\u7d22\u65f6\u5bf9\u65e7\u89e3\u6dfb\u52a0\u968f\u673a\u6270\u52a8\u751f\u6210\u65b0\u89e3\uff0c\u5e76\u6309\u4e00\u5b9a\u89c4\u5219\u63a5\u53d7\u65b0\u89e3\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u9996\u5148\uff08\u5de6\u56fe\uff09\u7269\u4f53\u5904\u4e8e\u975e\u6676\u4f53\u72b6\u6001\u3002\u6211\u4eec\u5c06\u56fa\u4f53\u52a0\u6e29\u81f3\u5145\u5206\u9ad8\uff08\u4e2d\u56fe\uff09\uff0c\u518d\u8ba9\u5176\u5f90\u5f90\u51b7\u5374\uff0c\u4e5f\u5c31\u9000\u706b\uff08\u53f3\u56fe\uff09\u3002\u52a0\u6e29\u65f6\uff0c\u56fa\u4f53\u5185\u90e8\u7c92\u5b50\u968f\u6e29\u5347\u53d8\u4e3a\u65e0\u5e8f\u72b6\uff0c\u5185\u80fd\u589e\u5927\uff0c\u800c\u5f90\u5f90\u51b7\u5374\u65f6\u7c92\u5b50\u6e10\u8d8b\u6709\u5e8f\uff0c\u5728\u6bcf\u4e2a\u6e29\u5ea6\u90fd\u8fbe\u5230\u5e73\u8861\u6001\uff0c\u6700\u540e\u5728\u5e38\u6e29\u65f6\u8fbe\u5230\u57fa\u6001\uff0c\u5185\u80fd\u51cf\u4e3a\u6700\u5c0f\uff08\u6b64\u65f6\u7269\u4f53\u4ee5\u6676\u4f53\u5f62\u6001\u5448\u73b0\uff09\u3002 \u4e8c\u3001\u6a21\u62df\u9000\u706b \u5982\u4e0b\u56fe,\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff0c\u60f3\u6c42\u51fd\u6570\u7684\u5168\u5c40\u6700\u4f18\u89e3\u3002\u5982\u679c\u91c7\u7528\u8d2a\u5fc3(Greedy)\u7b56\u7565\uff0c\u90a3\u4e48\u4eceA\u70b9\u5f00\u59cb\u8bd5\u63a2\uff0c\u5982\u679c\u51fd\u6570\u503c\u7ee7\u7eed\u51cf\u5c11\uff0c\u90a3\u4e48\u8bd5\u63a2\u8fc7\u7a0b\u5c31\u4f1a\u7ee7\u7eed\u3002\u800c\u5f53\u5230\u8fbe\u70b9B\u65f6\uff0c\u663e\u7136\u6211\u4eec\u7684\u63a2\u6c42\u8fc7\u7a0b\u5c31\u7ed3\u675f\u4e86\uff0c\u6b64\u65f6\u65e0\u8bba\u671d\u90a3\u4e2a\u65b9\u5411\uff0c\u7ed3\u679c\u90fd\u4f1a\u589e\u5927\u3002\u6700\u7ec8\u6211\u4eec\u53ea\u80fd\u5f97\u5230\u5c40\u90e8\u6700\u4f18\u89e3B\u3002 \u6a21\u62df\u9000\u706b\u5176\u5b9e\u4e5f\u662f\u4e00\u79cdGreedy\u7b97\u6cd5\uff0c\u4f46\u662f\u5b83\u7684\u641c\u7d22\u8fc7\u7a0b\u5f15\u5165\u4e86\u968f\u673a\u56e0\u7d20\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u6765\u63a5\u53d7\u4e00\u4e2a\u6bd4\u5f53\u524d\u89e3\u8981\u5dee\u7684\u89e3\uff0c\u56e0\u6b64\u6709\u53ef\u80fd\u4f1a\u8df3\u51fa\u8fd9\u4e2a\u5c40\u90e8\u7684\u6700\u4f18\u89e3\uff0c\u8fbe\u5230\u5168\u5c40\u7684\u6700\u4f18\u89e3\u3002\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u5728\u641c\u7d22\u5230\u5c40\u90e8\u6700\u4f18\u89e3B\u540e\uff0c\u4f1a\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u5411\u53f3\u7ee7\u7eed\u79fb\u52a8\u3002\u4e5f\u8bb8\u7ecf\u8fc7\u51e0\u6b21\u8fd9\u6837\u7684\u4e0d\u662f\u5c40\u90e8\u6700\u4f18\u7684\u79fb\u52a8\u540e\u4f1a\u5230\u8fbeB \u548cC\u4e4b\u95f4\u7684\u5cf0\u70b9\uff0c\u4e8e\u662f\u5c31\u8df3\u51fa\u4e86\u5c40\u90e8\u6700\u5c0f\u503cB\u3002 \u6839\u636eMetropolis\u51c6\u5219\uff0c\u7c92\u5b50\u5728\u6e29\u5ea6T\u65f6\u8d8b\u4e8e\u5e73\u8861\u7684\u6982\u7387\u4e3aexp(-\u0394E/(kT))\uff0c\u5176\u4e2dE\u4e3a\u6e29\u5ea6T\u65f6\u7684\u5185\u80fd\uff0c\u0394E\u4e3a\u5176\u6539\u53d8\u6570,k\u4e3aBoltzmann\u5e38\u6570\u3002Metropolis\u51c6\u5219\u5e38\u8868\u793a\u4e3a: \\[p=\\begin{cases} 1,E(x_{new})<E(x_{old}) \\\\ exp(-\\frac{E(x_{new})-E(x_{old})}{T}),E(x_{new})>=E(x_{old}) \\\\ \\end{cases} \\] Metropolis\u51c6\u5219\u8868\u660e\uff0c\u5728\u6e29\u5ea6\u4e3aT\u65f6\uff0c\u51fa\u73b0\u80fd\u91cf\u5dee\u4e3adE\u7684\u964d\u6e29\u7684\u6982\u7387\u4e3aP(dE)\uff0c\u8868\u793a\u4e3a\uff1aP(dE) = exp( dE/(kT) )\u3002\u5176\u4e2dk\u662f\u4e00\u4e2a\u5e38\u6570\uff0cexp\u8868\u793a\u81ea\u7136\u6307\u6570\uff0c\u4e14dE<0\u3002\u6240\u4ee5P\u548cT\u6b63\u76f8\u5173\u3002\u8fd9\u6761\u516c\u5f0f\u5c31\u8868\u793a\uff1a\u6e29\u5ea6\u8d8a\u9ad8\uff0c\u51fa\u73b0\u4e00\u6b21\u80fd\u91cf\u5dee\u4e3adE\u7684\u964d\u6e29\u7684\u6982\u7387\u5c31\u8d8a\u5927\uff1b\u6e29\u5ea6\u8d8a\u4f4e\uff0c\u5219\u51fa\u73b0\u964d\u6e29\u7684\u6982\u7387\u5c31\u8d8a\u5c0f\u3002\u53c8\u7531\u4e8edE\u603b\u662f\u5c0f\u4e8e0\uff08\u56e0\u4e3a\u9000\u706b\u7684\u8fc7\u7a0b\u662f\u6e29\u5ea6\u9010\u6e10\u4e0b\u964d\u7684\u8fc7\u7a0b\uff09\uff0c\u56e0\u6b64dE/kT < 0 \uff0c\u6240\u4ee5P(dE)\u7684\u51fd\u6570\u53d6\u503c\u8303\u56f4\u662f(0,1) \u3002\u968f\u7740\u6e29\u5ea6T\u7684\u964d\u4f4e\uff0cP(dE)\u4f1a\u9010\u6e10\u964d\u4f4e\u3002 \u603b\u7ed3\u6765\u8bf4: \u82e5f( Y(i+1) ) <= f( Y(i) ) (\u5373\u79fb\u52a8\u540e\u5f97\u5230\u66f4\u4f18\u89e3)\uff0c\u5219\u603b\u662f\u63a5\u53d7\u8be5\u79fb\u52a8\uff1b \u82e5f( Y(i+1) ) > f( Y(i) ) (\u5373\u79fb\u52a8\u540e\u7684\u89e3\u6bd4\u5f53\u524d\u89e3\u8981\u5dee)\uff0c\u5219\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u79fb\u52a8\uff0c\u800c\u4e14\u8fd9\u4e2a\u6982\u7387\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u9010\u6e10\u964d\u4f4e\uff08\u9010\u6e10\u964d\u4f4e\u624d\u80fd\u8d8b\u5411\u7a33\u5b9a\uff09\u76f8\u5f53\u4e8e\u4e0a\u56fe\u4e2d\uff0c\u4eceB\u79fb\u5411BC\u4e4b\u95f4\u7684\u5c0f\u6ce2\u5cf0\u65f6\uff0c\u6bcf\u6b21\u53f3\u79fb\uff08\u5373\u63a5\u53d7\u4e00\u4e2a\u66f4\u7cdf\u7cd5\u503c\uff09\u7684\u6982\u7387\u5728\u9010\u6e10\u964d\u4f4e\u3002\u5982\u679c\u8fd9\u4e2a\u5761\u7279\u522b\u957f\uff0c\u90a3\u4e48\u5f88\u6709\u53ef\u80fd\u6700\u7ec8\u6211\u4eec\u5e76\u4e0d\u4f1a\u7ffb\u8fc7\u8fd9\u4e2a\u5761\u3002\u5982\u679c\u5b83\u4e0d\u592a\u957f\uff0c\u8fd9\u5f88\u6709\u53ef\u80fd\u4f1a\u7ffb\u8fc7\u5b83\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8870\u51cf t \u503c\u7684\u8bbe\u5b9a\u3002 \u51b7\u5374\u8fdb\u5ea6\u8868: \u51b7\u5374\u8fdb\u5ea6\u8868\u662f\u6307\u4ece\u67d0\u4e00\u9ad8\u6e29\u72b6\u6001T\u5411\u4f4e\u6e29\u72b6\u6001\u51b7\u5374\u65f6\u7684\u964d\u6e29\u51fd\u6570,\u8bbe\u65f6\u523b\u7684\u6e29\u5ea6\u4e3aT(t)\uff0c\u5219\u7ecf\u5178\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u7684\u964d\u6e29\u65b9\u5f0f\u4e3a\uff1a $$ T(t)=\\frac{T_0}{lg(1+t)} $$ \u800c\u5feb\u901f\u6a21\u62df\u9000\u5316\u7b97\u6cd5\u7684\u964d\u6e29\u65b9\u5f0f\u4e3a: $$T(t)=\\frac{T_0}{1+t} $$ \u5f53\u7136\u8fd8\u6709\u5f88\u591a\u964d\u6e29\u51fd\u6570\uff0c\u4e0d\u591a\u4f5c\u4ecb\u7ecd\u3002 \u4e09\u3001\u5b9e\u4f8b \u6c42\u51fd\u6570 \\(f(x)=x^3-60x^2-4x+6\\) \u5728[0,100]\u8303\u56f4\u5185\u7684\u6700\u5c0f\u503c\u3002 1\u3001\u753b\u56fe: import numpy as np import matplotlib.pyplot as plt import math from sympy import * def fun(x): y = x**3-60*x**2-4*x+6 return y x = [i/10 for i in range(0,1000)] y = [] for i in range(len(x)): y.append(fun(x[i])) plt.plot(x,y) plt.show() \u53ef\u4ee5\u770b\u51fa\u6700\u5c0f\u503c\u5728\u6a2a\u8f74\u7b49\u4e8e40\u5de6\u53f3\u3002 2\u3001\u6c42\u5bfc: import numpy as np import matplotlib.pyplot as plt import math from sympy import * x = symbols('x') y = x**3-60*x**2-4*x+6 dify = diff(y,x) ans = list(map(lambda x:round(x,4),solve(dify,x))) lis = [] for i in ans: if i<100 and i>=0: lis.append(round(i**3-60*i**2-4*i+6,4)) print(i) print(min(lis)) \u8f93\u51fa\uff1a 40.0333 -32154.1 3\u3001SA,\u964d\u6e29\u51fd\u6570\u7528T(t)=T0/(1+t): import numpy as np import matplotlib.pyplot as plt import math from sympy import * def fun(x): y = x**3-60*x**2-4*x+6 return y T = 1000 #\u8d77\u59cb\u6e29\u5ea6 Tmin = 10 #\u6700\u5c0f\u6e29\u5ea6 x = np.random.uniform(low=0,high=100) #\u8d77\u59cbx k = 50 #\u8bbe\u5b9a\u5185\u5faa\u73af\u6b21\u6570\u4e3a50 y = 0 #\u521d\u59cb\u7ed3\u679c t = 0 while T >= Tmin: for i in range(k): y = fun(x) xnew = x + np.random.uniform(-0.055,0.055)*T if (0<=xnew and xnew<=100): ynew = fun(xnew) if ynew < y: x = xnew else: p = math.exp(-(ynew-y)/T) r = np.random.uniform(0,1) #metropolis\u63a5\u53d7\u51c6\u5219 if r < p: x = xnew t += 1 #print(t) T = 1000/(1+t) print(x,fun(x)) \u8f93\u51fa\uff1a 40.38328639479239 -32146.66232993903","title":"\u6a21\u62df\u9000\u706b\u7b97\u6cd5"},{"location":"alglearning/SA/#simulatedannealing","text":"","title":"\u6a21\u62df\u9000\u5316\u7b97\u6cd5(SimulatedAnnealing)"},{"location":"alglearning/SA/#_1","text":"\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u662f\u57fa\u4e8e\u8499\u7279\u5361\u6d1b(Monte-Carlo)\u8fed\u4ee3\u6c42\u89e3\u7b56\u7565\u7684\u4e00\u79cd\u968f\u673a\u5bfb\u4f18\u7b97\u6cd5,\u4e3b\u8981\u7528\u4e8e\u7ec4\u5408\u4f18\u5316\u95ee\u9898\u7684\u6c42\u89e3\u3002 \u7b97\u6cd5\u601d\u60f3:\u4ece\u4e00\u4e2a\u8f83\u9ad8\u6e29\u5ea6\u51fa\u53d1\uff0c\u4e0d\u65ad\u964d\u6e29\uff0c\u76f4\u5230\u6e29\u5ea6\u964d\u4f4e\u5230\u6ee1\u8db3\u70ed\u5e73\u8861\u6761\u4ef6\u4e3a\u6b62\u3002\u540c\u65f6\u5728\u6bcf\u4e2a\u6e29\u5ea6\u4e0b\uff0c\u8fdb\u884cn\u8f6e\u641c\u7d22\uff0c\u6bcf\u8f6e\u641c\u7d22\u65f6\u5bf9\u65e7\u89e3\u6dfb\u52a0\u968f\u673a\u6270\u52a8\u751f\u6210\u65b0\u89e3\uff0c\u5e76\u6309\u4e00\u5b9a\u89c4\u5219\u63a5\u53d7\u65b0\u89e3\u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u9996\u5148\uff08\u5de6\u56fe\uff09\u7269\u4f53\u5904\u4e8e\u975e\u6676\u4f53\u72b6\u6001\u3002\u6211\u4eec\u5c06\u56fa\u4f53\u52a0\u6e29\u81f3\u5145\u5206\u9ad8\uff08\u4e2d\u56fe\uff09\uff0c\u518d\u8ba9\u5176\u5f90\u5f90\u51b7\u5374\uff0c\u4e5f\u5c31\u9000\u706b\uff08\u53f3\u56fe\uff09\u3002\u52a0\u6e29\u65f6\uff0c\u56fa\u4f53\u5185\u90e8\u7c92\u5b50\u968f\u6e29\u5347\u53d8\u4e3a\u65e0\u5e8f\u72b6\uff0c\u5185\u80fd\u589e\u5927\uff0c\u800c\u5f90\u5f90\u51b7\u5374\u65f6\u7c92\u5b50\u6e10\u8d8b\u6709\u5e8f\uff0c\u5728\u6bcf\u4e2a\u6e29\u5ea6\u90fd\u8fbe\u5230\u5e73\u8861\u6001\uff0c\u6700\u540e\u5728\u5e38\u6e29\u65f6\u8fbe\u5230\u57fa\u6001\uff0c\u5185\u80fd\u51cf\u4e3a\u6700\u5c0f\uff08\u6b64\u65f6\u7269\u4f53\u4ee5\u6676\u4f53\u5f62\u6001\u5448\u73b0\uff09\u3002","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u6a21\u62df\u9000\u706b\uff1f"},{"location":"alglearning/SA/#_2","text":"\u5982\u4e0b\u56fe,\u6211\u4eec\u6709\u8fd9\u6837\u4e00\u4e2a\u51fd\u6570\uff0c\u60f3\u6c42\u51fd\u6570\u7684\u5168\u5c40\u6700\u4f18\u89e3\u3002\u5982\u679c\u91c7\u7528\u8d2a\u5fc3(Greedy)\u7b56\u7565\uff0c\u90a3\u4e48\u4eceA\u70b9\u5f00\u59cb\u8bd5\u63a2\uff0c\u5982\u679c\u51fd\u6570\u503c\u7ee7\u7eed\u51cf\u5c11\uff0c\u90a3\u4e48\u8bd5\u63a2\u8fc7\u7a0b\u5c31\u4f1a\u7ee7\u7eed\u3002\u800c\u5f53\u5230\u8fbe\u70b9B\u65f6\uff0c\u663e\u7136\u6211\u4eec\u7684\u63a2\u6c42\u8fc7\u7a0b\u5c31\u7ed3\u675f\u4e86\uff0c\u6b64\u65f6\u65e0\u8bba\u671d\u90a3\u4e2a\u65b9\u5411\uff0c\u7ed3\u679c\u90fd\u4f1a\u589e\u5927\u3002\u6700\u7ec8\u6211\u4eec\u53ea\u80fd\u5f97\u5230\u5c40\u90e8\u6700\u4f18\u89e3B\u3002 \u6a21\u62df\u9000\u706b\u5176\u5b9e\u4e5f\u662f\u4e00\u79cdGreedy\u7b97\u6cd5\uff0c\u4f46\u662f\u5b83\u7684\u641c\u7d22\u8fc7\u7a0b\u5f15\u5165\u4e86\u968f\u673a\u56e0\u7d20\u3002\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u6765\u63a5\u53d7\u4e00\u4e2a\u6bd4\u5f53\u524d\u89e3\u8981\u5dee\u7684\u89e3\uff0c\u56e0\u6b64\u6709\u53ef\u80fd\u4f1a\u8df3\u51fa\u8fd9\u4e2a\u5c40\u90e8\u7684\u6700\u4f18\u89e3\uff0c\u8fbe\u5230\u5168\u5c40\u7684\u6700\u4f18\u89e3\u3002\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u5728\u641c\u7d22\u5230\u5c40\u90e8\u6700\u4f18\u89e3B\u540e\uff0c\u4f1a\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u5411\u53f3\u7ee7\u7eed\u79fb\u52a8\u3002\u4e5f\u8bb8\u7ecf\u8fc7\u51e0\u6b21\u8fd9\u6837\u7684\u4e0d\u662f\u5c40\u90e8\u6700\u4f18\u7684\u79fb\u52a8\u540e\u4f1a\u5230\u8fbeB \u548cC\u4e4b\u95f4\u7684\u5cf0\u70b9\uff0c\u4e8e\u662f\u5c31\u8df3\u51fa\u4e86\u5c40\u90e8\u6700\u5c0f\u503cB\u3002 \u6839\u636eMetropolis\u51c6\u5219\uff0c\u7c92\u5b50\u5728\u6e29\u5ea6T\u65f6\u8d8b\u4e8e\u5e73\u8861\u7684\u6982\u7387\u4e3aexp(-\u0394E/(kT))\uff0c\u5176\u4e2dE\u4e3a\u6e29\u5ea6T\u65f6\u7684\u5185\u80fd\uff0c\u0394E\u4e3a\u5176\u6539\u53d8\u6570,k\u4e3aBoltzmann\u5e38\u6570\u3002Metropolis\u51c6\u5219\u5e38\u8868\u793a\u4e3a: \\[p=\\begin{cases} 1,E(x_{new})<E(x_{old}) \\\\ exp(-\\frac{E(x_{new})-E(x_{old})}{T}),E(x_{new})>=E(x_{old}) \\\\ \\end{cases} \\] Metropolis\u51c6\u5219\u8868\u660e\uff0c\u5728\u6e29\u5ea6\u4e3aT\u65f6\uff0c\u51fa\u73b0\u80fd\u91cf\u5dee\u4e3adE\u7684\u964d\u6e29\u7684\u6982\u7387\u4e3aP(dE)\uff0c\u8868\u793a\u4e3a\uff1aP(dE) = exp( dE/(kT) )\u3002\u5176\u4e2dk\u662f\u4e00\u4e2a\u5e38\u6570\uff0cexp\u8868\u793a\u81ea\u7136\u6307\u6570\uff0c\u4e14dE<0\u3002\u6240\u4ee5P\u548cT\u6b63\u76f8\u5173\u3002\u8fd9\u6761\u516c\u5f0f\u5c31\u8868\u793a\uff1a\u6e29\u5ea6\u8d8a\u9ad8\uff0c\u51fa\u73b0\u4e00\u6b21\u80fd\u91cf\u5dee\u4e3adE\u7684\u964d\u6e29\u7684\u6982\u7387\u5c31\u8d8a\u5927\uff1b\u6e29\u5ea6\u8d8a\u4f4e\uff0c\u5219\u51fa\u73b0\u964d\u6e29\u7684\u6982\u7387\u5c31\u8d8a\u5c0f\u3002\u53c8\u7531\u4e8edE\u603b\u662f\u5c0f\u4e8e0\uff08\u56e0\u4e3a\u9000\u706b\u7684\u8fc7\u7a0b\u662f\u6e29\u5ea6\u9010\u6e10\u4e0b\u964d\u7684\u8fc7\u7a0b\uff09\uff0c\u56e0\u6b64dE/kT < 0 \uff0c\u6240\u4ee5P(dE)\u7684\u51fd\u6570\u53d6\u503c\u8303\u56f4\u662f(0,1) \u3002\u968f\u7740\u6e29\u5ea6T\u7684\u964d\u4f4e\uff0cP(dE)\u4f1a\u9010\u6e10\u964d\u4f4e\u3002 \u603b\u7ed3\u6765\u8bf4: \u82e5f( Y(i+1) ) <= f( Y(i) ) (\u5373\u79fb\u52a8\u540e\u5f97\u5230\u66f4\u4f18\u89e3)\uff0c\u5219\u603b\u662f\u63a5\u53d7\u8be5\u79fb\u52a8\uff1b \u82e5f( Y(i+1) ) > f( Y(i) ) (\u5373\u79fb\u52a8\u540e\u7684\u89e3\u6bd4\u5f53\u524d\u89e3\u8981\u5dee)\uff0c\u5219\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u63a5\u53d7\u79fb\u52a8\uff0c\u800c\u4e14\u8fd9\u4e2a\u6982\u7387\u968f\u7740\u65f6\u95f4\u63a8\u79fb\u9010\u6e10\u964d\u4f4e\uff08\u9010\u6e10\u964d\u4f4e\u624d\u80fd\u8d8b\u5411\u7a33\u5b9a\uff09\u76f8\u5f53\u4e8e\u4e0a\u56fe\u4e2d\uff0c\u4eceB\u79fb\u5411BC\u4e4b\u95f4\u7684\u5c0f\u6ce2\u5cf0\u65f6\uff0c\u6bcf\u6b21\u53f3\u79fb\uff08\u5373\u63a5\u53d7\u4e00\u4e2a\u66f4\u7cdf\u7cd5\u503c\uff09\u7684\u6982\u7387\u5728\u9010\u6e10\u964d\u4f4e\u3002\u5982\u679c\u8fd9\u4e2a\u5761\u7279\u522b\u957f\uff0c\u90a3\u4e48\u5f88\u6709\u53ef\u80fd\u6700\u7ec8\u6211\u4eec\u5e76\u4e0d\u4f1a\u7ffb\u8fc7\u8fd9\u4e2a\u5761\u3002\u5982\u679c\u5b83\u4e0d\u592a\u957f\uff0c\u8fd9\u5f88\u6709\u53ef\u80fd\u4f1a\u7ffb\u8fc7\u5b83\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8870\u51cf t \u503c\u7684\u8bbe\u5b9a\u3002 \u51b7\u5374\u8fdb\u5ea6\u8868: \u51b7\u5374\u8fdb\u5ea6\u8868\u662f\u6307\u4ece\u67d0\u4e00\u9ad8\u6e29\u72b6\u6001T\u5411\u4f4e\u6e29\u72b6\u6001\u51b7\u5374\u65f6\u7684\u964d\u6e29\u51fd\u6570,\u8bbe\u65f6\u523b\u7684\u6e29\u5ea6\u4e3aT(t)\uff0c\u5219\u7ecf\u5178\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u7684\u964d\u6e29\u65b9\u5f0f\u4e3a\uff1a $$ T(t)=\\frac{T_0}{lg(1+t)} $$ \u800c\u5feb\u901f\u6a21\u62df\u9000\u5316\u7b97\u6cd5\u7684\u964d\u6e29\u65b9\u5f0f\u4e3a: $$T(t)=\\frac{T_0}{1+t} $$ \u5f53\u7136\u8fd8\u6709\u5f88\u591a\u964d\u6e29\u51fd\u6570\uff0c\u4e0d\u591a\u4f5c\u4ecb\u7ecd\u3002","title":"\u4e8c\u3001\u6a21\u62df\u9000\u706b"},{"location":"alglearning/SA/#_3","text":"\u6c42\u51fd\u6570 \\(f(x)=x^3-60x^2-4x+6\\) \u5728[0,100]\u8303\u56f4\u5185\u7684\u6700\u5c0f\u503c\u3002 1\u3001\u753b\u56fe: import numpy as np import matplotlib.pyplot as plt import math from sympy import * def fun(x): y = x**3-60*x**2-4*x+6 return y x = [i/10 for i in range(0,1000)] y = [] for i in range(len(x)): y.append(fun(x[i])) plt.plot(x,y) plt.show() \u53ef\u4ee5\u770b\u51fa\u6700\u5c0f\u503c\u5728\u6a2a\u8f74\u7b49\u4e8e40\u5de6\u53f3\u3002 2\u3001\u6c42\u5bfc: import numpy as np import matplotlib.pyplot as plt import math from sympy import * x = symbols('x') y = x**3-60*x**2-4*x+6 dify = diff(y,x) ans = list(map(lambda x:round(x,4),solve(dify,x))) lis = [] for i in ans: if i<100 and i>=0: lis.append(round(i**3-60*i**2-4*i+6,4)) print(i) print(min(lis)) \u8f93\u51fa\uff1a 40.0333 -32154.1 3\u3001SA,\u964d\u6e29\u51fd\u6570\u7528T(t)=T0/(1+t): import numpy as np import matplotlib.pyplot as plt import math from sympy import * def fun(x): y = x**3-60*x**2-4*x+6 return y T = 1000 #\u8d77\u59cb\u6e29\u5ea6 Tmin = 10 #\u6700\u5c0f\u6e29\u5ea6 x = np.random.uniform(low=0,high=100) #\u8d77\u59cbx k = 50 #\u8bbe\u5b9a\u5185\u5faa\u73af\u6b21\u6570\u4e3a50 y = 0 #\u521d\u59cb\u7ed3\u679c t = 0 while T >= Tmin: for i in range(k): y = fun(x) xnew = x + np.random.uniform(-0.055,0.055)*T if (0<=xnew and xnew<=100): ynew = fun(xnew) if ynew < y: x = xnew else: p = math.exp(-(ynew-y)/T) r = np.random.uniform(0,1) #metropolis\u63a5\u53d7\u51c6\u5219 if r < p: x = xnew t += 1 #print(t) T = 1000/(1+t) print(x,fun(x)) \u8f93\u51fa\uff1a 40.38328639479239 -32146.66232993903","title":"\u4e09\u3001\u5b9e\u4f8b"},{"location":"alglearning/mylearning1/","text":"\u4e00\u3001\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff08\u8f97\u8f6c\u76f8\u9664\u6cd5\uff09 \u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\uff0c\u521d\u7b49\u6570\u8bba\u4e2d\uff1a \u82e5 \uff08p,q\uff09=1 \uff0c\u5b58\u5728\u6574\u6570s\uff0ct \u4f7f\u5f97 sp+ tq=1 (x,y)\u8868\u793ax,y\u7684\u6700\u5927\u516c\u7ea6\u6570 [x,y]\u8868\u793ax,y\u7684\u6700\u5c0f\u516c\u500d\u6570 \u5148\u4e3e\u4e2a\u4f8b\u5b50\uff1a gcd(6,16) = gcd(16,6%16) = gcd(16, 6) = gcd(6,16%6) = gcd(6,4) = gcd(4,6%4) = gcd(4,2) = gcd(2,4%2) = gcd(2,0) = 2 \u7531\u6b64\u53ef\u5f97\uff0c\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u5c31\u662f\u8ba1\u7b97\u6700\u5927\u516c\u7ea6\u6570\u7684\u4e00\u4e2a\u7b97\u6cd5\uff0c\u9012\u63a8\u5f0f\u4e3a\uff1a gcd(a , b)= gcd(b , a % b) \u76f4\u5230a,b\u4e2d\u6709\u4e00\u4e2a\u6570\u4e3a0\uff0c\u53ef\u5f97\u5230\u4ed6\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002 \u600e\u4e48\u8bc1\u660e\u4e0a\u8ff0\u5f0f\u5b50\u5462\uff1f ` \u4ee4(A , B) = R,\u8bc1\u660e(A,B) = (B,R) \u56e0 (A , B) = R \u5219 A = B * q + R \u4ee4 A = a * u, B = b * u \u5219 R = A - B*q = a * u - b * u * q = u * (a - b * q) = u * n \u5373 u \u662fA,B\u7684\u6700\u5927\u516c\u56e0\u6570\u5219 u \u662fB,R\u7684\u6700\u5927\u516c\u56e0\u6570. \u540c\u7406: \u4ee4 B = b' * v \u4ee4 R = r' * v \u5f97 A = a' * v \u5373 v \u662fB,R\u7684\u6700\u5927\u516c\u56e0\u6570\u5219 v \u662fA,B\u7684\u6700\u5927\u516c\u56e0\u6570. \u8bc1\u660e\u6210\u7acb \u4e8c\u3001\u88f4\u8700\u5b9a\u7406 \u5185\u5bb9\u5982\u4e0b: \\(\u82e5 a , b \u662f\u4efb\u610f\u6574\u6570,\u4e14 gcd \u2061 ( a , b ) = d \uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684\u6574\u6570 x , y , a x + b y \u90fd\u4e00\u5b9a\u662f d \u7684\u500d\u6570\uff0c\u7279\u522b\u5730\uff0c\u4e00\u5b9a\u5b58\u5728\u6574\u6570 x , y\uff0c\u4f7f a x + b y = d \u6210\u7acb\u3002\\) \u63a8\u8bba: a,b \u4e92\u8d28 \u7684 \u5145\u5206\u5fc5\u8981\u6761\u4ef6 \u662f\u5b58\u5728 \u6574\u6570 x,y\u4f7fax+by=1 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5173\u4e8ex\u548cy\u7684\u7ebf\u6027\u65b9\u7a0b ax + by = d\uff0c\u73b0\u5728\u8981\u6c42\u5224\u65ad\u8fd9\u4e2a\u65b9\u7a0b\u662f\u5426\u5b58\u5728\u6574\u6570\u89e3\u3002 \u88f4\u8700\u5b9a\u7406\u544a\u8bc9\u6211\u4eec\uff0cax + by = d\u5b58\u5728\u6574\u6570\u89e3\u5f53\u524d\u4ec5\u5f53 gcd ( a , b ) | d \u3002\u4f8b\u5982\u8bf43x + 6y = 2\u5c31\u4e0d\u5b58\u5728\u6574\u6570\u89e3\uff0c3x + 6y = 3\u5c31\u5b58\u5728\u6574\u6570\u89e3 x =1 ,y = 0 \u3002 \u5982\u4f55\u8bc1\u660e\uff1f\u663e\u7136gcd( a , b) | (ax + by\uff09\uff0c\u5982\u679c\u5b58\u5728\u6574\u6570\u7684\u89e3\u7684\u8bdd\u5fc5\u7136\u6709 gcd ( a , b ) | d \u3002 \u90a3\u4e48\u5728gcd( a, b) | d\u7684\u65f6\u5019\u4e00\u5b9a\u90fd\u5b58\u5728\u6574\u6570\u89e3\u5417\uff1f\u6211\u4eec\u6765\u901a\u8fc7\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u89e3\u91ca\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7684\u7b97\u6cd5\u4e0d\u4ec5\u56de\u7b54\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u4e14\u8fd8\u628a\u89e3\u6784\u9020\u4e86\u51fa\u6765\u3002 n\u4e2a\u6574\u6570\u7684\u88f4\u8700\u5b9a\u7406: \u8bbea1,a2,a3......an\u4e3an\u4e2a\u6574\u6570\uff0cd\u662f\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u90a3\u4e48\u5b58\u5728\u6574\u6570x1......xn\u4f7f\u5f97x1 a1+x2 a2+...xn*an=d\u3002 \u7279\u522b\u6765\u8bf4\uff0c\u5982\u679ca1...an\u5b58\u5728\u4efb\u610f\u4e24\u4e2a\u6570\u662f\u4e92\u8d28\u7684\uff08\u4e0d\u5fc5\u6ee1\u8db3\u4e24\u4e24\u4e92\u8d28\uff09\uff0c\u90a3\u4e48\u5b58\u5728\u6574\u6570x1......xn\u4f7f\u5f97x1 * a1 + x2 * a2+...xn * an=1\u3002\u8bc1\u6cd5\u7c7b\u4f3c\u4e24\u4e2a\u6570\u7684\u60c5\u51b5\u3002 \u4e09\u3001\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 \u5b9a\u4e49: \u5728\u5f97\u5230\u6574\u6570a,b\u7684\u6700\u5927\u516c\u7ea6\u6570\u540e,\u8fd8\u5e0c\u671b\u5f97\u5230\u6574\u6570x,y:\u4f7f\u5f97ax+by=gcd(a,b) 1\u3001 \\(\u5bf9\u4e8e\u6574\u6570a>b\u663e\u7136b=0\u65f6,gcd(a,b) = a;\u6b64\u65f6x=1,y=0\\) 2\u3001 \\(\u8bbeax_1+by_1=gcd(a,b)\\) 3\u3001 \\(\u6709bx_2 + (a\\%b)y_2=gcd(b,a\\%b)\\) 4\u3001 \\(\u7531\u4e8egcd(a,b)=gcd(b,a\\%b),\u90a3\u4e48ax_1+by_1=bx_2+(a\\%b)y_2\\) 5\u3001 \\(\u5373ax_1+by_1=bx_2+(a-[a/b]*b)y_2=ay_2+bx_2-[a/b]*by_2\\) 6\u3001 \\(\u4e5f\u5c31\u662fax_1+by_1==ay_2+b(x_2-[a/b]*y_2)\\) 7\u3001 \\(\u6839\u636e\u6052\u7b49\u5f0f\u5b9a\u7406\u5f97:x_1=y_2;y_1=x_2-[a/b]*y_2\\) 8\u3001 \\(\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6c42\u89e3x_1,y_1\u7684\u65b9\u6cd5:x_1,y_1\u7684\u503c\u57fa\u4e8ex_2,y_2\\) 9\u3001\u4e0a\u9762\u7684\u601d\u60f3\u662f\u4ee5\u9012\u5f52\u5b9a\u4e49\u7684,gcd\u4e0d\u65ad\u5730\u9012\u5f52\u6c42\u89e3\u4e00\u5b9a\u4f1a\u6709b=0\u7684\u65f6\u5019,\u6240\u4ee5\u9012\u5f52\u53ef\u4ee5\u7ed3\u675f. \u56db\u3001\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u9006\u5143 \u4e58\u6cd5\u9006\u5143\u7684\u5b9a\u4e49 \uff1a \u82e5\u5b58\u5728\u6b63\u6574\u6570a,b,p, \u6ee1\u8db3ab = 1(mod p), \u5219\u79f0a \u662fb \u7684\u4e58\u6cd5\u9006\u5143, \u6216\u79f0b \u662fa \u7684\u4e58\u6cd5\u9006\u5143\u3002b \u2261 a-1 (mod p)\uff0ca \u2261 b-1 (mod p) \u6bd4\u5982\u8bf4, \u5728\u6a217 \u610f\u4e49\u4e0b,3 \u7684\u4e58\u6cd5\u9006\u5143\u662f5, \u4e5f\u53ef\u4ee5\u8bf4\u6a217 \u610f\u4e49\u4e0b5\u7684\u4e58\u6cd5\u9006\u5143\u662f3\u3002\u6a2113\u610f\u4e49\u4e0b5\u7684\u9006\u5143\u662f8\u2026\u2026 \u5b58\u5728\u6027 \u770b\u8d77\u6765\u548c\u540c\u4f59\u65b9\u7a0b\u5f88\u76f8\u4f3c\uff08\u5176\u5b9e\u4e0b\u9762\u771f\u7684\u53ef\u4ee5\u7528exgcd\u6c42\u7684\uff01\uff09\uff0c\u5728\u540c\u4f59\u65b9\u7a0b\u4e2d, ab \u2261 1(mod p) \u82e5a \u4e0ep \u4e92\u8d28, \u5219\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6b63\u6574\u6570\u89e3b, \u6ee1\u8db3b < p\uff0c\u82e5a \u4e0ep \u4e0d\u4e92\u8d28, \u5219\u4e00\u5b9a\u4e0d\u5b58\u5728\u6b63\u6574\u6570\u89e3b. \u6240\u4ee5\u9006\u5143\u8981\u6c42a\u4e0ep\u4e92\u8d28 \u5b9a\u4e49\u51fd\u6570 def exgcd(a,b): global x,y if b == 0: x,y = 1,0 return a d = exgcd(b,a%b) x,y = y,x y -= (a//b)*x return d \u7528gmpy2\u5e93 gmpy2.is_prime(n) # \u5224\u65adn\u662f\u4e0d\u662f\u7d20\u6570 gmpy2.gcd(a,b) # \u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 gmpy2.gcdext(a,b) # \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 \u8bf4\u660e:gmpy2.gcdext(a,b)\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4(g,s,t) , g =gcd(a,b) , g=as+bt import gmpy2 print(*map(int,gmpy2.gcdext(15,10))) \u8f93\u51fa: 5 1 -1 #\u5373gcd(15,10) = 5 = 1*15+(-1)*10 \u4e94\u3001\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u4f8b 1\u3001\u6c42\u6ee1\u8db3\u4e0b\u540c\u4f59\u65b9\u7a0b\u7ec4\u7684x \\[ \\begin{cases} x \\equiv 1(mod\\quad3)\\\\ x \\equiv 3(mod\\quad5)\\\\ x \\equiv 5(mod\\quad7)\\\\ \\end{cases} \\] \\(\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\Updownarrow\\) \u7b49\u4ef7 \\[\\begin{cases} x \\equiv -2(mod\\quad3)\\\\ x \\equiv -2(mod\\quad5)\\\\ x \\equiv -2(mod\\quad7)\\\\ \\end{cases} \\] \u5219\u53ef\u4ee5\u77e5\u9053 3,5,7|(x+2) \\(\\Rightarrow\\) 105|(x+2) \\(\\Rightarrow\\) x=103\u3001103+105 \\(\\cdots\\) \u5373x\u6700\u5c0f\u503c\u4e3a103\u3002 \u4f8b 2\u3001 \\[\\begin{cases} k \\equiv a(mod\\quad3)\\\\ k \\equiv b(mod\\quad5) \\tag{2.1} \\\\ k \\equiv c(mod\\quad7)\\\\ \\end{cases} \\] \u53ef\u4ee5\u5148\u5bfb\u627e\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u65b9\u7a0b\u7ec4 (\u53ef\u770b\u4f5c\u57fa\u7840\u89e3\u7cfb) \\[\\begin{cases} x \\equiv 1(mod\\quad3)\\\\ x \\equiv 0(mod\\quad5)\\\\ x \\equiv 0(mod\\quad7) \\end{cases} \\] \\[\\begin{cases} y \\equiv 0(mod\\quad3)\\\\ y \\equiv 1(mod\\quad5)\\\\ y \\equiv 0(mod\\quad7) \\end{cases} \\] \\[\\begin{cases} z \\equiv 0(mod\\quad3)\\\\ z \\equiv 0(mod\\quad5)\\\\ z \\equiv 1(mod\\quad7) \\end{cases} \\] \u5219\u5f0f2.1\u8bb0\u4e3a \\(k=ax+by+cz \\quad (mod \\quad 105)\\) \u7531\u57fa\u7840\u89e3\u7cfb\u77e5\u9053\uff1a35|x\uff0c21|y\uff0c15|z x = 35t-1=3s, \u5373\u5b58\u5728\u6574\u6570s,t\u4f7f\u5f9735t-3s=1 \u53ef\u4ee5\u5f97\u51fa\u4e00\u7ec4\u89e3\uff1a \\[\\begin{cases} x=70\\\\ y=21\\\\ z=15\\\\ \\end{cases} \\] \u5373\uff1a \\(k=70a+21b+15c(mod \\quad105)\\) ,\u4f59\u6570\u5c31\u662fk\u7684\u503c \u6839\u636e\u4e0a\u8ff0\u518d\u6c42\u4f8b1 \\(x = 70*1+21*3+15*5 (mod\\quad105)=208\\quad mod \\quad105=103\u3002\\) \u7528\u73b0\u4ee3\u6570\u5b66\u7684\u8bed\u8a00\u8bf4\u660e\uff0c\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7684\u4e00\u5143\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4\uff1a \\[(S):\\begin{cases} x \\equiv a_1 \\quad (mod \\quad m_1)\\\\ x \\equiv a_2 \\quad (mod \\quad m_2)\\\\ \\quad\\vdots \\\\ x \\equiv a_n \\quad (mod \\quad m_n)\\\\ \\end{cases} \\] \u6574\u6570 \\(m_1\\) \u3001 \\(m_2\\) \\(\\cdots\\) \\(m_n\\) \u4e24\u4e24\u4e92\u8d28\uff0c\u5219\u5bf9\u4efb\u610f\u7684\u6574\u6570 \\(a_1\\) \u3001 \\(a_2\\) \\(\\cdots\\) \\(a_n\\) \u65b9\u7a0b\u7ec4\uff08S\uff09\u6709\u89e3\uff1b \\(x=a_1y_1+a_2y_2+\\cdots+a_ny_n(mod \\quad m_1m_2\\cdots m_n)\\) \u5176\u4e2d \\(y_1=(m_2\\cdots m_n)t-1=m_1s\\) \uff0c\u56e0\u4e3a \\((m1,m_2\\cdots m_n)=1\\) ,\u6ee1\u8db3\u6761\u4ef6\u7684\u6574\u6570s,t\u4e00\u5b9a\u5b58\u5728\u3002 \u516d\u3001\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u62d3\u5c55 \u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u8981\u6c42\u6a21\u6570\u4e24\u4e24\u4e92\u8d28\uff0c\u800c\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u8981\u89e3\u51b3\u7684\u90fd\u662f \\(m_i\\) \u4e0d\u4e92\u8d28\u95ee\u9898\uff0c\u8fd9\u5c31\u63a8\u5e7f\u5230\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u62d3\u5c55\uff01 \u4ece\u53ea\u542b\u6709\u4e24\u4e2a\u7684\u65b9\u7a0b\u7684\u540c\u4f59\u65b9\u7a0b\u7ec4\u5f00\u59cb \\[\\begin{cases} x \\equiv a_1(mod \\quad m_1)\\\\ x \\equiv a_2(mod \\quad m_2) \\end{cases} \\] \u7b49\u4ef7\u4e8e \\[\\begin{cases} x = a_1+k_1m_1\\\\ x =a_2+k_2m_2 \\tag{1} \\end{cases} \\] \u6d88\u53bbx\u540e\u5f97 \\[a_1+k_1m_1=a_2+k_2m_2 \\tag{2} \\] \u56e0\u4e3a\u6a21\u6570\u4e0d\u662f\u4e24\u4e24\u4e92\u8d28\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u662f\u5426\u5b58\u5728\u6574\u6570\u89e3\u5c31\u9700\u8981\u8003\u8651\u4e00\u4e0b\u3002\u6839\u636e\u88f4\u8700\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5982\u679c \\(gcd(m_1,m_2)|(a_1,a_2)\\) \u90a3\u4e48\u8fd9\u4e2a\u65b9\u7a0b\u4e00\u5b9a\u6709\u6574\u6570\u89e3\uff0c\u5426\u5219\u4e0d\u5b58\u5728\u6574\u6570\u89e3\u3002 \u5f53\u5b83\u5b58\u5728\u6574\u6570\u89e3\u7684\u65f6\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6839\u636e\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u5f97\u4e00\u7ec4\u7279\u6b8a\u89e3 \\((k_1',k_2')\\) ,\u5c06\u4efb\u610f\u4e00\u4e2a\u89e3\u56de\u4ee3\u5230(1)\u4e2d\uff0c\u5c31\u4f1a\u5f97\u5230\u6ee1\u8db3\u540c\u4f59\u65b9\u7a0b\u7ec4\u7684\u89e3\uff0c\u8bb0 \\(x_0\\) \u3002 \u7531\u6b64\u63a8\u51fa\u6240\u6709\u89e3\uff1a \u6211\u4eec\u8bbe \\(g = gcd(m_1,m_2)\\) ,\u53c8\u7531\u4e8e \\(a_2-a_1\\) \u662f \\(g\\) \u7684\u500d\u6570,\u90a3\u4e48\u53ef\u4ee5\u628a\u65b9\u7a0b\uff081\uff09\u6539\u5199\u4e3a $$ k_1\\frac{m_1}{g}-k_2\\frac{m_2}{g}=\\frac{a_2-a_1}{g}\\tag3 $$ \u8fd9\u6837\u7684\u8bdd\uff0c \\(\\frac{m_1}{g}\u548c\\frac{m_2}{g}\u5c31\u4e92\u8d28\u4e86\\) \uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u7a0b\u6240\u6709\u6574\u6570\u89e3\u5c31\u662f \\[\\begin{cases} k_1= \\frac{m_2}{g}t+k_1'\\\\ k_2= \\frac{m_1}{g}t+k_2' \\end{cases} \\] \u8fd9\u91cc\u7684t\u662f\u4efb\u610f\u6574\u6570\u3002 \u5f80\u56de\u4ee3\u5165\u53ef\u4ee5\u5f97\u5230 \\[x=a_1+k_1m_1 \\\\ =x_0+ \\frac{m_1m_2}{g}t \\\\ =x_0+lcm(m_1,m_2)t \\] \u8fd9\u4e2a\u89e3\u7b49\u4ef7\u4e8e\u540c\u4f59\u65b9\u7a0b $$ z\\equiv x_0(mod \\quad lcm(m_1,m_2)) $$ \u7531\u6b64\u5f97\u51fa\uff0c\u66f4\u5b8c\u6574\u7684\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u5bf9\u4e8e\u4e00\u4e2a\u540c\u4f59\u65b9\u7a0b\u7ec4 \\[\\begin{cases} x\\equiv a_1(mod \\quad m_1)\\\\ x\\equiv a_2(mod \\quad m_2)\\\\ \\quad\\vdots \\\\ x\\equiv a_n(mod \\quad m_n) \\end{cases} \\] \u5b83\u7b49\u4ef7\u4e8e $$ x\\equiv x_0(mod\\quad lcm(m_1,m_2,\\cdots,m_n)) $$ \u8fd9\u91cc \\(x_0\\) \u662f\u8fd9\u4e2a\u65b9\u7a0b\u7684\u4efb\u610f\u89e3\uff0c\u53ef\u4ee5\u901a\u8fc7\u521a\u624d\u7684\u5408\u5e76\u8ba1\u7b97\u5f97\u5230\u3002 \u5341\u4e09\u5c4a\u84dd\u6865\u676f\u4e60\u9898\uff1a \u65b9\u6cd51\uff08\u66b4\u529b\uff09: \u7528\u540e\u9762\u7684\u6570\u627e\u89c4\u5f8b,\u5f97\u7b49\u5dee\u6570\u5217,\u518d\u904d\u5386\u6ee1\u8db3\u524d\u9762\u6761\u4ef6 \u53c2\u8003 \u65b9\u6cd52:\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 math.lcm\u6c42\u6700\u5c0f\u516c\u500d\u6570\uff0cmath.gcd\u6c42\u6700\u5927\u516c\u7ea6\u6570 print(math.lcm(8,41,16)) \u6700\u5927\u516c\u7ea6\u6570\u8bb0\u4e3a(a,b),\u6700\u5c0f\u516c\u500d\u6570\u8bb0\u4e3a[a,b] import math from functools import reduce from sympy import rem import gmpy2 a = [1,2,1,4,5,4,1,2,9,0,5,10,11,14,9,0,11,18,9,11,11,15,17,9,23,20,25,16,29,27,25,11,17,4,29,22,37,23,9,1,11,11,33,29,15,5,41,46] l = [] for i in range(len(a)): l.append(i+2) def zhi(x): for i in range(2,int(x**0.5+1)): if x%i==0: return False else: return True mod_num = [] rem_num = [] for i in range(len(a)): if zhi(l[i]): mod_num.append(l[i]) rem_num.append(a[i]) else: continue print(mod_num) print(rem_num) M = reduce(lambda x,y:x*y,mod_num) Mm = [] y = 0 for i in range(len(mod_num)): t = M//mod_num[i] _,a,_ = gmpy2.gcdext(t,mod_num[i]) Mm.append(int(a%mod_num[i])) y += (t*Mm[i]*rem_num[i]) print(y%M) \u8f93\u51fa\uff1a [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47] [1, 2, 4, 4, 0, 10, 0, 18, 15, 16, 27, 22, 1, 11, 5] 2022040920220409 \u65b9\u6cd53:\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u62d3\u5c55 a = [1,2,1,4,5,4,1,2,9,0,5,10,11,14,9,0,11,18,9,11,11,15,17,9,23,20,25,16,29,27,25,11,17,4,29,22,37,23,9,1,11,11,33,29,15,5,41,46] l = [] for i in range(len(a)): l.append((i+2,a[i])) def exgcd(a, b): global k1, k2 if b == 0: k1, k2 = 1, 0 return a d = exgcd(b, a % b) k1, k2 = k2, k1 k2 -= (a // b) * k1 return d m1 = l[0][0] b1 = l[0][1] flag = 0 for i in range(1,len(l)): m2 = l[i][0] b2 = l[i][1] k1,k2 = 0,0 d = exgcd(m1,m2) if (b2-b1)%d: flag = 1 break k1 *= (b2-b1)//d # k1' = k1 + k * (m2 // d) , k\u53d6\u4efb\u610f\u6574\u6570 t = m2//d k1 = k1%t #\u53d6\u6700\u5c0f\u7684k1 # x = b + km b1 = k1*m1+b1 m1 = m1//d*m2 if flag: print(-1) else: print(b1%m1) #x\u7684\u6700\u5c0f\u6574\u6570\u89e3 \u8f93\u51fa\uff1a 2022040920220409","title":"\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u3001\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"},{"location":"alglearning/mylearning1/#_1","text":"\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\uff0c\u521d\u7b49\u6570\u8bba\u4e2d\uff1a \u82e5 \uff08p,q\uff09=1 \uff0c\u5b58\u5728\u6574\u6570s\uff0ct \u4f7f\u5f97 sp+ tq=1 (x,y)\u8868\u793ax,y\u7684\u6700\u5927\u516c\u7ea6\u6570 [x,y]\u8868\u793ax,y\u7684\u6700\u5c0f\u516c\u500d\u6570 \u5148\u4e3e\u4e2a\u4f8b\u5b50\uff1a gcd(6,16) = gcd(16,6%16) = gcd(16, 6) = gcd(6,16%6) = gcd(6,4) = gcd(4,6%4) = gcd(4,2) = gcd(2,4%2) = gcd(2,0) = 2 \u7531\u6b64\u53ef\u5f97\uff0c\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u5c31\u662f\u8ba1\u7b97\u6700\u5927\u516c\u7ea6\u6570\u7684\u4e00\u4e2a\u7b97\u6cd5\uff0c\u9012\u63a8\u5f0f\u4e3a\uff1a gcd(a , b)= gcd(b , a % b) \u76f4\u5230a,b\u4e2d\u6709\u4e00\u4e2a\u6570\u4e3a0\uff0c\u53ef\u5f97\u5230\u4ed6\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002 \u600e\u4e48\u8bc1\u660e\u4e0a\u8ff0\u5f0f\u5b50\u5462\uff1f ` \u4ee4(A , B) = R,\u8bc1\u660e(A,B) = (B,R) \u56e0 (A , B) = R \u5219 A = B * q + R \u4ee4 A = a * u, B = b * u \u5219 R = A - B*q = a * u - b * u * q = u * (a - b * q) = u * n \u5373 u \u662fA,B\u7684\u6700\u5927\u516c\u56e0\u6570\u5219 u \u662fB,R\u7684\u6700\u5927\u516c\u56e0\u6570. \u540c\u7406: \u4ee4 B = b' * v \u4ee4 R = r' * v \u5f97 A = a' * v \u5373 v \u662fB,R\u7684\u6700\u5927\u516c\u56e0\u6570\u5219 v \u662fA,B\u7684\u6700\u5927\u516c\u56e0\u6570. \u8bc1\u660e\u6210\u7acb","title":"\u4e00\u3001\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff08\u8f97\u8f6c\u76f8\u9664\u6cd5\uff09"},{"location":"alglearning/mylearning1/#_2","text":"\u5185\u5bb9\u5982\u4e0b: \\(\u82e5 a , b \u662f\u4efb\u610f\u6574\u6570,\u4e14 gcd \u2061 ( a , b ) = d \uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684\u6574\u6570 x , y , a x + b y \u90fd\u4e00\u5b9a\u662f d \u7684\u500d\u6570\uff0c\u7279\u522b\u5730\uff0c\u4e00\u5b9a\u5b58\u5728\u6574\u6570 x , y\uff0c\u4f7f a x + b y = d \u6210\u7acb\u3002\\) \u63a8\u8bba: a,b \u4e92\u8d28 \u7684 \u5145\u5206\u5fc5\u8981\u6761\u4ef6 \u662f\u5b58\u5728 \u6574\u6570 x,y\u4f7fax+by=1 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5173\u4e8ex\u548cy\u7684\u7ebf\u6027\u65b9\u7a0b ax + by = d\uff0c\u73b0\u5728\u8981\u6c42\u5224\u65ad\u8fd9\u4e2a\u65b9\u7a0b\u662f\u5426\u5b58\u5728\u6574\u6570\u89e3\u3002 \u88f4\u8700\u5b9a\u7406\u544a\u8bc9\u6211\u4eec\uff0cax + by = d\u5b58\u5728\u6574\u6570\u89e3\u5f53\u524d\u4ec5\u5f53 gcd ( a , b ) | d \u3002\u4f8b\u5982\u8bf43x + 6y = 2\u5c31\u4e0d\u5b58\u5728\u6574\u6570\u89e3\uff0c3x + 6y = 3\u5c31\u5b58\u5728\u6574\u6570\u89e3 x =1 ,y = 0 \u3002 \u5982\u4f55\u8bc1\u660e\uff1f\u663e\u7136gcd( a , b) | (ax + by\uff09\uff0c\u5982\u679c\u5b58\u5728\u6574\u6570\u7684\u89e3\u7684\u8bdd\u5fc5\u7136\u6709 gcd ( a , b ) | d \u3002 \u90a3\u4e48\u5728gcd( a, b) | d\u7684\u65f6\u5019\u4e00\u5b9a\u90fd\u5b58\u5728\u6574\u6570\u89e3\u5417\uff1f\u6211\u4eec\u6765\u901a\u8fc7\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u89e3\u91ca\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\uff0c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7684\u7b97\u6cd5\u4e0d\u4ec5\u56de\u7b54\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u800c\u4e14\u8fd8\u628a\u89e3\u6784\u9020\u4e86\u51fa\u6765\u3002 n\u4e2a\u6574\u6570\u7684\u88f4\u8700\u5b9a\u7406: \u8bbea1,a2,a3......an\u4e3an\u4e2a\u6574\u6570\uff0cd\u662f\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u90a3\u4e48\u5b58\u5728\u6574\u6570x1......xn\u4f7f\u5f97x1 a1+x2 a2+...xn*an=d\u3002 \u7279\u522b\u6765\u8bf4\uff0c\u5982\u679ca1...an\u5b58\u5728\u4efb\u610f\u4e24\u4e2a\u6570\u662f\u4e92\u8d28\u7684\uff08\u4e0d\u5fc5\u6ee1\u8db3\u4e24\u4e24\u4e92\u8d28\uff09\uff0c\u90a3\u4e48\u5b58\u5728\u6574\u6570x1......xn\u4f7f\u5f97x1 * a1 + x2 * a2+...xn * an=1\u3002\u8bc1\u6cd5\u7c7b\u4f3c\u4e24\u4e2a\u6570\u7684\u60c5\u51b5\u3002","title":"\u4e8c\u3001\u88f4\u8700\u5b9a\u7406"},{"location":"alglearning/mylearning1/#_3","text":"\u5b9a\u4e49: \u5728\u5f97\u5230\u6574\u6570a,b\u7684\u6700\u5927\u516c\u7ea6\u6570\u540e,\u8fd8\u5e0c\u671b\u5f97\u5230\u6574\u6570x,y:\u4f7f\u5f97ax+by=gcd(a,b) 1\u3001 \\(\u5bf9\u4e8e\u6574\u6570a>b\u663e\u7136b=0\u65f6,gcd(a,b) = a;\u6b64\u65f6x=1,y=0\\) 2\u3001 \\(\u8bbeax_1+by_1=gcd(a,b)\\) 3\u3001 \\(\u6709bx_2 + (a\\%b)y_2=gcd(b,a\\%b)\\) 4\u3001 \\(\u7531\u4e8egcd(a,b)=gcd(b,a\\%b),\u90a3\u4e48ax_1+by_1=bx_2+(a\\%b)y_2\\) 5\u3001 \\(\u5373ax_1+by_1=bx_2+(a-[a/b]*b)y_2=ay_2+bx_2-[a/b]*by_2\\) 6\u3001 \\(\u4e5f\u5c31\u662fax_1+by_1==ay_2+b(x_2-[a/b]*y_2)\\) 7\u3001 \\(\u6839\u636e\u6052\u7b49\u5f0f\u5b9a\u7406\u5f97:x_1=y_2;y_1=x_2-[a/b]*y_2\\) 8\u3001 \\(\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6c42\u89e3x_1,y_1\u7684\u65b9\u6cd5:x_1,y_1\u7684\u503c\u57fa\u4e8ex_2,y_2\\) 9\u3001\u4e0a\u9762\u7684\u601d\u60f3\u662f\u4ee5\u9012\u5f52\u5b9a\u4e49\u7684,gcd\u4e0d\u65ad\u5730\u9012\u5f52\u6c42\u89e3\u4e00\u5b9a\u4f1a\u6709b=0\u7684\u65f6\u5019,\u6240\u4ee5\u9012\u5f52\u53ef\u4ee5\u7ed3\u675f.","title":"\u4e09\u3001\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5"},{"location":"alglearning/mylearning1/#_4","text":"\u4e58\u6cd5\u9006\u5143\u7684\u5b9a\u4e49 \uff1a \u82e5\u5b58\u5728\u6b63\u6574\u6570a,b,p, \u6ee1\u8db3ab = 1(mod p), \u5219\u79f0a \u662fb \u7684\u4e58\u6cd5\u9006\u5143, \u6216\u79f0b \u662fa \u7684\u4e58\u6cd5\u9006\u5143\u3002b \u2261 a-1 (mod p)\uff0ca \u2261 b-1 (mod p) \u6bd4\u5982\u8bf4, \u5728\u6a217 \u610f\u4e49\u4e0b,3 \u7684\u4e58\u6cd5\u9006\u5143\u662f5, \u4e5f\u53ef\u4ee5\u8bf4\u6a217 \u610f\u4e49\u4e0b5\u7684\u4e58\u6cd5\u9006\u5143\u662f3\u3002\u6a2113\u610f\u4e49\u4e0b5\u7684\u9006\u5143\u662f8\u2026\u2026 \u5b58\u5728\u6027 \u770b\u8d77\u6765\u548c\u540c\u4f59\u65b9\u7a0b\u5f88\u76f8\u4f3c\uff08\u5176\u5b9e\u4e0b\u9762\u771f\u7684\u53ef\u4ee5\u7528exgcd\u6c42\u7684\uff01\uff09\uff0c\u5728\u540c\u4f59\u65b9\u7a0b\u4e2d, ab \u2261 1(mod p) \u82e5a \u4e0ep \u4e92\u8d28, \u5219\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u6b63\u6574\u6570\u89e3b, \u6ee1\u8db3b < p\uff0c\u82e5a \u4e0ep \u4e0d\u4e92\u8d28, \u5219\u4e00\u5b9a\u4e0d\u5b58\u5728\u6b63\u6574\u6570\u89e3b. \u6240\u4ee5\u9006\u5143\u8981\u6c42a\u4e0ep\u4e92\u8d28 \u5b9a\u4e49\u51fd\u6570 def exgcd(a,b): global x,y if b == 0: x,y = 1,0 return a d = exgcd(b,a%b) x,y = y,x y -= (a//b)*x return d \u7528gmpy2\u5e93 gmpy2.is_prime(n) # \u5224\u65adn\u662f\u4e0d\u662f\u7d20\u6570 gmpy2.gcd(a,b) # \u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 gmpy2.gcdext(a,b) # \u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 \u8bf4\u660e:gmpy2.gcdext(a,b)\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4(g,s,t) , g =gcd(a,b) , g=as+bt import gmpy2 print(*map(int,gmpy2.gcdext(15,10))) \u8f93\u51fa: 5 1 -1 #\u5373gcd(15,10) = 5 = 1*15+(-1)*10","title":"\u56db\u3001\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u9006\u5143"},{"location":"alglearning/mylearning1/#_5","text":"\u4f8b 1\u3001\u6c42\u6ee1\u8db3\u4e0b\u540c\u4f59\u65b9\u7a0b\u7ec4\u7684x \\[ \\begin{cases} x \\equiv 1(mod\\quad3)\\\\ x \\equiv 3(mod\\quad5)\\\\ x \\equiv 5(mod\\quad7)\\\\ \\end{cases} \\] \\(\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\Updownarrow\\) \u7b49\u4ef7 \\[\\begin{cases} x \\equiv -2(mod\\quad3)\\\\ x \\equiv -2(mod\\quad5)\\\\ x \\equiv -2(mod\\quad7)\\\\ \\end{cases} \\] \u5219\u53ef\u4ee5\u77e5\u9053 3,5,7|(x+2) \\(\\Rightarrow\\) 105|(x+2) \\(\\Rightarrow\\) x=103\u3001103+105 \\(\\cdots\\) \u5373x\u6700\u5c0f\u503c\u4e3a103\u3002 \u4f8b 2\u3001 \\[\\begin{cases} k \\equiv a(mod\\quad3)\\\\ k \\equiv b(mod\\quad5) \\tag{2.1} \\\\ k \\equiv c(mod\\quad7)\\\\ \\end{cases} \\] \u53ef\u4ee5\u5148\u5bfb\u627e\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u65b9\u7a0b\u7ec4 (\u53ef\u770b\u4f5c\u57fa\u7840\u89e3\u7cfb) \\[\\begin{cases} x \\equiv 1(mod\\quad3)\\\\ x \\equiv 0(mod\\quad5)\\\\ x \\equiv 0(mod\\quad7) \\end{cases} \\] \\[\\begin{cases} y \\equiv 0(mod\\quad3)\\\\ y \\equiv 1(mod\\quad5)\\\\ y \\equiv 0(mod\\quad7) \\end{cases} \\] \\[\\begin{cases} z \\equiv 0(mod\\quad3)\\\\ z \\equiv 0(mod\\quad5)\\\\ z \\equiv 1(mod\\quad7) \\end{cases} \\] \u5219\u5f0f2.1\u8bb0\u4e3a \\(k=ax+by+cz \\quad (mod \\quad 105)\\) \u7531\u57fa\u7840\u89e3\u7cfb\u77e5\u9053\uff1a35|x\uff0c21|y\uff0c15|z x = 35t-1=3s, \u5373\u5b58\u5728\u6574\u6570s,t\u4f7f\u5f9735t-3s=1 \u53ef\u4ee5\u5f97\u51fa\u4e00\u7ec4\u89e3\uff1a \\[\\begin{cases} x=70\\\\ y=21\\\\ z=15\\\\ \\end{cases} \\] \u5373\uff1a \\(k=70a+21b+15c(mod \\quad105)\\) ,\u4f59\u6570\u5c31\u662fk\u7684\u503c \u6839\u636e\u4e0a\u8ff0\u518d\u6c42\u4f8b1 \\(x = 70*1+21*3+15*5 (mod\\quad105)=208\\quad mod \\quad105=103\u3002\\) \u7528\u73b0\u4ee3\u6570\u5b66\u7684\u8bed\u8a00\u8bf4\u660e\uff0c\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7684\u4e00\u5143\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4\uff1a \\[(S):\\begin{cases} x \\equiv a_1 \\quad (mod \\quad m_1)\\\\ x \\equiv a_2 \\quad (mod \\quad m_2)\\\\ \\quad\\vdots \\\\ x \\equiv a_n \\quad (mod \\quad m_n)\\\\ \\end{cases} \\] \u6574\u6570 \\(m_1\\) \u3001 \\(m_2\\) \\(\\cdots\\) \\(m_n\\) \u4e24\u4e24\u4e92\u8d28\uff0c\u5219\u5bf9\u4efb\u610f\u7684\u6574\u6570 \\(a_1\\) \u3001 \\(a_2\\) \\(\\cdots\\) \\(a_n\\) \u65b9\u7a0b\u7ec4\uff08S\uff09\u6709\u89e3\uff1b \\(x=a_1y_1+a_2y_2+\\cdots+a_ny_n(mod \\quad m_1m_2\\cdots m_n)\\) \u5176\u4e2d \\(y_1=(m_2\\cdots m_n)t-1=m_1s\\) \uff0c\u56e0\u4e3a \\((m1,m_2\\cdots m_n)=1\\) ,\u6ee1\u8db3\u6761\u4ef6\u7684\u6574\u6570s,t\u4e00\u5b9a\u5b58\u5728\u3002","title":"\u4e94\u3001\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406"},{"location":"alglearning/mylearning1/#_6","text":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u8981\u6c42\u6a21\u6570\u4e24\u4e24\u4e92\u8d28\uff0c\u800c\u4e00\u822c\u60c5\u51b5\u4e0b\u6211\u4eec\u8981\u89e3\u51b3\u7684\u90fd\u662f \\(m_i\\) \u4e0d\u4e92\u8d28\u95ee\u9898\uff0c\u8fd9\u5c31\u63a8\u5e7f\u5230\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u62d3\u5c55\uff01 \u4ece\u53ea\u542b\u6709\u4e24\u4e2a\u7684\u65b9\u7a0b\u7684\u540c\u4f59\u65b9\u7a0b\u7ec4\u5f00\u59cb \\[\\begin{cases} x \\equiv a_1(mod \\quad m_1)\\\\ x \\equiv a_2(mod \\quad m_2) \\end{cases} \\] \u7b49\u4ef7\u4e8e \\[\\begin{cases} x = a_1+k_1m_1\\\\ x =a_2+k_2m_2 \\tag{1} \\end{cases} \\] \u6d88\u53bbx\u540e\u5f97 \\[a_1+k_1m_1=a_2+k_2m_2 \\tag{2} \\] \u56e0\u4e3a\u6a21\u6570\u4e0d\u662f\u4e24\u4e24\u4e92\u8d28\uff0c\u8fd9\u4e2a\u65b9\u7a0b\u662f\u5426\u5b58\u5728\u6574\u6570\u89e3\u5c31\u9700\u8981\u8003\u8651\u4e00\u4e0b\u3002\u6839\u636e\u88f4\u8700\u5b9a\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5982\u679c \\(gcd(m_1,m_2)|(a_1,a_2)\\) \u90a3\u4e48\u8fd9\u4e2a\u65b9\u7a0b\u4e00\u5b9a\u6709\u6574\u6570\u89e3\uff0c\u5426\u5219\u4e0d\u5b58\u5728\u6574\u6570\u89e3\u3002 \u5f53\u5b83\u5b58\u5728\u6574\u6570\u89e3\u7684\u65f6\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u6839\u636e\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u5f97\u4e00\u7ec4\u7279\u6b8a\u89e3 \\((k_1',k_2')\\) ,\u5c06\u4efb\u610f\u4e00\u4e2a\u89e3\u56de\u4ee3\u5230(1)\u4e2d\uff0c\u5c31\u4f1a\u5f97\u5230\u6ee1\u8db3\u540c\u4f59\u65b9\u7a0b\u7ec4\u7684\u89e3\uff0c\u8bb0 \\(x_0\\) \u3002 \u7531\u6b64\u63a8\u51fa\u6240\u6709\u89e3\uff1a \u6211\u4eec\u8bbe \\(g = gcd(m_1,m_2)\\) ,\u53c8\u7531\u4e8e \\(a_2-a_1\\) \u662f \\(g\\) \u7684\u500d\u6570,\u90a3\u4e48\u53ef\u4ee5\u628a\u65b9\u7a0b\uff081\uff09\u6539\u5199\u4e3a $$ k_1\\frac{m_1}{g}-k_2\\frac{m_2}{g}=\\frac{a_2-a_1}{g}\\tag3 $$ \u8fd9\u6837\u7684\u8bdd\uff0c \\(\\frac{m_1}{g}\u548c\\frac{m_2}{g}\u5c31\u4e92\u8d28\u4e86\\) \uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u7a0b\u6240\u6709\u6574\u6570\u89e3\u5c31\u662f \\[\\begin{cases} k_1= \\frac{m_2}{g}t+k_1'\\\\ k_2= \\frac{m_1}{g}t+k_2' \\end{cases} \\] \u8fd9\u91cc\u7684t\u662f\u4efb\u610f\u6574\u6570\u3002 \u5f80\u56de\u4ee3\u5165\u53ef\u4ee5\u5f97\u5230 \\[x=a_1+k_1m_1 \\\\ =x_0+ \\frac{m_1m_2}{g}t \\\\ =x_0+lcm(m_1,m_2)t \\] \u8fd9\u4e2a\u89e3\u7b49\u4ef7\u4e8e\u540c\u4f59\u65b9\u7a0b $$ z\\equiv x_0(mod \\quad lcm(m_1,m_2)) $$ \u7531\u6b64\u5f97\u51fa\uff0c\u66f4\u5b8c\u6574\u7684\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 \u5bf9\u4e8e\u4e00\u4e2a\u540c\u4f59\u65b9\u7a0b\u7ec4 \\[\\begin{cases} x\\equiv a_1(mod \\quad m_1)\\\\ x\\equiv a_2(mod \\quad m_2)\\\\ \\quad\\vdots \\\\ x\\equiv a_n(mod \\quad m_n) \\end{cases} \\] \u5b83\u7b49\u4ef7\u4e8e $$ x\\equiv x_0(mod\\quad lcm(m_1,m_2,\\cdots,m_n)) $$ \u8fd9\u91cc \\(x_0\\) \u662f\u8fd9\u4e2a\u65b9\u7a0b\u7684\u4efb\u610f\u89e3\uff0c\u53ef\u4ee5\u901a\u8fc7\u521a\u624d\u7684\u5408\u5e76\u8ba1\u7b97\u5f97\u5230\u3002 \u5341\u4e09\u5c4a\u84dd\u6865\u676f\u4e60\u9898\uff1a \u65b9\u6cd51\uff08\u66b4\u529b\uff09: \u7528\u540e\u9762\u7684\u6570\u627e\u89c4\u5f8b,\u5f97\u7b49\u5dee\u6570\u5217,\u518d\u904d\u5386\u6ee1\u8db3\u524d\u9762\u6761\u4ef6 \u53c2\u8003 \u65b9\u6cd52:\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406 math.lcm\u6c42\u6700\u5c0f\u516c\u500d\u6570\uff0cmath.gcd\u6c42\u6700\u5927\u516c\u7ea6\u6570 print(math.lcm(8,41,16)) \u6700\u5927\u516c\u7ea6\u6570\u8bb0\u4e3a(a,b),\u6700\u5c0f\u516c\u500d\u6570\u8bb0\u4e3a[a,b] import math from functools import reduce from sympy import rem import gmpy2 a = [1,2,1,4,5,4,1,2,9,0,5,10,11,14,9,0,11,18,9,11,11,15,17,9,23,20,25,16,29,27,25,11,17,4,29,22,37,23,9,1,11,11,33,29,15,5,41,46] l = [] for i in range(len(a)): l.append(i+2) def zhi(x): for i in range(2,int(x**0.5+1)): if x%i==0: return False else: return True mod_num = [] rem_num = [] for i in range(len(a)): if zhi(l[i]): mod_num.append(l[i]) rem_num.append(a[i]) else: continue print(mod_num) print(rem_num) M = reduce(lambda x,y:x*y,mod_num) Mm = [] y = 0 for i in range(len(mod_num)): t = M//mod_num[i] _,a,_ = gmpy2.gcdext(t,mod_num[i]) Mm.append(int(a%mod_num[i])) y += (t*Mm[i]*rem_num[i]) print(y%M) \u8f93\u51fa\uff1a [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47] [1, 2, 4, 4, 0, 10, 0, 18, 15, 16, 27, 22, 1, 11, 5] 2022040920220409 \u65b9\u6cd53:\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u62d3\u5c55 a = [1,2,1,4,5,4,1,2,9,0,5,10,11,14,9,0,11,18,9,11,11,15,17,9,23,20,25,16,29,27,25,11,17,4,29,22,37,23,9,1,11,11,33,29,15,5,41,46] l = [] for i in range(len(a)): l.append((i+2,a[i])) def exgcd(a, b): global k1, k2 if b == 0: k1, k2 = 1, 0 return a d = exgcd(b, a % b) k1, k2 = k2, k1 k2 -= (a // b) * k1 return d m1 = l[0][0] b1 = l[0][1] flag = 0 for i in range(1,len(l)): m2 = l[i][0] b2 = l[i][1] k1,k2 = 0,0 d = exgcd(m1,m2) if (b2-b1)%d: flag = 1 break k1 *= (b2-b1)//d # k1' = k1 + k * (m2 // d) , k\u53d6\u4efb\u610f\u6574\u6570 t = m2//d k1 = k1%t #\u53d6\u6700\u5c0f\u7684k1 # x = b + km b1 = k1*m1+b1 m1 = m1//d*m2 if flag: print(-1) else: print(b1%m1) #x\u7684\u6700\u5c0f\u6574\u6570\u89e3 \u8f93\u51fa\uff1a 2022040920220409","title":"\u516d\u3001\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u62d3\u5c55"},{"location":"bj/mygit/","text":"\u7248\u672c\u63a7\u5236\u5de5\u5177\u7684\u4f5c\u7528\u53ca\u610f\u4e49 \u201c\u4ee3\u7801\u201d\u4f5c\u4e3a\u8f6f\u4ef6\u7814\u53d1\u7684\u6838\u5fc3\u4ea7\u7269\uff0c\u5728\u6574\u4e2a\u5f00\u53d1\u5468\u671f\u90fd\u5728\u9012\u589e\uff0c\u4e0d\u65ad\u5408\u5165\u65b0\u9700\u6c42\u4ee5\u53ca\u89e3\u51b3bug\u7684\u65b0patch\uff0c\u8fd9\u5c31\u9700\u8981\u6709\u4e00\u6b3e\u7cfb\u7edf\uff0c\u80fd\u591f\u5b58\u50a8\u3001\u8ffd\u8e2a\u6587\u4ef6\u7684\u4fee\u6539\u5386\u53f2\uff0c\u8bb0\u5f55\u591a\u4e2a\u7248\u672c\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u3002\u4e8e\u662f\uff0c\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08Version Control Systems\uff09\u5e94\u8fd0\u800c\u751f\u3002 \u7248\u672c\u63a7\u5236\u5de5\u5177\u7684\u4f5c\u7528\uff1a \u5e2e\u52a9\u6211\u4eec\u8bb0\u5f55\u548c\u8ddf\u8e2a\u9879\u76ee\u4e2d\u5404\u6587\u4ef6\u5185\u5bb9\u7684\u4fee\u6539\u53d8\u5316\u3002 \u8bb0\u5f55\u6587\u4ef6\u4fee\u6539\u7684\u624b\u5de5\u505a\u6cd5\uff1a \u590d\u5236\u6587\u4ef6\u4ee5\u5907\u4efd\uff0c\u5728\u5907\u4efd\u7684\u6587\u4ef6\u540d\u4e2d\u6dfb\u52a0\u4e0a\u65e5\u671f\u548c\u65f6\u95f4\u3002 \u9700\u8981\u7248\u672c\u63a7\u5236\u5de5\u5177\u7684\u539f\u56e0\uff1a \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u7c7b\u64cd\u4f5c\u662f\u81ea\u52a8\u8fdb\u884c\u7684\uff0c\u8fd9\u662f\u6211\u4eec\u9700\u8981\u7248\u672c\u63a7\u5236\u5de5\u5177\u7684\u539f\u56e0\u3002 \u7248\u672c\u63a7\u5236\u5de5\u5177\uff08Version Control System\uff09\u7684\u5206\u4e3a3\u7c7b\uff1a \u76f4\u63a5\u8bbf\u95ee\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff1b \u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u6bd4\u5982CVS\u3001SVN\uff1b \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u6bd4\u5982git git\u57fa\u672c\u64cd\u4f5c git config :\u7528\u4e8e\u914d\u7f6e\u7528\u6237\uff0c\u662fgit\u547d\u4ee4\u884c\u4e2d\u7b2c\u4e00\u4e2a\u5fc5\u987b\u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u8bbe\u7f6e\u4e86\u63d0\u4ea4\u65f6\u8981\u4f7f\u7528\u7684\u4f5c\u8005\u59d3\u540d\u548c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 git init :\u7528\u4e8e\u521d\u59cb\u5316\u4e00\u4e2a\u672c\u5730Git\u4ed3\u5e93\uff0cGit\u7684\u5f88\u591a\u547d\u4ee4\u90fd\u9700\u8981\u5728Git\u7684\u4ed3\u5e93\u4e2d\u8fd0\u884c\uff0c\u6240\u4ee5 git init \u662f\u4f7f\u7528Git\u7684\u7b2c\u4e00\u4e2a\u547d\u4ee4\u3002 git clone :\u62f7\u8d1d\u4e00\u4e2aGit\u4ed3\u5e93\u5230\u672c\u5730\uff0c\u8ba9\u81ea\u5df1\u80fd\u591f\u67e5\u770b\u8be5\u9879\u76ee\uff0c\u6216\u8005\u8fdb\u884c\u4fee\u6539\u3002\u5b83\u901a\u8fc7\u4e00\u4e2a\u8fdc\u7a0b\u7684URL\u8bbf\u95ee\u8be5\u4ed3\u5e93\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u7684URL\u88ab\u79f0\u4e3aorigin\u3002 git add :\u7528\u4e8e\u5c06\u6587\u4ef6\u5185\u5bb9\u6dfb\u52a0\u5230\u7d22\u5f15\uff08\u6682\u5b58\u533a\uff09\u3002\u6587\u4ef6\u540d\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u7528\u7a7a\u683c\u9694\u5f00\u3002 git status :\u67e5\u770b\u4ed3\u5e93\u5f53\u524d\u7684\u72b6\u6001\uff0c\u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6\u3002 git commit -m [message] :\u5c06\u6682\u5b58\u533a\u5185\u5bb9\u6dfb\u52a0\u5230\u4ed3\u5e93\u4e2d\uff0c[message]\u662f\u5907\u6ce8\u4fe1\u606f\u3002 git push :\u7528\u4e8e\u4ece\u5c06\u672c\u5730\u7684\u5206\u652f\u7248\u672c\u4e0a\u4f20\u5230\u8fdc\u7a0b\u5e76\u5408\u5e76\u3002 git pull :\u7528\u4e8e\u4ece\u8fdc\u7a0b\u83b7\u53d6\u4ee3\u7801\u5e76\u5408\u5e76\u672c\u5730\u7684\u7248\u672c,\u5177\u4f53\u7528\u6cd5\u4e0e git push \u4e00\u81f4\u3002 git log :\u67e5\u770b\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55\u3002 git reset :\u7528\u4e8e\u56de\u9000\u7248\u672c\uff0c\u53ef\u4ee5\u6307\u5b9a\u9000\u56de\u67d0\u4e00\u6b21\u63d0\u4ea4\u7684\u7248\u672c\u3002 git branch :\u7528\u4e8e\u521b\u5efa\u3001\u5217\u51fa\u3001\u91cd\u547d\u540d\u548c\u5220\u9664\u5206\u652f\u3002 git push <\u8fdc\u7a0b\u4e3b\u673a\u540d> <\u672c\u5730\u5206\u652f\u540d>:<\u8fdc\u7a0b\u5206\u652f\u540d>: :git push origin master\u662f\u5c06\u672c\u5730\u7684master\u5206\u652f\u63a8\u9001\u5230origin\u4e3b\u673a\u7684master\u5206\u652f\uff0c\u5f53\u8fdc\u7a0b\u5206\u652f\u540d\u4e0e\u672c\u5730\u5206\u652f\u540d\u76f8\u540c\uff0c\u53ef\u4ee5\u7701\u7565\u3002 git\u6dfb\u52a0\u6240\u6709\u6587\u4ef6 :\u8981\u4e00\u6b21\u6027\u6dfb\u52a0\u4ed3\u5e93\u4e2d\u6240\u6709\u6587\u4ef6\uff0c\u8fd0\u884c\u5e26\u6709-A\u9009\u9879\u7684\u547d\u4ee4 git add -A \uff0c\u4e5f\u53ef\u4ee5\u7528 git add . \u3002 \u6dfb\u52a0\u6240\u6709\u4fee\u6539\u548c\u5220\u9664\u7684\u6587\u4ef6 :\u4f7f\u7528 git add -u ,\u5b83\u5141\u8bb8\u6211\u4eec\u53ea\u5bf9\u4fee\u6539\u548c\u5220\u9664\u7684\u6587\u4ef6\u8fdb\u884c\u5206\u6bb5\u3002 git reset HEAD^ :\u56de\u9000\u6240\u6709\u5185\u5bb9\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\u3002 git branch --list :\u6216 git branch \u5217\u51fa\u7248\u672c\u5e93\u6240\u6709\u53ef\u7528\u7684\u5206\u652f\u3002 git checkout :\u5728\u4e0d\u63d0\u4ea4\u7684\u60c5\u51b5\u4e0b\u4ece\u4e3b\u5e93\u5207\u6362\u5230\u5176\u4ed6\u4efb\u4f55\u53ef\u7528\u7684\u5206\u652f\u3002 git branch -m master :\u4ece\u4efb\u4f55\u5176\u4ed6\u5206\u652f\u5207\u6362\u5230\u4e3b\u5206\u652f\u3002 \u7ec3\u4e60\u7f51\u7ad9: https://learngitbranching.js.org/?locale=zh_CN \u53c2\u8003\u7f51\u7ad9: https://geek-docs.com/git/git-cmds/git-push-details.html https://www.runoob.com/git/git-push.html \u535a\u5ba2\u66f4\u65b0 git add . git commit -m 'message' git push -u origin main mkdocs gh-deploy --force mkdocs\u53c2\u8003\uff1ahttps://squidfunk.github.io/mkdocs-material/publishing-your-site/#with-github-actions","title":"git\u5b66\u4e60"},{"location":"bj/mygit/#_1","text":"\u201c\u4ee3\u7801\u201d\u4f5c\u4e3a\u8f6f\u4ef6\u7814\u53d1\u7684\u6838\u5fc3\u4ea7\u7269\uff0c\u5728\u6574\u4e2a\u5f00\u53d1\u5468\u671f\u90fd\u5728\u9012\u589e\uff0c\u4e0d\u65ad\u5408\u5165\u65b0\u9700\u6c42\u4ee5\u53ca\u89e3\u51b3bug\u7684\u65b0patch\uff0c\u8fd9\u5c31\u9700\u8981\u6709\u4e00\u6b3e\u7cfb\u7edf\uff0c\u80fd\u591f\u5b58\u50a8\u3001\u8ffd\u8e2a\u6587\u4ef6\u7684\u4fee\u6539\u5386\u53f2\uff0c\u8bb0\u5f55\u591a\u4e2a\u7248\u672c\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u3002\u4e8e\u662f\uff0c\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08Version Control Systems\uff09\u5e94\u8fd0\u800c\u751f\u3002 \u7248\u672c\u63a7\u5236\u5de5\u5177\u7684\u4f5c\u7528\uff1a \u5e2e\u52a9\u6211\u4eec\u8bb0\u5f55\u548c\u8ddf\u8e2a\u9879\u76ee\u4e2d\u5404\u6587\u4ef6\u5185\u5bb9\u7684\u4fee\u6539\u53d8\u5316\u3002 \u8bb0\u5f55\u6587\u4ef6\u4fee\u6539\u7684\u624b\u5de5\u505a\u6cd5\uff1a \u590d\u5236\u6587\u4ef6\u4ee5\u5907\u4efd\uff0c\u5728\u5907\u4efd\u7684\u6587\u4ef6\u540d\u4e2d\u6dfb\u52a0\u4e0a\u65e5\u671f\u548c\u65f6\u95f4\u3002 \u9700\u8981\u7248\u672c\u63a7\u5236\u5de5\u5177\u7684\u539f\u56e0\uff1a \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u7c7b\u64cd\u4f5c\u662f\u81ea\u52a8\u8fdb\u884c\u7684\uff0c\u8fd9\u662f\u6211\u4eec\u9700\u8981\u7248\u672c\u63a7\u5236\u5de5\u5177\u7684\u539f\u56e0\u3002 \u7248\u672c\u63a7\u5236\u5de5\u5177\uff08Version Control System\uff09\u7684\u5206\u4e3a3\u7c7b\uff1a \u76f4\u63a5\u8bbf\u95ee\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff1b \u96c6\u4e2d\u5f0f\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u6bd4\u5982CVS\u3001SVN\uff1b \u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u5de5\u5177\uff0c\u6bd4\u5982git","title":"\u7248\u672c\u63a7\u5236\u5de5\u5177\u7684\u4f5c\u7528\u53ca\u610f\u4e49"},{"location":"bj/mygit/#git","text":"git config :\u7528\u4e8e\u914d\u7f6e\u7528\u6237\uff0c\u662fgit\u547d\u4ee4\u884c\u4e2d\u7b2c\u4e00\u4e2a\u5fc5\u987b\u4f7f\u7528\u7684\u547d\u4ee4\uff0c\u8bbe\u7f6e\u4e86\u63d0\u4ea4\u65f6\u8981\u4f7f\u7528\u7684\u4f5c\u8005\u59d3\u540d\u548c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3002 git init :\u7528\u4e8e\u521d\u59cb\u5316\u4e00\u4e2a\u672c\u5730Git\u4ed3\u5e93\uff0cGit\u7684\u5f88\u591a\u547d\u4ee4\u90fd\u9700\u8981\u5728Git\u7684\u4ed3\u5e93\u4e2d\u8fd0\u884c\uff0c\u6240\u4ee5 git init \u662f\u4f7f\u7528Git\u7684\u7b2c\u4e00\u4e2a\u547d\u4ee4\u3002 git clone :\u62f7\u8d1d\u4e00\u4e2aGit\u4ed3\u5e93\u5230\u672c\u5730\uff0c\u8ba9\u81ea\u5df1\u80fd\u591f\u67e5\u770b\u8be5\u9879\u76ee\uff0c\u6216\u8005\u8fdb\u884c\u4fee\u6539\u3002\u5b83\u901a\u8fc7\u4e00\u4e2a\u8fdc\u7a0b\u7684URL\u8bbf\u95ee\u8be5\u4ed3\u5e93\uff0c\u8fdc\u7a0b\u4ed3\u5e93\u7684URL\u88ab\u79f0\u4e3aorigin\u3002 git add :\u7528\u4e8e\u5c06\u6587\u4ef6\u5185\u5bb9\u6dfb\u52a0\u5230\u7d22\u5f15\uff08\u6682\u5b58\u533a\uff09\u3002\u6587\u4ef6\u540d\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u7528\u7a7a\u683c\u9694\u5f00\u3002 git status :\u67e5\u770b\u4ed3\u5e93\u5f53\u524d\u7684\u72b6\u6001\uff0c\u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6\u3002 git commit -m [message] :\u5c06\u6682\u5b58\u533a\u5185\u5bb9\u6dfb\u52a0\u5230\u4ed3\u5e93\u4e2d\uff0c[message]\u662f\u5907\u6ce8\u4fe1\u606f\u3002 git push :\u7528\u4e8e\u4ece\u5c06\u672c\u5730\u7684\u5206\u652f\u7248\u672c\u4e0a\u4f20\u5230\u8fdc\u7a0b\u5e76\u5408\u5e76\u3002 git pull :\u7528\u4e8e\u4ece\u8fdc\u7a0b\u83b7\u53d6\u4ee3\u7801\u5e76\u5408\u5e76\u672c\u5730\u7684\u7248\u672c,\u5177\u4f53\u7528\u6cd5\u4e0e git push \u4e00\u81f4\u3002 git log :\u67e5\u770b\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55\u3002 git reset :\u7528\u4e8e\u56de\u9000\u7248\u672c\uff0c\u53ef\u4ee5\u6307\u5b9a\u9000\u56de\u67d0\u4e00\u6b21\u63d0\u4ea4\u7684\u7248\u672c\u3002 git branch :\u7528\u4e8e\u521b\u5efa\u3001\u5217\u51fa\u3001\u91cd\u547d\u540d\u548c\u5220\u9664\u5206\u652f\u3002 git push <\u8fdc\u7a0b\u4e3b\u673a\u540d> <\u672c\u5730\u5206\u652f\u540d>:<\u8fdc\u7a0b\u5206\u652f\u540d>: :git push origin master\u662f\u5c06\u672c\u5730\u7684master\u5206\u652f\u63a8\u9001\u5230origin\u4e3b\u673a\u7684master\u5206\u652f\uff0c\u5f53\u8fdc\u7a0b\u5206\u652f\u540d\u4e0e\u672c\u5730\u5206\u652f\u540d\u76f8\u540c\uff0c\u53ef\u4ee5\u7701\u7565\u3002 git\u6dfb\u52a0\u6240\u6709\u6587\u4ef6 :\u8981\u4e00\u6b21\u6027\u6dfb\u52a0\u4ed3\u5e93\u4e2d\u6240\u6709\u6587\u4ef6\uff0c\u8fd0\u884c\u5e26\u6709-A\u9009\u9879\u7684\u547d\u4ee4 git add -A \uff0c\u4e5f\u53ef\u4ee5\u7528 git add . \u3002 \u6dfb\u52a0\u6240\u6709\u4fee\u6539\u548c\u5220\u9664\u7684\u6587\u4ef6 :\u4f7f\u7528 git add -u ,\u5b83\u5141\u8bb8\u6211\u4eec\u53ea\u5bf9\u4fee\u6539\u548c\u5220\u9664\u7684\u6587\u4ef6\u8fdb\u884c\u5206\u6bb5\u3002 git reset HEAD^ :\u56de\u9000\u6240\u6709\u5185\u5bb9\u5230\u4e0a\u4e00\u4e2a\u7248\u672c\u3002 git branch --list :\u6216 git branch \u5217\u51fa\u7248\u672c\u5e93\u6240\u6709\u53ef\u7528\u7684\u5206\u652f\u3002 git checkout :\u5728\u4e0d\u63d0\u4ea4\u7684\u60c5\u51b5\u4e0b\u4ece\u4e3b\u5e93\u5207\u6362\u5230\u5176\u4ed6\u4efb\u4f55\u53ef\u7528\u7684\u5206\u652f\u3002 git branch -m master :\u4ece\u4efb\u4f55\u5176\u4ed6\u5206\u652f\u5207\u6362\u5230\u4e3b\u5206\u652f\u3002 \u7ec3\u4e60\u7f51\u7ad9: https://learngitbranching.js.org/?locale=zh_CN \u53c2\u8003\u7f51\u7ad9: https://geek-docs.com/git/git-cmds/git-push-details.html https://www.runoob.com/git/git-push.html","title":"git\u57fa\u672c\u64cd\u4f5c"},{"location":"bj/mygit/#_2","text":"git add . git commit -m 'message' git push -u origin main mkdocs gh-deploy --force mkdocs\u53c2\u8003\uff1ahttps://squidfunk.github.io/mkdocs-material/publishing-your-site/#with-github-actions","title":"\u535a\u5ba2\u66f4\u65b0"},{"location":"cvlearning/myCV/","text":"\u6d4b\u8bd5","title":"CV"},{"location":"cvlearning/myCV/#_1","text":"","title":"\u6d4b\u8bd5"},{"location":"datapv/mydatapv/","text":"\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmatplotlib\u65e0\u6cd5\u5728\u56fe\u8868\u4e2d\u4f7f\u7528\u4e2d\u6587 \u4e00\u3001\u76f4\u63a5\u5728fontproperties\u5c5e\u6027\u540e\u52a0\u5b57\u4f53\u7c7b\u578b,\u4f46\u5b57\u4f53\u7c7b\u578b\u6709\u9650\u3002 from matplotlib.font_manager import FontProperties import matplotlib.pyplot as plt import matplotlib as mpl import numpy as np x = np.linspace(0,10,100) plt.plot(x,np.sin(x),label='sin(x)') plt.plot(x,np.cos(x),label='cos(x)\u51fd\u6570') plt.xlabel('x\u523b\u5ea6',fontproperties='stsong') plt.ylabel('y\u523b\u5ea6',fontproperties='SimHei') plt.legend(prop='SimHei') #\u7ed9\u56fe\u50cf\u52a0\u4e2a\u56fe\u4f8b plt.show() \u4e8c\u3001\u5148\u627e\u5230\u81ea\u5df1\u7535\u8111\u4e0a\u5b57\u4f53\u8def\u5f84\uff0c\u7136\u540e\u8c03\u7528font_manager\u6a21\u5757\u4e2d\u7684FontProperties\u7c7b\uff0c\u5b58\u50a8\u548c\u64cd\u4f5c\u5b57\u4f53\u5c5e\u6027\uff0c\u66f4\u52a0\u5168\u9762\u3002 from matplotlib.font_manager import FontProperties import matplotlib.pyplot as plt import matplotlib as mpl import numpy as np font_path = 'C:\\Windows\\Fonts\\simfang.ttf' my_font = mpl.font_manager.FontProperties(fname=font_path) x = np.linspace(0,10,100) plt.plot(x,np.sin(x)) plt.title('sin\u51fd\u6570',fontproperties=my_font) plt.xlabel('x\u523b\u5ea6',fontproperties=my_font) plt.ylabel('y\u523b\u5ea6',fontproperties=my_font) plt.show() \u4e09\u3001\u76f4\u63a5\u5728\u5bfc\u5165\u6a21\u5757\u65f6\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801 plt.rcParams['font.sans-serif'] = ['SimHei'] #\u7528\u6765\u6b63\u5e38\u663e\u793a\u4e2d\u6587\u6807\u7b7e plt.rcParams['axes.unicode_minus'] = False #\u7528\u6765\u6b63\u5e38\u663e\u793a\u8d1f\u53f7 font_manager\u6a21\u5757FontProperties\u7c7b\u7684\u4f7f\u7528\uff1ahttps://blog.csdn.net/mighty13/article/details/116243372","title":"matplotlib\u4e2d\u6587\u7f16\u7801"},{"location":"dl/%E5%88%9D%E5%A7%8B%E5%8C%96/","text":"\u903b\u8f91\u56de\u5f52\u4e0e\u795e\u7ecf\u7f51\u7edc\u7684\u5173\u7cfb\uff1a \u903b\u8f91\u56de\u5f52\u53ef\u4ee5\u770b\u4f5c\u662f\u53ea\u6709\u4e2a\u795e\u7ecf\u5143\u7684\u5355\u5c42\u795e\u7ecf\u7f51\u7edc\uff0c\u795e\u7ecf\u7f51\u7edc\u5c31\u662f\u4e00\u7ec4\u795e\u7ecf\u5143\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u7f51\u7edc\uff0c\u9690\u85cf\u5c42\u53ef\u4ee5\u6709\u591a\u4e2a\u795e\u7ecf\u5143\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u672c\u8eab\u5c31\u5bf9\u5e94\u7740\u4e00\u4e2a\u903b\u8f91\u56de\u5f52\u8fc7\u7a0b\u3002 \u795e\u7ecf\u7f51\u7edc\u7684\u6743\u91cd\u4e0d\u80fd\u5168\u4e3a0\u7684\u539f\u56e0\uff1a \u795e\u7ecf\u7f51\u7edc\u7684\u6743\u91cdw \u7684\u4e0d\u540c\u4ee3\u8868\u8f93\u5165\u7684\u5411\u91cf\u6709\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u5373\u6743\u91cd\u8d8a\u5927\u7684\u7279\u5f81\u8d8a\u91cd\u8981\uff0c\u6bd4\u5982\u5728\u4eba\u8138\u8bc6\u522b\u4e2d\uff0c\u4eba\u8138\u7684\u5c5e\u6027\u6709\u773c\u775b\uff0c\u9f3b\u5b50\uff0c\u5634\u5df4\uff0c\u7709\u6bdb\uff0c\u5176\u4e2d\u773c\u775b\u66f4\u80fd\u591f\u5f71\u54cd\u4eba\u8138\u7684\u8bc6\u522b\uff0c\u6240\u4ee5\u6211\u4eec\u7ed9\u4e0e\u773c\u775b\u66f4\u5927\u7684\u6743\u91cd\u3002 \u5982\u679c\u5c06\u6743\u91cd\u521d\u59cb\u5316\u5168\u4e3a0\uff0c\u90a3\u4e48\u9690\u85cf\u5c42\u7684\u5404\u4e2a\u795e\u7ecf\u5143\u7684\u7ed3\u679c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4ece\u800c\u6b63\u5411\u4f20\u64ad\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u53cd\u5411\u4f20\u64ad\u6c42\u5f97\u7684\u68af\u5ea6\u4e5f\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u7ba1\u7ecf\u8fc7\u591a\u5c11\u6b21\u8fed\u4ee3\uff0c\u66f4\u65b0\u7684w(i)\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u6837\u5c31\u5224\u65ad\u4e0d\u4e86\u54ea\u4e2a\u7279\u5f81\u6bd4\u8f83\u91cd\u8981\u4e86\u3002 \u56e0\u6b64\uff0c\u521d\u59cbw\u4e0d\u540c\uff0c\u53ef\u4ee5\u5b66\u5230\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u5982\u679c\u90fd\u662f0\u6216\u67d0\u4e2a\u503c\uff0c\u7531\u4e8e\u8ba1\u7b97\u65b9\u5f0f\u76f8\u540c\uff0c\u53ef\u80fd\u8fbe\u4e0d\u5230\u5b66\u4e60\u4e0d\u540c\u7279\u5f81\u7684\u76ee\u7684\u3002 \u903b\u8f91\u56de\u5f52\u7684\u6743\u91cd\u53ef\u4ee5\u521d\u59cb\u5316\u4e3a0\u7684\u539f\u56e0\uff1a Logistic\u56de\u5f52\u6ca1\u6709\u9690\u85cf\u5c42\u3002 \u5982\u679c\u5c06\u6743\u91cd\u521d\u59cb\u5316\u4e3a\u96f6\uff0c\u5219Logistic\u56de\u5f52\u4e2d\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8bx\u5c06\u8f93\u51fa\u96f6\uff0c\u4f46Logistic\u56de\u5f52\u7684\u5bfc\u6570\u53d6\u51b3\u4e8e\u4e0d\u662f\u96f6\u7684\u8f93\u5165x\uff08\u56e0\u4e3a\u6ca1\u6709\u9690\u85cf\u5c42\uff09\u3002 \u56e0\u6b64\uff0c\u5728\u7b2c\u4e8c\u6b21\u8fed\u4ee3\uff08\u8fed\u4ee3\u53d1\u751f\u5728w\u548cb\u503c\u7684\u66f4\u65b0\u4e2d\uff0c\u5373\u68af\u5ea6\u4e0b\u964d\uff09\u4e2d\uff0c\u5982\u679cx\u4e0d\u662f\u5e38\u91cf\u5411\u91cf\uff0c\u5219\u6743\u503c\u9075\u5faax\u7684\u5206\u5e03\u5e76\u4e14\u5f7c\u6b64\u4e0d\u540c\u3002 \u5b9e\u73b0 W:\u6743\u91cd\u77e9\u9635\uff0c\u7ef4\u5ea6\u4e3a\uff08layers_dims[1], layers_dims[0]\uff09 1\u3001\u96f6\u521d\u59cb\u5316 parameters = {} L = len(layers_dims) #\u7f51\u7edc\u5c42\u6570 for l in range(1,L): parameters[\"W\" + str(l)] = np.zeros((layers_dims[l],layers_dims[l-1])) 2\u3001\u968f\u673a\u521d\u59cb\u5316 parameters[\"W\" + str(l)] = np.random.randn(layers_dims[l],layers_dims[l-1])*10 3\u3001\u6291\u68af\u5ea6\u5f02\u5e38\u521d\u59cb\u5316 parameters[\"W\" + str(l)] = np.random.randn(layers_dims[l],layers_dims[l-1])*np.sqrt(2/layers_dims[l-1])","title":"\u795e\u7ecf\u7f51\u7edc\u6743\u91cd\u521d\u59cb\u53160\u95ee\u9898"},{"location":"dl/%E5%88%9D%E5%A7%8B%E5%8C%96/#_1","text":"W:\u6743\u91cd\u77e9\u9635\uff0c\u7ef4\u5ea6\u4e3a\uff08layers_dims[1], layers_dims[0]\uff09 1\u3001\u96f6\u521d\u59cb\u5316 parameters = {} L = len(layers_dims) #\u7f51\u7edc\u5c42\u6570 for l in range(1,L): parameters[\"W\" + str(l)] = np.zeros((layers_dims[l],layers_dims[l-1])) 2\u3001\u968f\u673a\u521d\u59cb\u5316 parameters[\"W\" + str(l)] = np.random.randn(layers_dims[l],layers_dims[l-1])*10 3\u3001\u6291\u68af\u5ea6\u5f02\u5e38\u521d\u59cb\u5316 parameters[\"W\" + str(l)] = np.random.randn(layers_dims[l],layers_dims[l-1])*np.sqrt(2/layers_dims[l-1])","title":"\u5b9e\u73b0"},{"location":"ml/classifyalg/","text":"","title":"\u5206\u7c7b\u7b97\u6cd5"},{"location":"ml/clusteralg/","text":"","title":"\u805a\u7c7b\u7b97\u6cd5"},{"location":"ml/jiangwei/","text":"\u4e00\u3001\u4ec0\u4e48\u662f\u964d\u7ef4\uff1f \u6570\u636e\u964d\u7ef4\u662f\u6307\u901a\u8fc7\u7ebf\u6027\u6216\u975e\u7ebf\u6027\u6620\u5c04\u5c06\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u539f\u59cb\u6570\u636e\u6295\u5f71\u5230\u4f4e\u7ef4\u7a7a\u95f4\uff0c\u5e76\u4e14\u8fd9\u79cd\u4f4e\u7ef4\u8868\u793a\u5bf9\u539f\u59cb\u6570\u636e\u5bc6\u5207\u76f8\u5173\uff0c\u4ecd\u80fd\u80fd\u53cd\u6620\u9ad8\u7ef4\u6570\u636e\u7684\u89c4\u5f8b\u3002 \u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u964d\u7ef4\uff1f \u76f4\u89c2\u7684\u597d\u5904\u5c31\u662f\u7ef4\u5ea6\u964d\u4f4e\u4e86\uff0c \u4fbf\u4e8e\u8ba1\u7b97\u548c\u53ef\u89c6\u5316 \u3002\u5176\u672c\u8d28\u5c31\u662f \u5bf9\u6709\u6548\u4fe1\u606f\u7684\u63d0\u53d6\u7efc\u5408 \u4ee5\u53ca \u5bf9\u65e0\u6548\u4fe1\u606f\u7684\u6452\u5f03 \uff0c\u5e76\u4e14\u6570\u636e\u964d\u7ef4\u4fdd\u7559\u4e86\u539f\u59cb\u6570\u636e\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u964d\u7ef4\u540e\u7684\u6570\u636e\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u9884\u6d4b\uff0c\u6709\u6548\u5730 \u63d0\u9ad8\u4e86\u6a21\u578b\u8bad\u7ec3\u548c\u9884\u6d4b\u7684\u6548\u7387 \u3002 \u4e09\u3001\u5e38\u7528\u7684\u964d\u7ef4\u65b9\u6cd5 \u5206\u7c7b\uff1a\u6839\u636e\u6570\u636e\u7684\u7279\u6027\u53ef\u4ee5\u5212\u5206\u4e3a\u7ebf\u6027\u964d\u7ef4\u548c\u975e\u7ebf\u6027\u964d\u7ef4\uff1b\u6839\u636e\u662f\u5426\u8003\u8651\u548c\u5229\u7528\u6570\u636e\u7684\u76d1\u7763\u4fe1\u606f\u53ef\u4ee5\u5212\u5206\u4e3a\u65e0\u76d1\u7763\u964d\u7ef4\u3001\u6709\u76d1\u7763\u964d\u7ef4\u548c\u534a\u76d1\u7763\u964d\u7ef4\uff1b\u6839\u636e\u4fdd\u6301\u6570\u636e\u7684\u7ed3\u6784\u53ef\u4ee5\u5206\u4e3a\u5168\u5c40\u4fdd\u6301\u964d\u7ef4\u3001\u5c40\u90e8\u4fdd\u6301\u964d\u7ef4\u548c\u5168\u5c40\u4e0e\u5c40\u90e8\u4fdd\u6301\u4e00\u81f4\u964d\u7ef4\u7b49\u3002\u9700\u8981\u6839\u636e\u7279\u5b9a\u7684\u95ee\u9898\u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u964d\u7ef4\u65b9\u6cd5\u3002 \u5bf9\u4e8e \u7ebf\u6027\u548c\u975e\u7ebf\u6027\u964d\u7ef4 \uff0c\u975e\u7ebf\u6027\u964d\u7ef4\u53c8\u53ef\u4ee5\u5206\u4e3a \u57fa\u4e8e\u6838\u51fd\u6570 \u548c \u57fa\u4e8e\u7279\u5f81\u503c \u7684\u65b9\u6cd5(\u6d41\u5f62\u5b66\u4e60)\uff0c\u4ee3\u8868\u7b97\u6cd5: \u7ebf\u6027\u964d\u7ef4\u7b97\u6cd5:PCA\u3001ICA\u3001LDA\u3001LFA \u57fa\u4e8e\u6838\u51fd\u6570\u7684\u975e\u7ebf\u6027\u964d\u7ef4\u7b97\u6cd5:KPCA\u3001KFDA \u6d41\u5f62\u5b66\u4e60:ISOMAP\u3001LLE\u3001LE\u3001LPP","title":"\u524d\u8a00"},{"location":"ml/jiangwei/#_1","text":"\u6570\u636e\u964d\u7ef4\u662f\u6307\u901a\u8fc7\u7ebf\u6027\u6216\u975e\u7ebf\u6027\u6620\u5c04\u5c06\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u539f\u59cb\u6570\u636e\u6295\u5f71\u5230\u4f4e\u7ef4\u7a7a\u95f4\uff0c\u5e76\u4e14\u8fd9\u79cd\u4f4e\u7ef4\u8868\u793a\u5bf9\u539f\u59cb\u6570\u636e\u5bc6\u5207\u76f8\u5173\uff0c\u4ecd\u80fd\u80fd\u53cd\u6620\u9ad8\u7ef4\u6570\u636e\u7684\u89c4\u5f8b\u3002","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u964d\u7ef4\uff1f"},{"location":"ml/jiangwei/#_2","text":"\u76f4\u89c2\u7684\u597d\u5904\u5c31\u662f\u7ef4\u5ea6\u964d\u4f4e\u4e86\uff0c \u4fbf\u4e8e\u8ba1\u7b97\u548c\u53ef\u89c6\u5316 \u3002\u5176\u672c\u8d28\u5c31\u662f \u5bf9\u6709\u6548\u4fe1\u606f\u7684\u63d0\u53d6\u7efc\u5408 \u4ee5\u53ca \u5bf9\u65e0\u6548\u4fe1\u606f\u7684\u6452\u5f03 \uff0c\u5e76\u4e14\u6570\u636e\u964d\u7ef4\u4fdd\u7559\u4e86\u539f\u59cb\u6570\u636e\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u964d\u7ef4\u540e\u7684\u6570\u636e\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u9884\u6d4b\uff0c\u6709\u6548\u5730 \u63d0\u9ad8\u4e86\u6a21\u578b\u8bad\u7ec3\u548c\u9884\u6d4b\u7684\u6548\u7387 \u3002","title":"\u4e8c\u3001\u4e3a\u4ec0\u4e48\u8981\u964d\u7ef4\uff1f"},{"location":"ml/jiangwei/#_3","text":"\u5206\u7c7b\uff1a\u6839\u636e\u6570\u636e\u7684\u7279\u6027\u53ef\u4ee5\u5212\u5206\u4e3a\u7ebf\u6027\u964d\u7ef4\u548c\u975e\u7ebf\u6027\u964d\u7ef4\uff1b\u6839\u636e\u662f\u5426\u8003\u8651\u548c\u5229\u7528\u6570\u636e\u7684\u76d1\u7763\u4fe1\u606f\u53ef\u4ee5\u5212\u5206\u4e3a\u65e0\u76d1\u7763\u964d\u7ef4\u3001\u6709\u76d1\u7763\u964d\u7ef4\u548c\u534a\u76d1\u7763\u964d\u7ef4\uff1b\u6839\u636e\u4fdd\u6301\u6570\u636e\u7684\u7ed3\u6784\u53ef\u4ee5\u5206\u4e3a\u5168\u5c40\u4fdd\u6301\u964d\u7ef4\u3001\u5c40\u90e8\u4fdd\u6301\u964d\u7ef4\u548c\u5168\u5c40\u4e0e\u5c40\u90e8\u4fdd\u6301\u4e00\u81f4\u964d\u7ef4\u7b49\u3002\u9700\u8981\u6839\u636e\u7279\u5b9a\u7684\u95ee\u9898\u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u964d\u7ef4\u65b9\u6cd5\u3002 \u5bf9\u4e8e \u7ebf\u6027\u548c\u975e\u7ebf\u6027\u964d\u7ef4 \uff0c\u975e\u7ebf\u6027\u964d\u7ef4\u53c8\u53ef\u4ee5\u5206\u4e3a \u57fa\u4e8e\u6838\u51fd\u6570 \u548c \u57fa\u4e8e\u7279\u5f81\u503c \u7684\u65b9\u6cd5(\u6d41\u5f62\u5b66\u4e60)\uff0c\u4ee3\u8868\u7b97\u6cd5: \u7ebf\u6027\u964d\u7ef4\u7b97\u6cd5:PCA\u3001ICA\u3001LDA\u3001LFA \u57fa\u4e8e\u6838\u51fd\u6570\u7684\u975e\u7ebf\u6027\u964d\u7ef4\u7b97\u6cd5:KPCA\u3001KFDA \u6d41\u5f62\u5b66\u4e60:ISOMAP\u3001LLE\u3001LE\u3001LPP","title":"\u4e09\u3001\u5e38\u7528\u7684\u964d\u7ef4\u65b9\u6cd5"},{"location":"ml/lossfun/","text":"\u635f\u5931\u51fd\u6570\u7684\u5b9a\u4e49 \u635f\u5931\u51fd\u6570\uff0c\u53c8\u53eb\u76ee\u6807\u51fd\u6570\uff0c\u662f\u7f16\u8bd1\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u5fc5\u987b\u7684\u4e24\u4e2a\u53c2\u6570\u4e4b\u4e00\uff0c\u53e6\u4e00\u4e2a\u662f\u4f18\u5316\u5668\u3002\u5176\u672c\u8d28\u5c31\u662f\u8ba1\u7b97\u6807\u7b7e\u503c(\u771f\u5b9e\u503c)\u548c\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\u7684\u51fd\u6570\u3002 \u635f\u5931\u51fd\u6570\u7684\u7528\u9014 \u673a\u5668\u5b66\u4e60\u4e2d\u6709\u591a\u79cd\u635f\u5931\u51fd\u6570\u53ef\u4f9b\u9009\u62e9\uff0c\u6211\u4eec\u5e0c\u671b\u9884\u6d4b\u503c\u65e0\u9650\u63a5\u8fd1\u771f\u5b9e\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u5dee\u503c\u964d\u5230\u6700\u4f4e\uff08\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5c31\u9700\u8981\u5f15\u5165\u635f\u5931\u51fd\u6570\uff09\u3002\u800c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u635f\u5931\u51fd\u6570\u7684\u9009\u62e9\u662f\u5341\u5206\u5173\u952e\u7684\uff0c\u5728\u5177\u4f53\u7684\u9879\u76ee\u4e2d\uff0c\u6709\u4e9b\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u7684\u5dee\u503c\u68af\u5ea6\u4e0b\u964d\u7684\u5feb\uff0c\u800c\u6709\u4e9b\u4e0b\u964d\u7684\u6162\uff0c\u6240\u4ee5\u9009\u62e9\u5408\u9002\u7684\u635f\u5931\u51fd\u6570\u4e5f\u662f\u5341\u5206\u5173\u952e\u7684\u3002 \u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570(\u57fa\u4e8epytorch) \u9996\u5148\u5b9a\u4e49\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u7528\u4e0d\u540c\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u5176\u635f\u5931\u503c\u3002 from random import sample from torch.autograd import Variable import torch import torch.nn as nn sample = Variable(torch.ones(2,2)) a = torch.Tensor(2,2) a[0,0] = 0 a[0,1] = 1 a[1,0] = 2 a[1,1] = 3 target = Variable(a) print(sample) print(target) \u8f93\u51fa\uff1a tensor([[1., 1.], [1., 1.]]) tensor([[0., 1.], [2., 3.]]) 1\u3001L1Loss L1Loss\u5c31\u662f\u53d6\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u7684\u7edd\u5bf9\u8bef\u5dee\u7684\u5e73\u5747\u6570\u3002 \u516c\u5f0f\uff1a \\[loss(x,y)=\\frac{1}{N}\\sum_{i=1}^N|x-y|\\] criterion = nn.L1Loss() #\u5c3a\u5ea6\uff0c\u51c6\u5219 loss = criterion(sample,target) print(loss) #1 2\u3001SmoothL1Loss SmoothL1Loss\u4e5f\u79f0\u4e3aHuber Loss\uff0c\u8bef\u5dee\u5728(-1,1)\u4e0a\u662f\u5e73\u65b9\u635f\u5931\uff0c\u5176\u5b83\u60c5\u51b5\u662fL1\u635f\u5931\u3002 \u516c\u5f0f\uff1a \\[loss(x,y)=\\frac{1}{N}\\begin{cases} \\frac{1}{2}(x_i-y_i)^2, & if|x_i-y_i|<1 \\\\ |x_i-y_i|-\\frac{1}{2}, & otherwise\\\\ \\end{cases} \\] criterion = nn.SmoothL1Loss() loss = criterion(sample,target) print(loss) #0.625 3\u3001MSELoss(\u5747\u65b9\u8bef\u5dee) \u8ba1\u7b97\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u5e73\u65b9\u548c\u7684\u5e73\u5747\u6570\u3002 \u516c\u5f0f\uff1a \\[loss(x,y)=\\frac{1}{N}\\sum_{i=1}^{N}|x-y|^2\\] criterion = nn.MSELoss() loss = criterion(sample,target) print(loss) #1.5 4\u3001BCELoss \u4e8c\u5206\u7c7b\u7528\u7684\u4ea4\u53c9\u71b5\uff0c\u8ba1\u7b97\u516c\u5f0f\u8f83\u4e3a\u590d\u6742\u3002 \u516c\u5f0f\uff1a \\[loss(o,t)=-\\frac{1}{N}\\sum_{i=1}^{N}[t_i*log(o_i)+(1-t_i)*log(1-o_i)]\\] criterion = nn.BCELoss() loss = criterion(sample,target) print(loss) #-13.8155 5\u3001CrossEntropyLoss \u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\uff0c\u5728\u56fe\u50cf\u5206\u7c7b\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e2d\u5e38\u7528\u8be5\u516c\u5f0f\u3002 \u516c\u5f0f\uff1a \\[loss(x,label)=-log\\frac{e^{x_{label}}}{\\sum_{j=1}^{N}e^{x_{j}}} =-x_{label}+log\\sum_{j=1}^{N}e^{x_{j}}\\] 6\u3001NLLLoss \u8d1f\u5bf9\u6570\u4f3c\u7136\u635f\u5931\u51fd\u6570(Negative Log Likelihood),\u5728\u524d\u9762\u63a5\u4e00\u4e2a LogSoftMax \u5c42\u5c31\u7b49\u4ef7\u4e8e\u4ea4\u53c9\u71b5\u635f\u5931\u4e86\u3002\u6ce8\u610f\u8fd9\u91cc\u7684x,label\u548c\u4e0a\u4e2a\u4ea4\u53c9\u71b5\u635f\u5931\u91cc\u7684\u4e0d\u540c\uff0c\u8fd9\u91cc\u662f\u7ecf\u8fc7log\u8fd0\u7b97\u540e\u7684\u6570\u503c\u3002\u8be5\u635f\u5931\u51fd\u6570\u4e00\u822c\u4e5f\u7528\u5230\u56fe\u50cf\u8bc6\u522b\u6a21\u578b\u4e0a\u3002 \u516c\u5f0f\uff1a \\[loss(x,label)=-x_{label}\\] NLLLoss\u548cCrossEntropyLoss\u7684\u529f\u80fd\u5f88\u76f8\u4f3c\uff0c\u901a\u5e38\u90fd\u7528\u5230\u591a\u5206\u7c7b\u6a21\u578b\u4e2d\uff0c\u5b9e\u9645\u5e94\u7528\u4e2dNLLLoss\u635f\u5931\u51fd\u6570\u7684\u4f7f\u7528\u66f4\u591a\u3002 7\u3001NLLLoss2d \u4e0e\u4e0a\u8ff0\u635f\u5931\u51fd\u6570\u7c7b\u4f3c\uff0c\u591a\u4e86\u51e0\u4e2a\u7ef4\u5ea6\uff0c\u4e00\u822c\u7528\u5230\u56fe\u7247\u4e0a\u3002\u6bd4\u5982\u7528\u5168\u5377\u79ef\u7f51\u7edc\u5206\u7c7b\u65f6\uff0c\u6700\u540e\u56fe\u7247\u7684\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u9884\u6d4b\u4e00\u4e2a\u7c7b\u522b\u6807\u7b7e\u3002 input,(N,C,H,W) target,(N,H,W) softmax\u53c2\u8003 \u4ea4\u53c9\u71b5\u53c2\u8003 https://blog.csdn.net/yeldon/article/details/109020841","title":"\u635f\u5931\u51fd\u6570"},{"location":"ml/lossfun/#_1","text":"\u635f\u5931\u51fd\u6570\uff0c\u53c8\u53eb\u76ee\u6807\u51fd\u6570\uff0c\u662f\u7f16\u8bd1\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u5fc5\u987b\u7684\u4e24\u4e2a\u53c2\u6570\u4e4b\u4e00\uff0c\u53e6\u4e00\u4e2a\u662f\u4f18\u5316\u5668\u3002\u5176\u672c\u8d28\u5c31\u662f\u8ba1\u7b97\u6807\u7b7e\u503c(\u771f\u5b9e\u503c)\u548c\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\u7684\u51fd\u6570\u3002","title":"\u635f\u5931\u51fd\u6570\u7684\u5b9a\u4e49"},{"location":"ml/lossfun/#_2","text":"\u673a\u5668\u5b66\u4e60\u4e2d\u6709\u591a\u79cd\u635f\u5931\u51fd\u6570\u53ef\u4f9b\u9009\u62e9\uff0c\u6211\u4eec\u5e0c\u671b\u9884\u6d4b\u503c\u65e0\u9650\u63a5\u8fd1\u771f\u5b9e\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u5dee\u503c\u964d\u5230\u6700\u4f4e\uff08\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5c31\u9700\u8981\u5f15\u5165\u635f\u5931\u51fd\u6570\uff09\u3002\u800c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u635f\u5931\u51fd\u6570\u7684\u9009\u62e9\u662f\u5341\u5206\u5173\u952e\u7684\uff0c\u5728\u5177\u4f53\u7684\u9879\u76ee\u4e2d\uff0c\u6709\u4e9b\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u7684\u5dee\u503c\u68af\u5ea6\u4e0b\u964d\u7684\u5feb\uff0c\u800c\u6709\u4e9b\u4e0b\u964d\u7684\u6162\uff0c\u6240\u4ee5\u9009\u62e9\u5408\u9002\u7684\u635f\u5931\u51fd\u6570\u4e5f\u662f\u5341\u5206\u5173\u952e\u7684\u3002","title":"\u635f\u5931\u51fd\u6570\u7684\u7528\u9014"},{"location":"ml/lossfun/#pytorch","text":"\u9996\u5148\u5b9a\u4e49\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u7528\u4e0d\u540c\u635f\u5931\u51fd\u6570\u8ba1\u7b97\u5176\u635f\u5931\u503c\u3002 from random import sample from torch.autograd import Variable import torch import torch.nn as nn sample = Variable(torch.ones(2,2)) a = torch.Tensor(2,2) a[0,0] = 0 a[0,1] = 1 a[1,0] = 2 a[1,1] = 3 target = Variable(a) print(sample) print(target) \u8f93\u51fa\uff1a tensor([[1., 1.], [1., 1.]]) tensor([[0., 1.], [2., 3.]])","title":"\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570(\u57fa\u4e8epytorch)"},{"location":"ml/lossfun/#1l1loss","text":"L1Loss\u5c31\u662f\u53d6\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u7684\u7edd\u5bf9\u8bef\u5dee\u7684\u5e73\u5747\u6570\u3002 \u516c\u5f0f\uff1a \\[loss(x,y)=\\frac{1}{N}\\sum_{i=1}^N|x-y|\\] criterion = nn.L1Loss() #\u5c3a\u5ea6\uff0c\u51c6\u5219 loss = criterion(sample,target) print(loss) #1","title":"1\u3001L1Loss"},{"location":"ml/lossfun/#2smoothl1loss","text":"SmoothL1Loss\u4e5f\u79f0\u4e3aHuber Loss\uff0c\u8bef\u5dee\u5728(-1,1)\u4e0a\u662f\u5e73\u65b9\u635f\u5931\uff0c\u5176\u5b83\u60c5\u51b5\u662fL1\u635f\u5931\u3002 \u516c\u5f0f\uff1a \\[loss(x,y)=\\frac{1}{N}\\begin{cases} \\frac{1}{2}(x_i-y_i)^2, & if|x_i-y_i|<1 \\\\ |x_i-y_i|-\\frac{1}{2}, & otherwise\\\\ \\end{cases} \\] criterion = nn.SmoothL1Loss() loss = criterion(sample,target) print(loss) #0.625","title":"2\u3001SmoothL1Loss"},{"location":"ml/lossfun/#3mseloss","text":"\u8ba1\u7b97\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u5e73\u65b9\u548c\u7684\u5e73\u5747\u6570\u3002 \u516c\u5f0f\uff1a \\[loss(x,y)=\\frac{1}{N}\\sum_{i=1}^{N}|x-y|^2\\] criterion = nn.MSELoss() loss = criterion(sample,target) print(loss) #1.5","title":"3\u3001MSELoss(\u5747\u65b9\u8bef\u5dee)"},{"location":"ml/lossfun/#4bceloss","text":"\u4e8c\u5206\u7c7b\u7528\u7684\u4ea4\u53c9\u71b5\uff0c\u8ba1\u7b97\u516c\u5f0f\u8f83\u4e3a\u590d\u6742\u3002 \u516c\u5f0f\uff1a \\[loss(o,t)=-\\frac{1}{N}\\sum_{i=1}^{N}[t_i*log(o_i)+(1-t_i)*log(1-o_i)]\\] criterion = nn.BCELoss() loss = criterion(sample,target) print(loss) #-13.8155","title":"4\u3001BCELoss"},{"location":"ml/lossfun/#5crossentropyloss","text":"\u4ea4\u53c9\u71b5\u635f\u5931\u51fd\u6570\uff0c\u5728\u56fe\u50cf\u5206\u7c7b\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e2d\u5e38\u7528\u8be5\u516c\u5f0f\u3002 \u516c\u5f0f\uff1a \\[loss(x,label)=-log\\frac{e^{x_{label}}}{\\sum_{j=1}^{N}e^{x_{j}}} =-x_{label}+log\\sum_{j=1}^{N}e^{x_{j}}\\]","title":"5\u3001CrossEntropyLoss"},{"location":"ml/lossfun/#6nllloss","text":"\u8d1f\u5bf9\u6570\u4f3c\u7136\u635f\u5931\u51fd\u6570(Negative Log Likelihood),\u5728\u524d\u9762\u63a5\u4e00\u4e2a LogSoftMax \u5c42\u5c31\u7b49\u4ef7\u4e8e\u4ea4\u53c9\u71b5\u635f\u5931\u4e86\u3002\u6ce8\u610f\u8fd9\u91cc\u7684x,label\u548c\u4e0a\u4e2a\u4ea4\u53c9\u71b5\u635f\u5931\u91cc\u7684\u4e0d\u540c\uff0c\u8fd9\u91cc\u662f\u7ecf\u8fc7log\u8fd0\u7b97\u540e\u7684\u6570\u503c\u3002\u8be5\u635f\u5931\u51fd\u6570\u4e00\u822c\u4e5f\u7528\u5230\u56fe\u50cf\u8bc6\u522b\u6a21\u578b\u4e0a\u3002 \u516c\u5f0f\uff1a \\[loss(x,label)=-x_{label}\\] NLLLoss\u548cCrossEntropyLoss\u7684\u529f\u80fd\u5f88\u76f8\u4f3c\uff0c\u901a\u5e38\u90fd\u7528\u5230\u591a\u5206\u7c7b\u6a21\u578b\u4e2d\uff0c\u5b9e\u9645\u5e94\u7528\u4e2dNLLLoss\u635f\u5931\u51fd\u6570\u7684\u4f7f\u7528\u66f4\u591a\u3002","title":"6\u3001NLLLoss"},{"location":"ml/lossfun/#7nllloss2d","text":"\u4e0e\u4e0a\u8ff0\u635f\u5931\u51fd\u6570\u7c7b\u4f3c\uff0c\u591a\u4e86\u51e0\u4e2a\u7ef4\u5ea6\uff0c\u4e00\u822c\u7528\u5230\u56fe\u7247\u4e0a\u3002\u6bd4\u5982\u7528\u5168\u5377\u79ef\u7f51\u7edc\u5206\u7c7b\u65f6\uff0c\u6700\u540e\u56fe\u7247\u7684\u6bcf\u4e2a\u70b9\u90fd\u4f1a\u9884\u6d4b\u4e00\u4e2a\u7c7b\u522b\u6807\u7b7e\u3002 input,(N,C,H,W) target,(N,H,W) softmax\u53c2\u8003 \u4ea4\u53c9\u71b5\u53c2\u8003 https://blog.csdn.net/yeldon/article/details/109020841","title":"7\u3001NLLLoss2d"},{"location":"ml/myica/","text":"\u72ec\u7acb\u6210\u5206\u5206\u6790(ICA) ICA\uff1a \u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u5404\u4e2a\u5206\u91cf\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u5229\u7528\u6570\u636e\u7684\u9ad8\u9636\u7edf\u8ba1\u4fe1\u606f\u800c\u4e0d\u662f\u4e8c\u9636\u4fe1\u606f\u5f97\u5230\u7528\u4e8e\u4fe1\u53f7\u5206\u79bb\u7684\u72ec\u7acb\u5b50\u7a7a\u95f4\u3002\u4e0e\u5bfb\u6c42\u6700\u5927\u5316\u6570\u636e\u70b9\u65b9\u5dee\u7684\u4e3b\u6210\u5206\u5206\u6790\u4e0d\u540c\u3002ICA\u662f\u5c06\u591a\u5143\u4fe1\u53f7\u5206\u89e3\u4e3a\u4e0d\u540c\u7684\u975e\u9ad8\u65af\u4fe1\u53f7\u3002\u5b83\u4fa7\u91cd\u4e8e\u72ec\u7acb\u6765\u6e90\u3002\u7531\u4e8e\u6df7\u9891\u5904\u7406\u672a\u77e5\uff0c\u6240\u4ee5\u5e38\u7528ICA\u4f5c\u4e3a\u9ed1\u76d2\u3002 ICA\u7684\u5e94\u7528\uff1a ICA\u5df2\u7528\u4e8e\u5728\u5404\u79cd\u5e94\u7528\u4e2d\u63d0\u53d6\u6e90\u4fe1\u53f7\uff0c\u5305\u62ec\u533b\u7597\u4fe1\u53f7\u3001\u751f\u7269\u6d4b\u8bd5\u548c\u97f3\u9891\u4fe1\u53f7\u3002\u5f53ICA\u53ef\u4ee5\u5220\u9664\u6216\u7ef4\u62a4\u5355\u4e2a\u6e90\u65f6\uff0c\u5b83\u4e5f\u79f0\u4e3a\u964d\u7ef4\u7b97\u6cd5\u3002\u5728\u6b64\u6d3b\u52a8\u671f\u95f4\u53ef\u4ee5\u8fc7\u6ee4\u6216\u5220\u9664\u4e00\u4e9b\u4fe1\u53f7\uff0c\u8fd9\u4e5f\u79f0\u4e3a\u8fc7\u6ee4\u64cd\u4f5c\u3002 FastICA\u3001\u6295\u5f71\u8ffd\u8e2a\u548c Infomax \u53ea\u662f ICA \u7b97\u6cd5\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u8fd9\u4e9b\u7b97\u6cd5\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4f7f\u7528 \u589e\u52a0\u975e\u9ad8\u65af\u6027\u3001\u51cf\u5c11\u4e92\u4fe1\u606f\u3001\u6700\u5927\u4f3c\u7136\u4f30\u8ba1 \u7684\u65b9\u6cd5\u63d0\u53d6\u72ec\u7acb\u5206\u91cf\u3002 FastICA\u7b80\u4ecb\uff1a \u5728\u8bf8\u591aICA\u7b97\u6cd5\u4e2d\uff0c\u56fa\u5b9a\u70b9\u7b97\u6cd5 (\u4e5f\u79f0FastlCA)\u4ee5\u5176\u6536\u655b\u901f\u5ea6\u5feb\u3001\u5206\u79bb\u6548\u679c\u597d\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4fe1\u53f7\u5904\u7406\u9886\u57df\u3002\u8be5\u7b97\u6cd5\u80fd\u5f88\u597d\u5730\u4ece\u89c2\u6d4b\u4fe1\u53f7\u4e2d\u4f30\u8ba1\u51fa\u76f8\u4e92\u7edf\u8ba1\u72ec\u7acb\u7684\u3001\u88ab\u672a\u77e5\u56e0\u7d20\u6df7\u5408\u7684\u539f\u59cb\u4fe1\u53f7\u3002 \u4e0ePCA\u6bd4\u8f83\uff1a ICA\u5bfb\u627e\u7684\u662f\u6700\u80fd\u4f7f\u6570\u636e\u7684\u76f8\u4e92\u72ec\u7acb\u7684\u65b9\u5411\uff0c\u800cPCA\u4ec5\u8981\u6c42\u65b9\u5411\u662f\u4e0d\u76f8\u5173\u7684\u3002 PCA\u8ba4\u4e3a\u4e3b\u5143\u4e4b\u95f4\u5f7c\u6b64\u6b63\u4ea4\uff0c\u6837\u672c\u5448\u9ad8\u65af\u5206\u5e03\uff1bICA\u5219\u4e0d\u8981\u6c42\u6837\u672c\u5448\u9ad8\u65af\u5206\u5e03\u3002 \u63a8\u5bfc\u4e3e\u4f8b\uff1ahttps://blog.csdn.net/lizhe_dashuju/article/details/50263339","title":"ICA"},{"location":"ml/myica/#ica","text":"ICA\uff1a \u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u5404\u4e2a\u5206\u91cf\u4e4b\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u5229\u7528\u6570\u636e\u7684\u9ad8\u9636\u7edf\u8ba1\u4fe1\u606f\u800c\u4e0d\u662f\u4e8c\u9636\u4fe1\u606f\u5f97\u5230\u7528\u4e8e\u4fe1\u53f7\u5206\u79bb\u7684\u72ec\u7acb\u5b50\u7a7a\u95f4\u3002\u4e0e\u5bfb\u6c42\u6700\u5927\u5316\u6570\u636e\u70b9\u65b9\u5dee\u7684\u4e3b\u6210\u5206\u5206\u6790\u4e0d\u540c\u3002ICA\u662f\u5c06\u591a\u5143\u4fe1\u53f7\u5206\u89e3\u4e3a\u4e0d\u540c\u7684\u975e\u9ad8\u65af\u4fe1\u53f7\u3002\u5b83\u4fa7\u91cd\u4e8e\u72ec\u7acb\u6765\u6e90\u3002\u7531\u4e8e\u6df7\u9891\u5904\u7406\u672a\u77e5\uff0c\u6240\u4ee5\u5e38\u7528ICA\u4f5c\u4e3a\u9ed1\u76d2\u3002 ICA\u7684\u5e94\u7528\uff1a ICA\u5df2\u7528\u4e8e\u5728\u5404\u79cd\u5e94\u7528\u4e2d\u63d0\u53d6\u6e90\u4fe1\u53f7\uff0c\u5305\u62ec\u533b\u7597\u4fe1\u53f7\u3001\u751f\u7269\u6d4b\u8bd5\u548c\u97f3\u9891\u4fe1\u53f7\u3002\u5f53ICA\u53ef\u4ee5\u5220\u9664\u6216\u7ef4\u62a4\u5355\u4e2a\u6e90\u65f6\uff0c\u5b83\u4e5f\u79f0\u4e3a\u964d\u7ef4\u7b97\u6cd5\u3002\u5728\u6b64\u6d3b\u52a8\u671f\u95f4\u53ef\u4ee5\u8fc7\u6ee4\u6216\u5220\u9664\u4e00\u4e9b\u4fe1\u53f7\uff0c\u8fd9\u4e5f\u79f0\u4e3a\u8fc7\u6ee4\u64cd\u4f5c\u3002 FastICA\u3001\u6295\u5f71\u8ffd\u8e2a\u548c Infomax \u53ea\u662f ICA \u7b97\u6cd5\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u8fd9\u4e9b\u7b97\u6cd5\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4f7f\u7528 \u589e\u52a0\u975e\u9ad8\u65af\u6027\u3001\u51cf\u5c11\u4e92\u4fe1\u606f\u3001\u6700\u5927\u4f3c\u7136\u4f30\u8ba1 \u7684\u65b9\u6cd5\u63d0\u53d6\u72ec\u7acb\u5206\u91cf\u3002 FastICA\u7b80\u4ecb\uff1a \u5728\u8bf8\u591aICA\u7b97\u6cd5\u4e2d\uff0c\u56fa\u5b9a\u70b9\u7b97\u6cd5 (\u4e5f\u79f0FastlCA)\u4ee5\u5176\u6536\u655b\u901f\u5ea6\u5feb\u3001\u5206\u79bb\u6548\u679c\u597d\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4fe1\u53f7\u5904\u7406\u9886\u57df\u3002\u8be5\u7b97\u6cd5\u80fd\u5f88\u597d\u5730\u4ece\u89c2\u6d4b\u4fe1\u53f7\u4e2d\u4f30\u8ba1\u51fa\u76f8\u4e92\u7edf\u8ba1\u72ec\u7acb\u7684\u3001\u88ab\u672a\u77e5\u56e0\u7d20\u6df7\u5408\u7684\u539f\u59cb\u4fe1\u53f7\u3002 \u4e0ePCA\u6bd4\u8f83\uff1a ICA\u5bfb\u627e\u7684\u662f\u6700\u80fd\u4f7f\u6570\u636e\u7684\u76f8\u4e92\u72ec\u7acb\u7684\u65b9\u5411\uff0c\u800cPCA\u4ec5\u8981\u6c42\u65b9\u5411\u662f\u4e0d\u76f8\u5173\u7684\u3002 PCA\u8ba4\u4e3a\u4e3b\u5143\u4e4b\u95f4\u5f7c\u6b64\u6b63\u4ea4\uff0c\u6837\u672c\u5448\u9ad8\u65af\u5206\u5e03\uff1bICA\u5219\u4e0d\u8981\u6c42\u6837\u672c\u5448\u9ad8\u65af\u5206\u5e03\u3002 \u63a8\u5bfc\u4e3e\u4f8b\uff1ahttps://blog.csdn.net/lizhe_dashuju/article/details/50263339","title":"\u72ec\u7acb\u6210\u5206\u5206\u6790(ICA)"},{"location":"ml/mylda/","text":"LDA(\u7ebf\u6027\u5224\u522b\u5206\u6790) \u7ebf\u6027\u5224\u522b\u5206\u6790(Linear Discriminant Analysis) \u662f\u4e00\u79cd\u6709\u76d1\u7763\u7684\uff08supervised\uff09\u7ebf\u6027\u964d\u7ef4\u7b97\u6cd5\u3002\u4e0ePCA\u4fdd\u6301\u6570\u636e\u4fe1\u606f\u4e0d\u540c\uff0cLDA\u7684\u6838\u5fc3\u601d\u60f3\uff1a\u5f80\u7ebf\u6027\u5224\u522b \u8d85\u5e73\u9762\u7684\u6cd5\u5411\u91cf \u4e0a\u6295\u5f71\uff0c\u5373\u5c06\u6570\u636e\u6295\u5f71\u5230\u4f4e\u7ef4\u7a7a\u95f4\u4e4b\u540e\uff0c\u4f7f\u5f97\u540c\u4e00\u7c7b\u6570\u636e\u5c3d\u53ef\u80fd\u7684\u7d27\u51d1\uff0c\u4e0d\u540c\u7c7b\u7684\u6570\u636e\u5c3d\u53ef\u80fd\u5206\u6563\u3002 \u4e3b\u8981\u601d\u60f3 \u5047\u8bbe\u6211\u4eec\u6709\u4e24\u7c7b\u6570\u636e\uff0c\u5206\u522b\u4e3a\u7ea2\u8272\u548c\u84dd\u8272\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8fd9\u4e9b\u6570\u636e\u7279\u5f81\u662f\u4e8c\u7ef4\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u8fd9\u4e9b\u6570\u636e\u6295\u5f71\u5230\u4e00\u7ef4\u7684\u4e00\u6761\u76f4\u7ebf\uff0c\u8ba9\u6bcf\u4e00\u79cd\u7c7b\u522b\u6570\u636e\u7684\u6295\u5f71\u70b9\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\uff0c\u800c\u7ea2\u8272\u548c\u84dd\u8272\u6570\u636e\u4e2d\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5927\u3002 \u76f4\u89c2\u4e0a\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0a\u56fe\u63d0\u4f9b\u4e86\u4e24\u79cd\u6295\u5f71\u65b9\u5f0f\uff0c\u5176\u4e2d\u53f3\u56fe\u8981\u6bd4\u5de6\u56fe\u7684\u6295\u5f71\u6548\u679c\u597d\uff0c\u56e0\u4e3a\u53f3\u56fe\u7684\u7ea2\u8272\u6570\u636e\u548c\u84dd\u8272\u6570\u636e\u5404\u4e2a\u8f83\u4e3a\u96c6\u4e2d\uff0c\u4e14\u7c7b\u522b\u4e4b\u95f4\u7684\u8ddd\u79bb\u660e\u663e\u3002\u5de6\u56fe\u5219\u5728\u8fb9\u754c\u5904\u6570\u636e\u6df7\u6742\u3002\u4ee5\u4e0a\u5c31\u662fLDA\u7684\u4e3b\u8981\u601d\u60f3\u4e86\uff0c\u5f53\u7136\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u7684\u6570\u636e\u662f\u591a\u4e2a\u7c7b\u522b\u7684\uff0c\u6211\u4eec\u7684\u539f\u59cb\u6570\u636e\u4e00\u822c\u4e5f\u662f\u8d85\u8fc7\u4e8c\u7ef4\u7684\uff0c\u6295\u5f71\u540e\u7684\u4e5f\u4e00\u822c\u4e0d\u662f\u76f4\u7ebf\uff0c\u800c\u662f\u4e00\u4e2a\u4f4e\u7ef4\u7684\u8d85\u5e73\u9762\u3002 \u539f\u7406\u63a8\u5bfc \u5047\u8bbe\u5df2\u77e5\u6570\u636e\u96c6 \\(D=(x_1,y_1),(x_2,y_2),\\dots,(x_m,y_m)\\) \uff0c\u5176\u4e2d\u6837\u672c \\(x_i\\) \u4e3a\u4efb\u610fn\u7ef4\u5411\u91cf\uff0c\u7c7b\u522b \\(y_i\u2208C_1,C_2,\\dots,C_k\\) \uff0c\u5b9a\u4e49 \\(N_j(j\u22081,2,\\dots,k)\\) \u662f\u7b2cj\u7c7b\u6837\u672c\u7684\u4e2a\u6570\uff0c \\(X_j(j\u22081,2,\\dots,k)\\) \u662f\u7b2cj\u7c7b\u6837\u672c\u7684\u96c6\u5408\uff0c \\(u_j(j\u22081,2,\\dots,k)\\) \u662f\u7b2cj\u7c7b\u6837\u672c\u7684\u5747\u503c\u5411\u91cf\uff0c \\(\\Sigma_j(j\u22081,2,\\dots,k)\\) \u662f\u7b2cj\u7c7b\u6837\u672c\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002 \u4e8c\u5206\u7c7b\u60c5\u51b5 \u6b64\u65f6k\u503c\u53ea\u80fd\u4e3a0\uff0c1\u4e24\u79cd\u3002\u53ef\u5f97 \\(u_j\\) \u7684\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a \\[u_j=\\frac{1}{N_j}\\sum_{x\u2208X_j}x(j\u2208\\{0,1\\})\\] \\(\\Sigma_j\\) \u7684\u8868\u8fbe\u5f0f\uff1a \\[\\Sigma_j=\\sum_{x\u2208X_j}(x-u_j)(x-u_j)^T(j\u2208\\{0,1\\})\\] \u56e0\u4e3a\u5c06\u5176\u964d\u5230\u4e00\u7ef4\uff0c\u5bfb\u627e\u4e00\u4e2a\u5411\u91cfw\uff0c\u4e0d\u540c\u7c7b\u7684\u6837\u672c\u4e2d\u5fc3\u6295\u5f71\u4e4b\u540e\u5f97\uff1a \\[u_{wj}=wu_j\\] \u4e0d\u540c\u7c7b\u7684\u65b9\u5dee\u6295\u5f71\u4e4b\u540e\u4e3a\uff1a \\[ \\begin{equation} \\begin{split} \\Sigma_{wj}&=\\sum_{x\u2208X_j}(w^Tx-w^Tu_j)^2\\\\ &= \\sum_{x\u2208X_j}(w^T(x-u_j))^2\\\\ &=\\sum_{x\u2208X_j}w^T(x-u_j)(x-u_j)^Tw \\\\ &=w^T\\sum_{x\u2208X_j}(x-u_j)(x-u_j)^Tw \\\\ &=w^T\\Sigma_{j}w \\\\ \\end{split} \\end{equation} \\] \u4e3a\u4e86\u4f7f\u540c\u4e00\u7c7b\u66f4\u52a0\u805a\u96c6\uff0c\u4e0d\u540c\u7c7b\u66f4\u52a0\u5206\u6563\uff0c\u6211\u4eec\u5b9a\u4e49\u5982\u4e0b\u51c6\u5219\u516c\u5f0f: \\[J=\\frac{||wu_0-wu_1||^2}{w^T\\Sigma_0w+w^T\\Sigma_1w}=\\frac{w^T(u_0-u_1)(u_0-u_1)^Tw}{w^T\\Sigma_0w+w^T\\Sigma_1w}\\] \u6ce8\u610f\u8303\u6570\u6ca1\u6709\u4e0b\u6807\uff0c\u9ed8\u8ba4\u662f2\u8303\u6570 LDA\u9700\u8981\u8ba9\u4e0d\u540c\u7c7b\u522b\u7684\u6570\u636e\u7684\u7c7b\u522b\u4e2d\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5927\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u6700\u5927\u5316 \\(||wu_0-wu_1||^2\\) \uff0c,\u540c\u65f6\u6211\u4eec\u5e0c\u671b\u540c\u4e00\u79cd\u7c7b\u522b\u6570\u636e\u7684\u6295\u5f71\u70b9\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u5316 \\(w^T\\Sigma_0w+w^T\\Sigma_1w\\) \uff0c\u56e0\u6b64\u76ee\u6807\u51fd\u6570\u5c31\u662f \u6700\u5927\u5316\u4e0a\u5f0fJ \u3002 \u6211\u4eec\u4e00\u822c\u5b9a\u4e49\u7c7b\u5185\u6563\u5ea6\u77e9\u9635\u4e3a\uff1a \\[S_w=\\Sigma_0+\\Sigma_1=\\sum_{x\u2208X_0}(x-u_0)(x-u_0)^T+\\sum_{x\u2208X_1}(x-u_1)(x-u_1)^T\\] \u5b9a\u4e49\u7c7b\u95f4\u6563\u5ea6\u77e9\u9635\uff1a \\[S_b=(u_0-u_1)(u_0-u_1)^T\\] \u5219\u4f18\u5316\u76ee\u6807J\u53ef\u4ee5\u6539\u5199\u4e3a\uff1a \\[J=\\frac{w^TS_bw}{w^TS_ww}\\] \u7531\u4e8e\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u662f\u5173\u4e8ew\u7684\u4e8c\u6b21\u9879\uff0c\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\uff1a \\[w^TS_ww=1\\] \u6c42J\u7684\u6700\u5927\u503c\u8f6c\u6362\u4e3a\uff1a \\[ \\begin{equation} \\begin{aligned} min_w \\quad -w^TS_bw\\\\ s.t.\\quad w^TS_ww=1\\\\ \\end{aligned} \\end{equation} \\] \u8fd0\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5(\u5177\u4f53\u63a8\u5bfc\u548cPCA\u7c7b\u4f3c\uff0c\u5bf9\u62c9\u683c\u6717\u65e5\u51fd\u6570\u6c42\u5bfc)\u53ef\u5f97\u5f53\uff1a \\[S_w^{-1}S_bw=\\lambda w\\] \u65f6\uff0c\u6b64\u65f6\u51fd\u6570 J \u6709\u6700\u5927\u503c \\(\\lambda\\) \u3002 \u6ce8\u610f \uff1a\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898 \\(S_bw\\) \u7684\u65b9\u5411\u6052\u5e73\u884c\u4e8e \\(u_0-u_1\\) ,\u4e0d\u59a8\u4ee4 \\(S_bw=\\lambda(u_0-u_1)\\) ,\u5c06\u5176\u5e26\u5165 \\(S_w^{-1}S_bw=\\lambda w\\) ,\u53ef\u4ee5\u5f97\u5230 \\(w=S_w^{-1}(u_0-u_1)\\) ,\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u539f\u59cb\u4e8c\u7c7b\u6837\u672c\u7684\u5747\u503c\u548c\u65b9\u5dee\u5c31\u53ef\u4ee5\u786e\u5b9a\u6700\u4f73\u7684\u6295\u5f71\u65b9\u5411 \\(w\\) \u3002 \u4e86\u89e3\uff1a \u6839\u636e \u5e7f\u4e49\u745e\u5229\u5546 \u7684\u6027\u8d28\uff0c\u76f4\u63a5\u5224\u65adJ\u7684\u6700\u5927\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u3002 \u591a\u5206\u7c7b\u60c5\u51b5 \u591a\u5206\u7c7b\u95ee\u9898\u63a8\u5bfc\u57fa\u672c\u548c\u4e0a\u8ff0\u63a8\u5bfc\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6b64\u65f6\u7c7b\u95f4\u6563\u5ea6\u77e9\u9635\u4e3a: \\[S_b=\\sum_{j=1}^{k}N_j(u_j-u)(u_j-u)^T\\] \u5176\u4e2du\u4e3a\u6240\u6709\u6570\u636e\u70b9\u6c42\u5e73\u5747\u503c\u6240\u5f97\u3002 \u7c7b\u5185\u6563\u5ea6\u77e9\u9635\u4e3a\uff1a \\[S_w=\\sum_{j=1}^{k}\\sum_{x\u2208X_j}(x-u_j)(x-u_j)^T=\\sum_{j=1}^{k}\\Sigma_j\\] \u6b64\u65f6\u8bbe\u6211\u4eec\u6295\u5f71\u5230\u7684\u4f4e\u7ef4\u7a7a\u95f4\u7ef4\u5ea6\u4e3a \\(d\\) ,\u5bf9\u5e94\u7684\u57fa\u5411\u91cf\u4e3a \\(w_1,w_2,\\dots,w_d\\) ,\u6784\u6210\u77e9\u9635 \\(W\\) \u3002\u51fd\u6570J\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a \\[J=\\frac{W^TS_bW}{W^TS_wW}\\] \u6b64\u65f6 \\(J\\) \u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u4e0d\u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u4e3a\u4e86\u53ef\u4ee5\u6700\u4f18\u5316\u6211\u4eec\u5e38\u5e38\u4f7f\u7528\u5bf9\u89d2\u7ebf\u7684\u5143\u7d20\u6765\u4ee3\u66ff\u3002\u6b64\u65f6 \\(J\\) \u7684\u5b9a\u4e49\u5982\u4e0b: \\[J=\\prod_{i=1}{d}\\frac{w_i^TS_bw_i}{w_i^TS_ww_i}\\] \u6c42\u89e3\u65b9\u6cd5\u4e0e\u4e8c\u5206\u7c7b\u7c7b\u4f3c\uff0c\u5f53\uff1a \\[S_w^{-1}S_bw_i=\\lambda_iw_i\\] \u65f6\uff0c\u51fd\u6570\u6709\u6700\u5927\u503c\u3002\u6240\u4ee5\u6211\u4eec\u53d6\u524d \\(d\\) \u4e2a\u6700\u5927\u7684\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7ec4\u6210 \\(W\\) \u3002\u7531\u4e8e \\(S_b\\) \u662fk\u4e2a\u79e9\u4e3a1\u7684\u77e9\u9635\u76f8\u52a0\u800c\u6210\uff0c\u6240\u4ee5\u5176\u79e9\u5c0f\u4e8e\u7b49\u4e8ek\u3002\u53c8\u7531\u4e8e\u6211\u4eec\u77e5\u9053\u524dk-1\u7684 \\(u_i\\) \u4e4b\u540e\uff0c\u6700\u540e\u4e00\u4e2a \\(u_k\\) \u53ef\u4ee5\u7531\u524dk-1\u4e2a\u8868\u793a\uff0c\u56e0\u6b64\uff0cLDA\u964d\u7ef4\u7b97\u6cd5\u964d\u7ef4\u4e4b\u540e\u7684\u7ef4\u5ea6\u6700\u9ad8\u4e3ak-1\u3002 \u4e3e\u4f8b \u5bf9\u4ee5\u4e0b\u6570\u636e\u96c6\u964d\u7ef4\uff1a \\[ x= \\begin{bmatrix} 1&2&0\\\\ 3&1&0\\\\ -2&-2&1\\\\ -3&-1&1\\\\ \\end{bmatrix} \\] \u5176\u4e2d\u6bcf\u4e00\u884c\u4e3a\u4e00\u4e2a\u6837\u672c\uff0c1\u30012\u5217\u4e3a\u5c5e\u6027\uff0c\u6700\u540e\u4e00\u5217\u8868\u793a\u7c7b\u522b\u3002 \u4ee3\u7801 \uff1a import numpy as np X = np.array([[1,2,0],[3,1,0],[-2,-2,1],[-3,-1,1]]) x = X[:,:2] y = X[:,2] x0 = x[y==0] x1 = x[y==1] def LDA(x,x1,x2): n1 = np.shape(x1)[0] n2 = np.shape(x2)[0] x_mean = np.mean(x,axis=0) x1_mean = np.mean(x1,axis=0) x2_mean = np.mean(x2,axis=0) Sb = n1*np.dot((x1_mean-x_mean).T,(x1_mean-x_mean))+n2*np.dot((x2_mean-x_mean).T,(x2_mean-x_mean)) Sigma1 = np.dot((x1-x1_mean).T,(x1-x1_mean)) Sigma2 = np.dot((x2-x2_mean).T,(x2-x2_mean)) Sw = Sigma1 + Sigma2 #\u7279\u5f81\u6570\u4e3an\uff0cSb,Sw\u7ef4\u5ea6\u90fd\u662fn*n w = np.linalg.eig(np.dot(np.linalg.inv(Sw),Sb)) return w eig_vals,eig_vecs = LDA(x,x0,x1) #eig_vec\u6bcf\u4e00\u5217\u662f\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf # print(eig_val) # print(eig_vec) #\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u914d\u5bf9 eig_pairs = [(np.abs(eig_vals[i]), eig_vecs[:,i]) for i in range(len(eig_vals))] # \u6309\u7279\u5f81\u503c\u5927\u5c0f\u8fdb\u884c\u6392\u5e8f eig_pairs = sorted(eig_pairs, key=lambda k: k[0], reverse=True) # \u5c06\u6570\u636e\u964d\u5230\u4e00\u7ef4\u3002\u5c06\u7279\u5f81\u5411\u91cf\u4ee5\u5217\u5411\u91cf\u5f62\u5f0f\u62fc\u5408\u3002 lda_matrix = np.hstack([eig_pairs[i][1].reshape(-1, 1) for i in range(1)]) # \u5c06\u539f\u59cb\u6570\u636e\u8fdb\u884c\u6295\u5f71\u3002 res = x.dot(lda_matrix) #\u5c06\u539f\u59cb\u6570\u636e\u6295\u5f71 print(res) \u8f93\u51fa\uff1a [[-2.22703273] [-2.42784414] [ 2.75276384] [ 2.42784414]] LDA\u7b97\u6cd5\u6d41\u7a0b 1\u3001\u8ba1\u7b97\u7c7b\u5185\u6563\u5ea6\u77e9\u9635 \\(S_w\\) 2\u3001\u8ba1\u7b97\u7c7b\u95f4\u6563\u5ea6\u77e9\u9635 \\(S_B\\) 3\u3001\u8ba1\u7b97\u77e9\u9635 \\(S_w^{-1}S_b\\) 4\u3001\u5bf9\u77e9\u9635 \\(S_w^{-1}S_b\\) \u8fdb\u884c\u7279\u5f81\u5206\u89e3\uff0c\u8ba1\u7b97\u6700\u5927\u7684 \\(d\\) \u4e2a\u6700\u5927\u7684\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7ec4\u6210 \\(W\\) 5\u3001\u8ba1\u7b97\u6295\u5f71\u540e\u7684\u6570\u636e\u70b9 \\(Y=W^TX\\) \u4e0ePCA\u6bd4\u8f83 PCA\u4e3a\u65e0\u76d1\u7763\u964d\u7ef4\uff0cLDA\u4e3a\u6709\u76d1\u7763\u964d\u7ef4 LDA\u964d\u7ef4\u6700\u591a\u964d\u5230\u7c7b\u522b\u6570K-1\u7684\u7ef4\u6570\uff0cPCA\u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002 PCA\u5e0c\u671b\u6295\u5f71\u540e\u7684\u6570\u636e\u65b9\u5dee\u5c3d\u53ef\u80fd\u7684\u5927(\u6700\u5927\u53ef\u5206\u6027)\uff0c\u800cLDA\u5219\u5e0c\u671b\u6295\u5f71\u540e\u76f8\u540c\u7c7b\u522b\u7684\u7ec4\u5185\u65b9\u5dee\u5c0f\uff0c\u800c\u7ec4\u95f4\u65b9\u5dee\u5927\u3002 \u53c2\u8003\u94fe\u63a5\uff1ahttps://www.cnblogs.com/pinard/p/6244265.html \u591a\u5206\u7c7b\u5b9e\u4f8b\uff1ahttps://www.freesion.com/article/5252242835/","title":"LDA"},{"location":"ml/mylda/#lda","text":"\u7ebf\u6027\u5224\u522b\u5206\u6790(Linear Discriminant Analysis) \u662f\u4e00\u79cd\u6709\u76d1\u7763\u7684\uff08supervised\uff09\u7ebf\u6027\u964d\u7ef4\u7b97\u6cd5\u3002\u4e0ePCA\u4fdd\u6301\u6570\u636e\u4fe1\u606f\u4e0d\u540c\uff0cLDA\u7684\u6838\u5fc3\u601d\u60f3\uff1a\u5f80\u7ebf\u6027\u5224\u522b \u8d85\u5e73\u9762\u7684\u6cd5\u5411\u91cf \u4e0a\u6295\u5f71\uff0c\u5373\u5c06\u6570\u636e\u6295\u5f71\u5230\u4f4e\u7ef4\u7a7a\u95f4\u4e4b\u540e\uff0c\u4f7f\u5f97\u540c\u4e00\u7c7b\u6570\u636e\u5c3d\u53ef\u80fd\u7684\u7d27\u51d1\uff0c\u4e0d\u540c\u7c7b\u7684\u6570\u636e\u5c3d\u53ef\u80fd\u5206\u6563\u3002","title":"LDA(\u7ebf\u6027\u5224\u522b\u5206\u6790)"},{"location":"ml/mylda/#_1","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u7c7b\u6570\u636e\uff0c\u5206\u522b\u4e3a\u7ea2\u8272\u548c\u84dd\u8272\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8fd9\u4e9b\u6570\u636e\u7279\u5f81\u662f\u4e8c\u7ef4\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u8fd9\u4e9b\u6570\u636e\u6295\u5f71\u5230\u4e00\u7ef4\u7684\u4e00\u6761\u76f4\u7ebf\uff0c\u8ba9\u6bcf\u4e00\u79cd\u7c7b\u522b\u6570\u636e\u7684\u6295\u5f71\u70b9\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\uff0c\u800c\u7ea2\u8272\u548c\u84dd\u8272\u6570\u636e\u4e2d\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5927\u3002 \u76f4\u89c2\u4e0a\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0a\u56fe\u63d0\u4f9b\u4e86\u4e24\u79cd\u6295\u5f71\u65b9\u5f0f\uff0c\u5176\u4e2d\u53f3\u56fe\u8981\u6bd4\u5de6\u56fe\u7684\u6295\u5f71\u6548\u679c\u597d\uff0c\u56e0\u4e3a\u53f3\u56fe\u7684\u7ea2\u8272\u6570\u636e\u548c\u84dd\u8272\u6570\u636e\u5404\u4e2a\u8f83\u4e3a\u96c6\u4e2d\uff0c\u4e14\u7c7b\u522b\u4e4b\u95f4\u7684\u8ddd\u79bb\u660e\u663e\u3002\u5de6\u56fe\u5219\u5728\u8fb9\u754c\u5904\u6570\u636e\u6df7\u6742\u3002\u4ee5\u4e0a\u5c31\u662fLDA\u7684\u4e3b\u8981\u601d\u60f3\u4e86\uff0c\u5f53\u7136\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u7684\u6570\u636e\u662f\u591a\u4e2a\u7c7b\u522b\u7684\uff0c\u6211\u4eec\u7684\u539f\u59cb\u6570\u636e\u4e00\u822c\u4e5f\u662f\u8d85\u8fc7\u4e8c\u7ef4\u7684\uff0c\u6295\u5f71\u540e\u7684\u4e5f\u4e00\u822c\u4e0d\u662f\u76f4\u7ebf\uff0c\u800c\u662f\u4e00\u4e2a\u4f4e\u7ef4\u7684\u8d85\u5e73\u9762\u3002","title":"\u4e3b\u8981\u601d\u60f3"},{"location":"ml/mylda/#_2","text":"\u5047\u8bbe\u5df2\u77e5\u6570\u636e\u96c6 \\(D=(x_1,y_1),(x_2,y_2),\\dots,(x_m,y_m)\\) \uff0c\u5176\u4e2d\u6837\u672c \\(x_i\\) \u4e3a\u4efb\u610fn\u7ef4\u5411\u91cf\uff0c\u7c7b\u522b \\(y_i\u2208C_1,C_2,\\dots,C_k\\) \uff0c\u5b9a\u4e49 \\(N_j(j\u22081,2,\\dots,k)\\) \u662f\u7b2cj\u7c7b\u6837\u672c\u7684\u4e2a\u6570\uff0c \\(X_j(j\u22081,2,\\dots,k)\\) \u662f\u7b2cj\u7c7b\u6837\u672c\u7684\u96c6\u5408\uff0c \\(u_j(j\u22081,2,\\dots,k)\\) \u662f\u7b2cj\u7c7b\u6837\u672c\u7684\u5747\u503c\u5411\u91cf\uff0c \\(\\Sigma_j(j\u22081,2,\\dots,k)\\) \u662f\u7b2cj\u7c7b\u6837\u672c\u7684\u534f\u65b9\u5dee\u77e9\u9635\u3002","title":"\u539f\u7406\u63a8\u5bfc"},{"location":"ml/mylda/#_3","text":"\u6b64\u65f6k\u503c\u53ea\u80fd\u4e3a0\uff0c1\u4e24\u79cd\u3002\u53ef\u5f97 \\(u_j\\) \u7684\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a \\[u_j=\\frac{1}{N_j}\\sum_{x\u2208X_j}x(j\u2208\\{0,1\\})\\] \\(\\Sigma_j\\) \u7684\u8868\u8fbe\u5f0f\uff1a \\[\\Sigma_j=\\sum_{x\u2208X_j}(x-u_j)(x-u_j)^T(j\u2208\\{0,1\\})\\] \u56e0\u4e3a\u5c06\u5176\u964d\u5230\u4e00\u7ef4\uff0c\u5bfb\u627e\u4e00\u4e2a\u5411\u91cfw\uff0c\u4e0d\u540c\u7c7b\u7684\u6837\u672c\u4e2d\u5fc3\u6295\u5f71\u4e4b\u540e\u5f97\uff1a \\[u_{wj}=wu_j\\] \u4e0d\u540c\u7c7b\u7684\u65b9\u5dee\u6295\u5f71\u4e4b\u540e\u4e3a\uff1a \\[ \\begin{equation} \\begin{split} \\Sigma_{wj}&=\\sum_{x\u2208X_j}(w^Tx-w^Tu_j)^2\\\\ &= \\sum_{x\u2208X_j}(w^T(x-u_j))^2\\\\ &=\\sum_{x\u2208X_j}w^T(x-u_j)(x-u_j)^Tw \\\\ &=w^T\\sum_{x\u2208X_j}(x-u_j)(x-u_j)^Tw \\\\ &=w^T\\Sigma_{j}w \\\\ \\end{split} \\end{equation} \\] \u4e3a\u4e86\u4f7f\u540c\u4e00\u7c7b\u66f4\u52a0\u805a\u96c6\uff0c\u4e0d\u540c\u7c7b\u66f4\u52a0\u5206\u6563\uff0c\u6211\u4eec\u5b9a\u4e49\u5982\u4e0b\u51c6\u5219\u516c\u5f0f: \\[J=\\frac{||wu_0-wu_1||^2}{w^T\\Sigma_0w+w^T\\Sigma_1w}=\\frac{w^T(u_0-u_1)(u_0-u_1)^Tw}{w^T\\Sigma_0w+w^T\\Sigma_1w}\\] \u6ce8\u610f\u8303\u6570\u6ca1\u6709\u4e0b\u6807\uff0c\u9ed8\u8ba4\u662f2\u8303\u6570 LDA\u9700\u8981\u8ba9\u4e0d\u540c\u7c7b\u522b\u7684\u6570\u636e\u7684\u7c7b\u522b\u4e2d\u5fc3\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u7684\u5927\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u6700\u5927\u5316 \\(||wu_0-wu_1||^2\\) \uff0c,\u540c\u65f6\u6211\u4eec\u5e0c\u671b\u540c\u4e00\u79cd\u7c7b\u522b\u6570\u636e\u7684\u6295\u5f71\u70b9\u5c3d\u53ef\u80fd\u7684\u63a5\u8fd1\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u5316 \\(w^T\\Sigma_0w+w^T\\Sigma_1w\\) \uff0c\u56e0\u6b64\u76ee\u6807\u51fd\u6570\u5c31\u662f \u6700\u5927\u5316\u4e0a\u5f0fJ \u3002 \u6211\u4eec\u4e00\u822c\u5b9a\u4e49\u7c7b\u5185\u6563\u5ea6\u77e9\u9635\u4e3a\uff1a \\[S_w=\\Sigma_0+\\Sigma_1=\\sum_{x\u2208X_0}(x-u_0)(x-u_0)^T+\\sum_{x\u2208X_1}(x-u_1)(x-u_1)^T\\] \u5b9a\u4e49\u7c7b\u95f4\u6563\u5ea6\u77e9\u9635\uff1a \\[S_b=(u_0-u_1)(u_0-u_1)^T\\] \u5219\u4f18\u5316\u76ee\u6807J\u53ef\u4ee5\u6539\u5199\u4e3a\uff1a \\[J=\\frac{w^TS_bw}{w^TS_ww}\\] \u7531\u4e8e\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u662f\u5173\u4e8ew\u7684\u4e8c\u6b21\u9879\uff0c\u4e0d\u5931\u4e00\u822c\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\uff1a \\[w^TS_ww=1\\] \u6c42J\u7684\u6700\u5927\u503c\u8f6c\u6362\u4e3a\uff1a \\[ \\begin{equation} \\begin{aligned} min_w \\quad -w^TS_bw\\\\ s.t.\\quad w^TS_ww=1\\\\ \\end{aligned} \\end{equation} \\] \u8fd0\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5(\u5177\u4f53\u63a8\u5bfc\u548cPCA\u7c7b\u4f3c\uff0c\u5bf9\u62c9\u683c\u6717\u65e5\u51fd\u6570\u6c42\u5bfc)\u53ef\u5f97\u5f53\uff1a \\[S_w^{-1}S_bw=\\lambda w\\] \u65f6\uff0c\u6b64\u65f6\u51fd\u6570 J \u6709\u6700\u5927\u503c \\(\\lambda\\) \u3002 \u6ce8\u610f \uff1a\u5bf9\u4e8e\u4e8c\u5206\u7c7b\u95ee\u9898 \\(S_bw\\) \u7684\u65b9\u5411\u6052\u5e73\u884c\u4e8e \\(u_0-u_1\\) ,\u4e0d\u59a8\u4ee4 \\(S_bw=\\lambda(u_0-u_1)\\) ,\u5c06\u5176\u5e26\u5165 \\(S_w^{-1}S_bw=\\lambda w\\) ,\u53ef\u4ee5\u5f97\u5230 \\(w=S_w^{-1}(u_0-u_1)\\) ,\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u539f\u59cb\u4e8c\u7c7b\u6837\u672c\u7684\u5747\u503c\u548c\u65b9\u5dee\u5c31\u53ef\u4ee5\u786e\u5b9a\u6700\u4f73\u7684\u6295\u5f71\u65b9\u5411 \\(w\\) \u3002 \u4e86\u89e3\uff1a \u6839\u636e \u5e7f\u4e49\u745e\u5229\u5546 \u7684\u6027\u8d28\uff0c\u76f4\u63a5\u5224\u65adJ\u7684\u6700\u5927\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u3002","title":"\u4e8c\u5206\u7c7b\u60c5\u51b5"},{"location":"ml/mylda/#_4","text":"\u591a\u5206\u7c7b\u95ee\u9898\u63a8\u5bfc\u57fa\u672c\u548c\u4e0a\u8ff0\u63a8\u5bfc\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u6b64\u65f6\u7c7b\u95f4\u6563\u5ea6\u77e9\u9635\u4e3a: \\[S_b=\\sum_{j=1}^{k}N_j(u_j-u)(u_j-u)^T\\] \u5176\u4e2du\u4e3a\u6240\u6709\u6570\u636e\u70b9\u6c42\u5e73\u5747\u503c\u6240\u5f97\u3002 \u7c7b\u5185\u6563\u5ea6\u77e9\u9635\u4e3a\uff1a \\[S_w=\\sum_{j=1}^{k}\\sum_{x\u2208X_j}(x-u_j)(x-u_j)^T=\\sum_{j=1}^{k}\\Sigma_j\\] \u6b64\u65f6\u8bbe\u6211\u4eec\u6295\u5f71\u5230\u7684\u4f4e\u7ef4\u7a7a\u95f4\u7ef4\u5ea6\u4e3a \\(d\\) ,\u5bf9\u5e94\u7684\u57fa\u5411\u91cf\u4e3a \\(w_1,w_2,\\dots,w_d\\) ,\u6784\u6210\u77e9\u9635 \\(W\\) \u3002\u51fd\u6570J\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a \\[J=\\frac{W^TS_bW}{W^TS_wW}\\] \u6b64\u65f6 \\(J\\) \u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u4e0d\u662f\u4e00\u4e2a\u6807\u91cf\uff0c\u4e3a\u4e86\u53ef\u4ee5\u6700\u4f18\u5316\u6211\u4eec\u5e38\u5e38\u4f7f\u7528\u5bf9\u89d2\u7ebf\u7684\u5143\u7d20\u6765\u4ee3\u66ff\u3002\u6b64\u65f6 \\(J\\) \u7684\u5b9a\u4e49\u5982\u4e0b: \\[J=\\prod_{i=1}{d}\\frac{w_i^TS_bw_i}{w_i^TS_ww_i}\\] \u6c42\u89e3\u65b9\u6cd5\u4e0e\u4e8c\u5206\u7c7b\u7c7b\u4f3c\uff0c\u5f53\uff1a \\[S_w^{-1}S_bw_i=\\lambda_iw_i\\] \u65f6\uff0c\u51fd\u6570\u6709\u6700\u5927\u503c\u3002\u6240\u4ee5\u6211\u4eec\u53d6\u524d \\(d\\) \u4e2a\u6700\u5927\u7684\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7ec4\u6210 \\(W\\) \u3002\u7531\u4e8e \\(S_b\\) \u662fk\u4e2a\u79e9\u4e3a1\u7684\u77e9\u9635\u76f8\u52a0\u800c\u6210\uff0c\u6240\u4ee5\u5176\u79e9\u5c0f\u4e8e\u7b49\u4e8ek\u3002\u53c8\u7531\u4e8e\u6211\u4eec\u77e5\u9053\u524dk-1\u7684 \\(u_i\\) \u4e4b\u540e\uff0c\u6700\u540e\u4e00\u4e2a \\(u_k\\) \u53ef\u4ee5\u7531\u524dk-1\u4e2a\u8868\u793a\uff0c\u56e0\u6b64\uff0cLDA\u964d\u7ef4\u7b97\u6cd5\u964d\u7ef4\u4e4b\u540e\u7684\u7ef4\u5ea6\u6700\u9ad8\u4e3ak-1\u3002","title":"\u591a\u5206\u7c7b\u60c5\u51b5"},{"location":"ml/mylda/#_5","text":"\u5bf9\u4ee5\u4e0b\u6570\u636e\u96c6\u964d\u7ef4\uff1a \\[ x= \\begin{bmatrix} 1&2&0\\\\ 3&1&0\\\\ -2&-2&1\\\\ -3&-1&1\\\\ \\end{bmatrix} \\] \u5176\u4e2d\u6bcf\u4e00\u884c\u4e3a\u4e00\u4e2a\u6837\u672c\uff0c1\u30012\u5217\u4e3a\u5c5e\u6027\uff0c\u6700\u540e\u4e00\u5217\u8868\u793a\u7c7b\u522b\u3002 \u4ee3\u7801 \uff1a import numpy as np X = np.array([[1,2,0],[3,1,0],[-2,-2,1],[-3,-1,1]]) x = X[:,:2] y = X[:,2] x0 = x[y==0] x1 = x[y==1] def LDA(x,x1,x2): n1 = np.shape(x1)[0] n2 = np.shape(x2)[0] x_mean = np.mean(x,axis=0) x1_mean = np.mean(x1,axis=0) x2_mean = np.mean(x2,axis=0) Sb = n1*np.dot((x1_mean-x_mean).T,(x1_mean-x_mean))+n2*np.dot((x2_mean-x_mean).T,(x2_mean-x_mean)) Sigma1 = np.dot((x1-x1_mean).T,(x1-x1_mean)) Sigma2 = np.dot((x2-x2_mean).T,(x2-x2_mean)) Sw = Sigma1 + Sigma2 #\u7279\u5f81\u6570\u4e3an\uff0cSb,Sw\u7ef4\u5ea6\u90fd\u662fn*n w = np.linalg.eig(np.dot(np.linalg.inv(Sw),Sb)) return w eig_vals,eig_vecs = LDA(x,x0,x1) #eig_vec\u6bcf\u4e00\u5217\u662f\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf # print(eig_val) # print(eig_vec) #\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u914d\u5bf9 eig_pairs = [(np.abs(eig_vals[i]), eig_vecs[:,i]) for i in range(len(eig_vals))] # \u6309\u7279\u5f81\u503c\u5927\u5c0f\u8fdb\u884c\u6392\u5e8f eig_pairs = sorted(eig_pairs, key=lambda k: k[0], reverse=True) # \u5c06\u6570\u636e\u964d\u5230\u4e00\u7ef4\u3002\u5c06\u7279\u5f81\u5411\u91cf\u4ee5\u5217\u5411\u91cf\u5f62\u5f0f\u62fc\u5408\u3002 lda_matrix = np.hstack([eig_pairs[i][1].reshape(-1, 1) for i in range(1)]) # \u5c06\u539f\u59cb\u6570\u636e\u8fdb\u884c\u6295\u5f71\u3002 res = x.dot(lda_matrix) #\u5c06\u539f\u59cb\u6570\u636e\u6295\u5f71 print(res) \u8f93\u51fa\uff1a [[-2.22703273] [-2.42784414] [ 2.75276384] [ 2.42784414]]","title":"\u4e3e\u4f8b"},{"location":"ml/mylda/#lda_1","text":"1\u3001\u8ba1\u7b97\u7c7b\u5185\u6563\u5ea6\u77e9\u9635 \\(S_w\\) 2\u3001\u8ba1\u7b97\u7c7b\u95f4\u6563\u5ea6\u77e9\u9635 \\(S_B\\) 3\u3001\u8ba1\u7b97\u77e9\u9635 \\(S_w^{-1}S_b\\) 4\u3001\u5bf9\u77e9\u9635 \\(S_w^{-1}S_b\\) \u8fdb\u884c\u7279\u5f81\u5206\u89e3\uff0c\u8ba1\u7b97\u6700\u5927\u7684 \\(d\\) \u4e2a\u6700\u5927\u7684\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u7ec4\u6210 \\(W\\) 5\u3001\u8ba1\u7b97\u6295\u5f71\u540e\u7684\u6570\u636e\u70b9 \\(Y=W^TX\\)","title":"LDA\u7b97\u6cd5\u6d41\u7a0b"},{"location":"ml/mylda/#pca","text":"PCA\u4e3a\u65e0\u76d1\u7763\u964d\u7ef4\uff0cLDA\u4e3a\u6709\u76d1\u7763\u964d\u7ef4 LDA\u964d\u7ef4\u6700\u591a\u964d\u5230\u7c7b\u522b\u6570K-1\u7684\u7ef4\u6570\uff0cPCA\u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002 PCA\u5e0c\u671b\u6295\u5f71\u540e\u7684\u6570\u636e\u65b9\u5dee\u5c3d\u53ef\u80fd\u7684\u5927(\u6700\u5927\u53ef\u5206\u6027)\uff0c\u800cLDA\u5219\u5e0c\u671b\u6295\u5f71\u540e\u76f8\u540c\u7c7b\u522b\u7684\u7ec4\u5185\u65b9\u5dee\u5c0f\uff0c\u800c\u7ec4\u95f4\u65b9\u5dee\u5927\u3002 \u53c2\u8003\u94fe\u63a5\uff1ahttps://www.cnblogs.com/pinard/p/6244265.html \u591a\u5206\u7c7b\u5b9e\u4f8b\uff1ahttps://www.freesion.com/article/5252242835/","title":"\u4e0ePCA\u6bd4\u8f83"},{"location":"ml/mypca/","text":"\u4e3b\u6210\u5206\u5206\u6790(PCA) \u4e3b\u6210\u5206\u5206\u6790\u6cd5\uff08principal components analysis\uff09 \u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u964d\u7ef4\u7b97\u6cd5\uff0c\u5c31\u662f\u7528\u8f83\u5c11\u7684\u6307\u6807\u53d8\u91cf\u53bb\u53cd\u6620\u51fa\u521d\u59cb\u6570\u636e\u7684\u5927\u591a\u6570\u4fe1\u606f\uff0c\u8fd9\u4e9b\u8f83\u5c11\u7684\u6307\u6807\u53d8\u91cf\u5c31\u662f\u4e3b\u6210\u5206\uff0c\u8fd9\u4e9b\u4e3b\u6210\u5206\u5c31\u662f\u539f\u59cb\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u5e76\u4e14\u5f7c\u6b64\u4e92\u4e0d\u76f8\u5173\u3002\u4e3b\u6210\u5206\u5206\u6790\u6cd5\u4e3b\u8981\u7528\u6765\u89e3\u51b3\u591a\u53d8\u91cf\u4e14\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u5f88\u5927\u76f8\u5173\u6027\u7684\u591a\u5143\u5206\u6790\u95ee\u9898\u3002 \u57fa\u672c\u601d\u60f3 :\u627e\u5230\u4e00\u4e2a\u5750\u6807\u8f74\uff0c\u5c06\u6570\u636e\u6620\u5c04\u5230\u8fd9\u4e2a\u8f74\u4e0a\u4e4b\u540e\u6240\u8ba1\u7b97\u7684\u65b9\u5dee\u6700\u5927\uff0c\u65b9\u5dee\u8d8a\u5927\u5c31\u610f\u5473\u7740\u70b9\u8d8a\u5206\u6563\uff0c\u4fdd\u7559\u7684\u4fe1\u606f\u8d8a\u591a\uff0c\u8d8a\u91cd\u8981\u3002\u6362\u5c31\u8bdd\u8bf4\uff0c\u5c31\u662f\u4ece\u539f\u59cb\u6570\u636e\u7684\u4e00\u5806\u53d8\u91cf\u4e2d\u63d0\u53d6\u51fa\u4e00\u90e8\u5206\u53d8\u91cf\uff0c\u8fd9\u90e8\u5206\u53d8\u91cf\u80fd\u5c3d\u53ef\u80fd\u7684\u4fdd\u7559\u539f\u59cb\u6570\u636e\u7684\u7279\u6027\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u4e09\u7ef4\u6570\u636e\u964d\u5230\u4e24\u7ef4\uff0c\u5c31\u662f\u5728\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u627e\u5230\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\uff0c\u5c06\u6570\u636e\u6295\u5f71\u5230\u5e73\u9762\u4e0a\uff0c\u4f7f\u5176\u5728\u8be5\u5e73\u9762\u5206\u5e03\u7684\u65b9\u5dee\u6700\u5c0f\u3002 \u57fa\u672c\u6b65\u9aa4 : \u5bf9\u6570\u636e\u8fdb\u884c\u4e2d\u5fc3\u5316(\u6bcf\u4e2a\u7279\u5f81\u6837\u672c\u51cf\u53bb\u5747\u503c\uff0c\u628a\u5750\u6807\u539f\u70b9\u653e\u5230\u6570\u636e\u4e2d\u5fc3) \u4e00\u822c\u60c5\u51b5\uff0c\u7b2c\u4e00\u6b65\u76f4\u63a5\u5bf9\u6570\u636e\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406(\u4e2d\u5fc3\u5316\u7684\u540c\u65f6\u6d88\u9664\u91cf\u7eb2\u7684\u5f71\u54cd) \u8ba1\u7b97\u5f52\u4e00\u5316\u540e\u6570\u636e\u96c6\u7684\u534f\u65b9\u5dee\u77e9\u9635\u4e0e\u7279\u5f81\u503c(\u5750\u6807\u8f74\u65b9\u5411\u7684\u65b9\u5dee)\u3001\u7279\u5f81\u5411\u91cf(\u5750\u6807\u8f74\u65b9\u5411) \u9009\u53d6K\u4e2a\u6700\u5927\u7684\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u4e3b\u6210\u5206 \u6570\u636e\u5904\u7406 \u5047\u8bbe\u6709n\u7814\u7a76\u5bf9\u8c61\uff0cm\u4e2a\u6307\u6807\u53d8\u91cf \\(x_1,x_2,\\ldots,x_m\\) \uff0c\u7b2ci\u4e2a\u5bf9\u8c61\u7b2cj\u4e2a\u6307\u6807\u53d6\u503c \\(a_{ij}\\) \uff0c\u5219\u6784\u6210\u6570\u636e\u77e9\u9635 \\(A=(a_{ij})_{n*m}\\) \u6837\u672c\u5747\u503c : $$\\mu_j=\\frac{1}{n}\\sum_{i=1}^na_{ij} $$ \u4e2d\u5fc3\u5316 : $$ x_j'=x_j-\\mu_j$$ \u5f52\u4e00\u5316 : $$ y_j=\\frac{x_j-\\mu_j}{\\sigma_j}$$ \u5176\u4e2d \\(\\sigma_j=\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^{n}(a_{ij}-u_j)^2}\\) \u65b9\u5dee \u65b9\u5dee\u662f\u7528\u6765\u5ea6\u91cf\u968f\u673a\u53d8\u91cf\u548c\u5176\u6570\u5b66\u671f\u671b\uff08\u5747\u503c\uff09\u4e4b\u95f4\u7684\u504f\u79bb\u7a0b\u5ea6\u7684\u4e00\u4e2a\u7edf\u8ba1\u91cf\u3002 \u7edf\u8ba1\u5b66\u4e2d(\u6240\u6709\u6837\u672c)\u7684\u603b\u4f53\u65b9\u5dee\u516c\u5f0f: $$ \\sigma^2=\\frac{\\sum(X-u)^2}{N}$$ \u5176\u4e2d \\(\\sigma^2\\) \u662f\u603b\u4f53\u65b9\u5dee\uff0cX\u662f\u968f\u673a\u53d8\u91cf\uff0c \\(\\mu\\) \u662f\u603b\u4f53\u5747\u503c\uff0cN\u662f\u603b\u4f53\u6837\u672c\u6570\u3002\u8fd9\u91cc\u63d0\u5230\u7684\u6837\u672c\uff0c\u662f\u57fa\u4e8e\u6837\u672c\u6570\u91cfN\uff08\u51e0\u4e4e\uff09\u65e0\u9650\u7684\u5047\u8bbe\u3002\u5bf9\u5e94\u7684\u5404\u4e2a\u7edf\u8ba1\u91cf\uff0c\u4e5f\u662f\u6240\u6709\u7684\u6837\u672c\u6240\u670d\u4ece\u7684\u5206\u5e03\u7684\u771f\u5b9e\u53c2\u6570\uff0c\u662f\u5ba2\u89c2\u6b63\u771f\u5b9e\u7684\u3002\u603b\u4f53\u65b9\u5dee\u662f\u4e2a\u51c6\u786e\u503c\u3002 \u73b0\u5b9e\u60c5\u51b5\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u5f97\u4e0d\u5230\u6240\u6709\u7684\u65e0\u9650\u6837\u672c\uff0c\u800c\u53ea\u80fd\u62bd\u6837\u51fa\u4e00\u5b9a\u6570\u91cf\u7684\u6709\u9650\u6837\u672c\u3002\u901a\u8fc7\u6709\u9650\u7684\u6837\u672c\u6765\u8ba1\u7b97\u7684\u65b9\u5dee\uff0c\u79f0\u4e3a\u6837\u672c\u65b9\u5dee,\u516c\u5f0f: $$ S^2=\\frac{1}{n-1}\\sum_{i=1}{n}(X_i-\\bar X)^2$$ \u6ce8\u610f\u4e0a\u5f0f\u7684\u7cfb\u6570\u548c\u603b\u4f53\u65b9\u5dee\u516c\u5f0f\u91cc\u9762\u7684\u7cfb\u6570\u4e0d\u4e00\u6837\uff0c\u5206\u6bcd\u662fn-1\u3002\u4e0d\u7528n\u4f5c\u5206\u6bcd\uff0c\u662f\u56e0\u4e3a\u5982\u679c\u6cbf\u7528\u603b\u4f53\u65b9\u5dee\u7684\u516c\u5f0f\u5f97\u5230\u7684\u6837\u672c\u65b9\u5dee\uff0c\u662f\u5bf9\u65b9\u5dee\u7684\u4e00\u4e2a\u6709\u504f\u4f30\u8ba1\u3002\u7528n\u22121\u4f5c\u4e3a\u5206\u6bcd\u7684\u6837\u672c\u65b9\u5dee\u516c\u5f0f\uff0c\u624d\u662f\u5bf9\u65b9\u5dee\u7684\u65e0\u504f\u4f30\u8ba1\u3002\u6837\u672c\u65b9\u5dee\u662f\u4e2a\u968f\u673a\u53d8\u91cf\u3002 \u534f\u65b9\u5dee\u77e9\u9635\u3001\u7279\u5f81\u503c\u3001\u7279\u5f81\u5411\u91cf \u65b9\u5dee\u662f\u53cd\u6620\u4e00\u7ec4\u6570\u636e\u79bb\u6563\u7a0b\u5ea6\u7684\u5ea6\u91cf\uff0c\u4e00\u4e2a\u7ef4\u5ea6\u7684\u65b9\u5dee\u4e3a: $$ var(X)=\\frac{\\sum_{i=1}^n(X_i-\\bar X)^2}{n-1}$$ \u534f\u65b9\u5dee\u662f\u5bf9\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u8054\u5408\u5206\u5e03\u7ebf\u6027\u76f8\u5173\u7a0b\u5ea6\u7684\u4e00\u79cd\u5ea6\u91cf\uff0c\u534f\u65b9\u5dee\u4e3a0\uff0c\u8bc1\u660e\u8fd9\u4e24\u4e2a\u7ef4\u5ea6\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\uff0c\u534f\u65b9\u5dee\u4e3a\u6b63\uff0c\u4e24\u4e2a\u6b63\u76f8\u5173\uff0c\u4e3a\u8d1f\u5219\u8d1f\u76f8\u5173\u3002\u5b9a\u4e49\u4e3a: $$ cov(X,Y)=\\frac{\\sum_{i=1}^n(X_i-\\bar X)(Y_i-\\bar Y)}{n-1}$$ \u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u77e9\u9635 \\(B=(b_{ij})_{n*m}\\) ,\u6837\u672c\u77e9\u9635 : \\[ B= \\begin{bmatrix} b_{11} & b_{12} & \\cdots & b_{1m}\\\\ b_{21} & b_{22} & \\cdots & b_{2m}\\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ b_{n1} & b_{n2} & \\cdots & b_{nm}\\\\ \\end{bmatrix} \\] \u5176\u4e2d \\(b_{ij}=\\frac{a_{ij}-\\mu_j}{\\sigma_j}\\) \uff0c\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1. \u534f\u65b9\u5dee\u77e9\u9635 \\[ \\Sigma=r_{ij}= \\begin{bmatrix} var(x_1) & cov(x_1,x_2) & \\cdots & cov(x_1,x_m)\\\\ cov(x_2,x_1) & var(x_2) & \\cdots & cov(x_2,x_m)\\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ cov(x_m,x_1) & cov(x_m,x_2) & \\cdots & var(x_m)\\\\ \\end{bmatrix} \\] \\[ r_{ij}=\\frac{1}{n-1}\\sum_{k=1}^{n}b_{ki}b_{kj} ,\u5176\u4e2di,j=1,2,\\ldots,m \\] \u6ce8\u610f : 1\u3001\u534f\u65b9\u5dee\u77e9\u9635\u662f\u5bf9\u79f0\u77e9\u9635\uff0c\u5bf9\u79f0\u77e9\u9635\u7684\u7279\u5f81\u5411\u91cf\u76f8\u4e92\u6b63\u4ea4\uff0c\u5176\u70b9\u4e58\u4e3a0\u3002 2\u3001\u6570\u636e\u70b9\u5728\u7279\u5f81\u5411\u91cf\u4e0a\u6295\u5f71\u7684\u65b9\u5dee\uff0c\u4e3a\u5bf9\u5e94\u7684\u7279\u5f81\u503c\uff0c\u9009\u62e9\u7279\u5f81\u503c\u5927\u7684\u7279\u5f81\u5411\u91cf\uff0c\u5c31\u662f\u9009\u62e9\u70b9\u6295\u5f71\u65b9\u5dee\u5927\u7684\u65b9\u5411\uff0c\u5373\u662f\u5177\u6709\u9ad8\u4fe1\u606f\u91cf\u7684\u4e3b\u6210\u5206\u3002\u6b21\u4f73\u6295\u5f71\u65b9\u5411\u4f4d\u4e8e\u6700\u4f73\u6295\u5f71\u65b9\u5411\u7684\u6b63\u4ea4\u7a7a\u95f4\uff0c\u662f\u7b2c\u4e8c\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u7279\u5f81\u503c\u3001\u7279\u5f81\u5411\u91cf \u76f8\u5173\u7cfb\u6570\u77e9\u9635\u5c31\u662f\u968f\u673a\u53d8\u91cf\u6807\u51c6\u5316\u540e\u7684\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u8ba1\u7b97\u76f8\u5173\u7cfb\u6570\u77e9\u9635R= \\(\\Sigma\\) \u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf \\(R\\alpha=\\lambda\\alpha\\) , \\(\\lambda\\) \u4e3a\u7279\u5f81\u503c\uff0c \\(\\alpha\\) \u4e3a\u7279\u5f81\u5411\u91cf \u56e0\u6b64\uff0c\u5f97\u5230\u76f8\u5173\u7cfb\u6570\u77e9\u9635R\u7684\u7279\u5f81\u503c \\(\\lambda_1,\\lambda_2,\\ldots,\\lambda_m\\) , \u53ca\u5bf9\u5e94\u7684\u6807\u51c6\u6b63\u4ea4\u5316\u7279\u5f81\u5411\u91cf \\(\\alpha_1,\\alpha_2,\\ldots,\\alpha_m\\) ,\u5176\u4e2d \\(\\alpha_j=[\\alpha_{1j},\\alpha_{2j},\\ldots,\\alpha_{mj}]^T\\) ,\u7531\u7279\u5f81\u5411\u91cf\u7ec4\u6210m\u4e2a\u65b0\u7684\u6307\u6807\u53d8\u91cf \\[ \\begin{cases} F_1=\\alpha_{11}y_1+\\alpha_{21}y_2+\\cdots+\\alpha_{m1}y_m \\\\ F_2=\\alpha_{12}y_1+\\alpha_{22}y_2+\\cdots+\\alpha_{m2}y_m \\\\ \\vdots \\\\ F_m=\\alpha_{1m}y_1+\\alpha_{2m}y_2+\\cdots+\\alpha_{mm}y_m \\\\ \\end{cases} \\] \u5176\u4e2d \\(F_1\u662f\u7b2c1\u4e3b\u6210\u5206\uff0cF_2\u662f\u7b2c2\u4e3b\u6210\u5206,...,F_m\u662f\u7b2cm\u4e3b\u6210\u5206\\) \u8d21\u732e\u7387\u3001\u7d2f\u8ba1\u8d21\u732e\u7387 \u4e3b\u6210\u5206 \\(F_j\\) \u7684\u8d21\u732e\u7387\u4e3a: $$ w_j=\\frac{\\lambda_j}{\\sum_{k=1}^{m}\\lambda_k} , j=1,2,\\ldots,m$$ \u524di\u4e2a\u4e3b\u6210\u5206\u7684\u7d2f\u8ba1\u8d21\u732e\u7387\u4e3a: \\[\\frac{\\sum_{k=1}^{i}\\lambda_k}{\\sum_{k=1}^m\\lambda_k}\\] \u4e00\u822c\u53d6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7d2f\u8ba1\u8d21\u732e\u7387\u8fbe\u523085%\u4ee5\u4e0a\u7684\u7279\u5f81\u503c \\(\\lambda_1,\\lambda_2,\\ldots,\\lambda_k\\) ,\u6240\u5bf9\u5e94\u7684\u524dk\u4e2a\u4e3b\u6210\u5206 \\((k\\leqslant m)\\) \uff0c\u5373\u5c06\u6570\u636e\u4ecem\u7ef4\u964d\u5230k\u7ef4\uff0c\u8fbe\u5230\u964d\u7ef4\u7684\u76ee\u7684\u3002 \u5229\u7528sklearn\u5e93\u5b9e\u73b0PCA import numpy as np from sklearn import decomposition np.random.seed(0) x1 = np.random.normal(size=100) #\u9ed8\u8ba4\u5747\u503c0\uff0c\u6807\u51c6\u5dee1\u7684\u6b63\u6001\u5206\u5e03,shape=(100,) x2 = np.random.normal(size=100) x3 = x1 + x2 X = np.c_[x1,x2,x3] #(100,3) pca = decomposition.PCA() #\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0n_components\u53c2\u6570 pca.fit(X) print(pca.explained_variance_) #\u53ef\u89e3\u91ca\u6027\u65b9\u5dee(\u7279\u5f81\u503c) pca.n_components = 2 #\u8bbe\u7f6e\u7ef4\u5ea6 X_reduced = pca.fit_transform(X) print(X_reduced.shape) \u8f93\u51fa: [3.51511512e+00 9.35139697e-01 1.40645385e-31] (100, 2) \u624b\u52a8\u5b9e\u73b0PCA import numpy as np from sklearn import decomposition np.random.seed(0) x1 = np.random.normal(size=100) #\u9ed8\u8ba4\u5747\u503c0\uff0c\u6807\u51c6\u5dee1\u7684\u6b63\u6001\u5206\u5e03,shape=(100,) x2 = np.random.normal(size=100) x3 = x1 + x2 X = np.c_[x1,x2,x3] #(100,3) \uff0c\u9664\u4e00\u7ef4\u6570\u7ec4\u5916\uff0c\u548cnp.hstack\u7ed3\u679c\u76f8\u540c n,m = X.shape mean_c = np.mean(X,axis=0) #\u6bcf\u4e00\u5217\u5747\u503c std_c = np.std(X,axis=0,ddof=0) #\u603b\u4f53\u65b9\u5deeddof=0\uff0csigma:\u9664\u4ee5n;\u6837\u672c\u6807\u51c6\u5deeddof=1\uff0csigma:\u9664\u4ee5n-1;\u65b9\u5dee\u7528np.var std_data = (X-mean_c)/std_c sigma = 1/n*np.dot(std_data.T,std_data) #\u534f\u65b9\u5dee\u77e9\u9635(\u76f8\u5173\u7cfb\u6570\u77e9\u9635) #\u8ba1\u7b97\u7279\u5f81\u503c\u3001\u7279\u5f81\u5411\u91cf eig_vals,eig_vecs = np.linalg.eig(sigma) #\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u914d\u5bf9 eig_pairs = [(np.abs(eig_vals[i]), eig_vecs[:,i]) for i in range(len(eig_vals))] # \u6309\u7279\u5f81\u503c\u5927\u5c0f\u8fdb\u884c\u6392\u5e8f eig_pairs = sorted(eig_pairs, key=lambda k: k[0], reverse=True) # \u6307\u5b9a\u8981\u964d\u5230\u7684\u7ef4\u6570\uff0c\u6bd4\u59822\u3002\u5c06\u7279\u5f81\u5411\u91cf\u6c34\u5e73\u5e73\u94fa\u5408\u5e76,\u4ee5\u5217\u5411\u91cf\u5f62\u5f0f\u62fc\u5408\u3002 pca_matrix = np.hstack([eig_pairs[i][1].reshape(-1, 1) for i in range(2)]) # \u5c06\u539f\u59cb\u6570\u636e\u8fdb\u884c\u6295\u5f71\u3002 res = X.dot(pca_matrix) print(sorted(eig_val,reverse=True)) print(res.shape) \u8f93\u51fa: [2.1117041069332574, 0.8882958930667454, 4.532663311939432e-17] (100, 2) \u6b63\u4ea4\u77e9\u9635 \u5b9a\u4e49: A\u662f\u6b63\u4ea4\u77e9\u9635\uff0c\u5219A\u5fc5\u4e3a\u65b9\u9635\uff0c\u5e76\u4e14 \\(AA^T=E\\) \u6216 \\(A^TA=E\\) \uff0cE\u662f\u5355\u4f4d\u77e9\u9635\u3002 \u7279\u5f81: \\(A^T\u7684\u5404\u884c\u662f\u5355\u4f4d\u5411\u91cf\u4e14\u4e24\u4e24\u6b63\u4ea4\\) \\(A^T\u7684\u5404\u5217\u662f\u5355\u4f4d\u5411\u91cf\u4e14\u4e24\u4e24\u6b63\u4ea4\\) \u884c\u5217\u5f0fdetA=+1\u6216-1 \\(A^T=A^{-1}\\) \u6b63\u4ea4\u77e9\u9635\u4e00\u822c\u7528\u5b57\u6bcdQ\u8868\u793a \u4f8b\u5982 \\(A=[r_{11},r_{12};r_{21},r_{22}]\\) \uff0c\u5219: \\(r_{11}^2+r_{12}^2=r_{21}^2+r_{22}^2=1\\) , \\(r_{11}r{21}+r_{12}r_{22}=0\\) \u5947\u5f02\u503c\u5206\u89e3(SVD) \u5434\u6069\u8fbe\u7684\u300a\u673a\u5668\u5b66\u4e60\u300b\u8bfe\u7a0b\u4e2d\u7684\u4e3b\u6210\u5206\u5206\u6790\u7684\u89c6\u9891\u4e2d\uff0c\u91c7\u7528\u7684\u662f\u534f\u65b9\u5dee\u77e9\u9635 \\(\\Sigma\\) \u7684\u5947\u5f02\u503c\u5206\u89e3(SVD)\u6765\u51cf\u5c11\u8ba1\u7b97\u91cf,\u800c\u4e0a\u8ff0\u6211\u4eec\u91c7\u7528\u7684\u662f\u534f\u65b9\u5dee\u77e9\u9635\u7684\u7279\u5f81\u503c\u5206\u89e3\u7684\u5f62\u5f0f\u6c42\u89e3\uff0c\u5176\u672c\u8d28\u662f\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u534f\u65b9\u5dee\u77e9\u9635\u662f\u5bf9\u79f0\u6b63\u5b9a\u7684\u3002 \u5bf9\u4e8e\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635A\uff0c\u5176\u7279\u5f81\u503c\u5206\u89e3: \\(A\\alpha=\\lambda\\alpha\\) \u5b83\u7684\u5947\u5f02\u503c\u5206\u89e3: \\(AA^T\\alpha=A\\lambda\\alpha=\\lambda^2\\alpha\\) \u5947\u5f02\u503c\u5206\u89e3(Singular Value Decomposition)\u5b9a\u4e49: SVD\u4e5f\u662f\u5bf9\u77e9\u9635\u8fdb\u884c\u5206\u89e3\uff0c\u4f46\u662f\u548c\u7279\u5f81\u5206\u89e3\u4e0d\u540c\uff0cSVD\u5e76\u4e0d\u8981\u6c42\u8981\u5206\u89e3\u7684\u77e9\u9635\u4e3a\u65b9\u9635\u3002\u5047\u8bbe\u6211\u4eec\u7684\u77e9\u9635A\u662f\u4e00\u4e2am\u00d7n\u7684\u77e9\u9635\uff0c\u90a3\u4e48\u6211\u4eec\u5b9a\u4e49\u77e9\u9635A\u7684SVD\u4e3a\uff1a $$ A=U\\Sigma V^T$$ \u5176\u4e2dU\u662f\u4e00\u4e2am\u00d7m\u7684\u77e9\u9635\uff0c \\(\\Sigma\\) \u662f\u4e00\u4e2am\u00d7n\u7684\u77e9\u9635\uff0c\u9664\u4e86\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\u4ee5\u5916\u5168\u4e3a0\uff0c\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u79f0\u4e3a\u5947\u5f02\u503c\uff0cV\u662f\u4e00\u4e2an\u00d7n\u7684\u77e9\u9635\u3002U\u548cV\u90fd\u662f\u9149\u77e9\u9635\uff0c\u5373\u6ee1\u8db3 \\(U^TU=I,V^TV=I\\) .(\u82e5\u9149\u77e9\u9635\u7684\u5143\u7d20\u90fd\u662f\u5b9e\u6570\uff0c\u5373\u4e3a\u6b63\u4ea4\u77e9\u9635)\u3002 \u6c42U: \u6c42 \\(AA^T\\) \u7684\u5f97\u5230\u4e00\u4e2am\u00d7m\u7684\u65b9\u9635\uff0c\u5bf9\u8be5\u65b9\u9635\u8fdb\u884c\u7279\u5f81\u5206\u89e3\uff0c\u5f97\u5230 \\(AA^T\\) \u7684m\u4e2a\u7279\u5f81\u503c\u548c\u5bf9\u5e94\u7684m\u4e2a\u7279\u5f81\u5411\u91cf\uff0c\u5c06\u6240\u6709\u7279\u5f81\u5411\u91cf\u5f20\u6210\u4e00\u4e2am\u00d7m\u7684\u77e9\u9635\uff0c\u5373U\u77e9\u9635\u3002\u4e00\u822c\u6211\u4eec\u5c06U\u4e2d\u7684\u6bcf\u4e2a\u7279\u5f81\u5411\u91cf\u53eb\u505aA\u7684\u5de6\u5947\u5f02\u5411\u91cf\u3002 \u6c42V: \u6c42 \\(A^TA\\) \u7684\u5f97\u5230\u4e00\u4e2an\u00d7n\u7684\u65b9\u9635\uff0c\u5bf9\u8be5\u65b9\u9635\u8fdb\u884c\u7279\u5f81\u5206\u89e3\uff0c\u5f97\u5230 \\(A^TA\\) \u7684n\u4e2a\u7279\u5f81\u503c\u548c\u5bf9\u5e94\u7684n\u4e2a\u7279\u5f81\u5411\u91cf\uff0c\u5c06\u6240\u6709\u7279\u5f81\u5411\u91cf\u5f20\u6210\u4e00\u4e2an\u00d7n\u7684\u77e9\u9635\uff0c\u5373V\u77e9\u9635\u3002\u4e00\u822c\u6211\u4eec\u5c06V\u4e2d\u7684\u6bcf\u4e2a\u7279\u5f81\u5411\u91cf\u53eb\u505aA\u7684\u53f3\u5947\u5f02\u5411\u91cf\u3002 \u6c42 \\(\\Sigma\\) : \u7531\u4e8e \\(\\Sigma\\) \u9664\u4e86\u5bf9\u89d2\u7ebf\u4e0a\u662f\u5947\u5f02\u503c\u5176\u4ed6\u4f4d\u7f6e\u90fd\u662f0\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u5947\u5f02\u503c \\(\\sigma\\) \u5c31\u53ef\u4ee5\u4e86\u3002 \u5982\u4e0a\uff0c\u6c42\u51fa\u6bcf\u4e2a\u5947\u5f02\u503c\uff0c\u6309\u5bf9\u89d2\u7ebf\u6392\u5217\u5f97\u5230\u5947\u5f02\u503c\u77e9\u9635\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u6c42\u51fa \\(A^TA\\) \u7684\u7279\u5f81\u503c\u53d6\u5e73\u65b9\u6839\u6765\u6c42\u5947\u5f02\u503c\uff0c \\(\\sigma_i=\\sqrt{\\lambda_i}\\) \u3002 def _svd(data): U, S, VT = np.linalg.svd(data) return U, S, VT \u53c2\u8003\uff1a https://zhuanlan.zhihu.com/p/29846048 https://zhuanlan.zhihu.com/p/78193297","title":"PCA"},{"location":"ml/mypca/#pca","text":"\u4e3b\u6210\u5206\u5206\u6790\u6cd5\uff08principal components analysis\uff09 \u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u964d\u7ef4\u7b97\u6cd5\uff0c\u5c31\u662f\u7528\u8f83\u5c11\u7684\u6307\u6807\u53d8\u91cf\u53bb\u53cd\u6620\u51fa\u521d\u59cb\u6570\u636e\u7684\u5927\u591a\u6570\u4fe1\u606f\uff0c\u8fd9\u4e9b\u8f83\u5c11\u7684\u6307\u6807\u53d8\u91cf\u5c31\u662f\u4e3b\u6210\u5206\uff0c\u8fd9\u4e9b\u4e3b\u6210\u5206\u5c31\u662f\u539f\u59cb\u53d8\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u5e76\u4e14\u5f7c\u6b64\u4e92\u4e0d\u76f8\u5173\u3002\u4e3b\u6210\u5206\u5206\u6790\u6cd5\u4e3b\u8981\u7528\u6765\u89e3\u51b3\u591a\u53d8\u91cf\u4e14\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u5f88\u5927\u76f8\u5173\u6027\u7684\u591a\u5143\u5206\u6790\u95ee\u9898\u3002 \u57fa\u672c\u601d\u60f3 :\u627e\u5230\u4e00\u4e2a\u5750\u6807\u8f74\uff0c\u5c06\u6570\u636e\u6620\u5c04\u5230\u8fd9\u4e2a\u8f74\u4e0a\u4e4b\u540e\u6240\u8ba1\u7b97\u7684\u65b9\u5dee\u6700\u5927\uff0c\u65b9\u5dee\u8d8a\u5927\u5c31\u610f\u5473\u7740\u70b9\u8d8a\u5206\u6563\uff0c\u4fdd\u7559\u7684\u4fe1\u606f\u8d8a\u591a\uff0c\u8d8a\u91cd\u8981\u3002\u6362\u5c31\u8bdd\u8bf4\uff0c\u5c31\u662f\u4ece\u539f\u59cb\u6570\u636e\u7684\u4e00\u5806\u53d8\u91cf\u4e2d\u63d0\u53d6\u51fa\u4e00\u90e8\u5206\u53d8\u91cf\uff0c\u8fd9\u90e8\u5206\u53d8\u91cf\u80fd\u5c3d\u53ef\u80fd\u7684\u4fdd\u7559\u539f\u59cb\u6570\u636e\u7684\u7279\u6027\u3002\u4f8b\u5982\uff0c\u5c06\u4e00\u4e2a\u4e09\u7ef4\u6570\u636e\u964d\u5230\u4e24\u7ef4\uff0c\u5c31\u662f\u5728\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u627e\u5230\u4e00\u4e2a\u4e8c\u7ef4\u5e73\u9762\uff0c\u5c06\u6570\u636e\u6295\u5f71\u5230\u5e73\u9762\u4e0a\uff0c\u4f7f\u5176\u5728\u8be5\u5e73\u9762\u5206\u5e03\u7684\u65b9\u5dee\u6700\u5c0f\u3002 \u57fa\u672c\u6b65\u9aa4 : \u5bf9\u6570\u636e\u8fdb\u884c\u4e2d\u5fc3\u5316(\u6bcf\u4e2a\u7279\u5f81\u6837\u672c\u51cf\u53bb\u5747\u503c\uff0c\u628a\u5750\u6807\u539f\u70b9\u653e\u5230\u6570\u636e\u4e2d\u5fc3) \u4e00\u822c\u60c5\u51b5\uff0c\u7b2c\u4e00\u6b65\u76f4\u63a5\u5bf9\u6570\u636e\u8fdb\u884c\u5f52\u4e00\u5316\u5904\u7406(\u4e2d\u5fc3\u5316\u7684\u540c\u65f6\u6d88\u9664\u91cf\u7eb2\u7684\u5f71\u54cd) \u8ba1\u7b97\u5f52\u4e00\u5316\u540e\u6570\u636e\u96c6\u7684\u534f\u65b9\u5dee\u77e9\u9635\u4e0e\u7279\u5f81\u503c(\u5750\u6807\u8f74\u65b9\u5411\u7684\u65b9\u5dee)\u3001\u7279\u5f81\u5411\u91cf(\u5750\u6807\u8f74\u65b9\u5411) \u9009\u53d6K\u4e2a\u6700\u5927\u7684\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u4e3b\u6210\u5206","title":"\u4e3b\u6210\u5206\u5206\u6790(PCA)"},{"location":"ml/mypca/#_1","text":"\u5047\u8bbe\u6709n\u7814\u7a76\u5bf9\u8c61\uff0cm\u4e2a\u6307\u6807\u53d8\u91cf \\(x_1,x_2,\\ldots,x_m\\) \uff0c\u7b2ci\u4e2a\u5bf9\u8c61\u7b2cj\u4e2a\u6307\u6807\u53d6\u503c \\(a_{ij}\\) \uff0c\u5219\u6784\u6210\u6570\u636e\u77e9\u9635 \\(A=(a_{ij})_{n*m}\\) \u6837\u672c\u5747\u503c : $$\\mu_j=\\frac{1}{n}\\sum_{i=1}^na_{ij} $$ \u4e2d\u5fc3\u5316 : $$ x_j'=x_j-\\mu_j$$ \u5f52\u4e00\u5316 : $$ y_j=\\frac{x_j-\\mu_j}{\\sigma_j}$$ \u5176\u4e2d \\(\\sigma_j=\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^{n}(a_{ij}-u_j)^2}\\)","title":"\u6570\u636e\u5904\u7406"},{"location":"ml/mypca/#_2","text":"\u65b9\u5dee\u662f\u7528\u6765\u5ea6\u91cf\u968f\u673a\u53d8\u91cf\u548c\u5176\u6570\u5b66\u671f\u671b\uff08\u5747\u503c\uff09\u4e4b\u95f4\u7684\u504f\u79bb\u7a0b\u5ea6\u7684\u4e00\u4e2a\u7edf\u8ba1\u91cf\u3002 \u7edf\u8ba1\u5b66\u4e2d(\u6240\u6709\u6837\u672c)\u7684\u603b\u4f53\u65b9\u5dee\u516c\u5f0f: $$ \\sigma^2=\\frac{\\sum(X-u)^2}{N}$$ \u5176\u4e2d \\(\\sigma^2\\) \u662f\u603b\u4f53\u65b9\u5dee\uff0cX\u662f\u968f\u673a\u53d8\u91cf\uff0c \\(\\mu\\) \u662f\u603b\u4f53\u5747\u503c\uff0cN\u662f\u603b\u4f53\u6837\u672c\u6570\u3002\u8fd9\u91cc\u63d0\u5230\u7684\u6837\u672c\uff0c\u662f\u57fa\u4e8e\u6837\u672c\u6570\u91cfN\uff08\u51e0\u4e4e\uff09\u65e0\u9650\u7684\u5047\u8bbe\u3002\u5bf9\u5e94\u7684\u5404\u4e2a\u7edf\u8ba1\u91cf\uff0c\u4e5f\u662f\u6240\u6709\u7684\u6837\u672c\u6240\u670d\u4ece\u7684\u5206\u5e03\u7684\u771f\u5b9e\u53c2\u6570\uff0c\u662f\u5ba2\u89c2\u6b63\u771f\u5b9e\u7684\u3002\u603b\u4f53\u65b9\u5dee\u662f\u4e2a\u51c6\u786e\u503c\u3002 \u73b0\u5b9e\u60c5\u51b5\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u5f97\u4e0d\u5230\u6240\u6709\u7684\u65e0\u9650\u6837\u672c\uff0c\u800c\u53ea\u80fd\u62bd\u6837\u51fa\u4e00\u5b9a\u6570\u91cf\u7684\u6709\u9650\u6837\u672c\u3002\u901a\u8fc7\u6709\u9650\u7684\u6837\u672c\u6765\u8ba1\u7b97\u7684\u65b9\u5dee\uff0c\u79f0\u4e3a\u6837\u672c\u65b9\u5dee,\u516c\u5f0f: $$ S^2=\\frac{1}{n-1}\\sum_{i=1}{n}(X_i-\\bar X)^2$$ \u6ce8\u610f\u4e0a\u5f0f\u7684\u7cfb\u6570\u548c\u603b\u4f53\u65b9\u5dee\u516c\u5f0f\u91cc\u9762\u7684\u7cfb\u6570\u4e0d\u4e00\u6837\uff0c\u5206\u6bcd\u662fn-1\u3002\u4e0d\u7528n\u4f5c\u5206\u6bcd\uff0c\u662f\u56e0\u4e3a\u5982\u679c\u6cbf\u7528\u603b\u4f53\u65b9\u5dee\u7684\u516c\u5f0f\u5f97\u5230\u7684\u6837\u672c\u65b9\u5dee\uff0c\u662f\u5bf9\u65b9\u5dee\u7684\u4e00\u4e2a\u6709\u504f\u4f30\u8ba1\u3002\u7528n\u22121\u4f5c\u4e3a\u5206\u6bcd\u7684\u6837\u672c\u65b9\u5dee\u516c\u5f0f\uff0c\u624d\u662f\u5bf9\u65b9\u5dee\u7684\u65e0\u504f\u4f30\u8ba1\u3002\u6837\u672c\u65b9\u5dee\u662f\u4e2a\u968f\u673a\u53d8\u91cf\u3002","title":"\u65b9\u5dee"},{"location":"ml/mypca/#_3","text":"\u65b9\u5dee\u662f\u53cd\u6620\u4e00\u7ec4\u6570\u636e\u79bb\u6563\u7a0b\u5ea6\u7684\u5ea6\u91cf\uff0c\u4e00\u4e2a\u7ef4\u5ea6\u7684\u65b9\u5dee\u4e3a: $$ var(X)=\\frac{\\sum_{i=1}^n(X_i-\\bar X)^2}{n-1}$$ \u534f\u65b9\u5dee\u662f\u5bf9\u4e24\u4e2a\u968f\u673a\u53d8\u91cf\u8054\u5408\u5206\u5e03\u7ebf\u6027\u76f8\u5173\u7a0b\u5ea6\u7684\u4e00\u79cd\u5ea6\u91cf\uff0c\u534f\u65b9\u5dee\u4e3a0\uff0c\u8bc1\u660e\u8fd9\u4e24\u4e2a\u7ef4\u5ea6\u4e4b\u95f4\u6ca1\u6709\u5173\u7cfb\uff0c\u534f\u65b9\u5dee\u4e3a\u6b63\uff0c\u4e24\u4e2a\u6b63\u76f8\u5173\uff0c\u4e3a\u8d1f\u5219\u8d1f\u76f8\u5173\u3002\u5b9a\u4e49\u4e3a: $$ cov(X,Y)=\\frac{\\sum_{i=1}^n(X_i-\\bar X)(Y_i-\\bar Y)}{n-1}$$ \u6807\u51c6\u5316\u540e\u7684\u6570\u636e\u77e9\u9635 \\(B=(b_{ij})_{n*m}\\) ,\u6837\u672c\u77e9\u9635 : \\[ B= \\begin{bmatrix} b_{11} & b_{12} & \\cdots & b_{1m}\\\\ b_{21} & b_{22} & \\cdots & b_{2m}\\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ b_{n1} & b_{n2} & \\cdots & b_{nm}\\\\ \\end{bmatrix} \\] \u5176\u4e2d \\(b_{ij}=\\frac{a_{ij}-\\mu_j}{\\sigma_j}\\) \uff0c\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1. \u534f\u65b9\u5dee\u77e9\u9635 \\[ \\Sigma=r_{ij}= \\begin{bmatrix} var(x_1) & cov(x_1,x_2) & \\cdots & cov(x_1,x_m)\\\\ cov(x_2,x_1) & var(x_2) & \\cdots & cov(x_2,x_m)\\\\ \\vdots & \\vdots & \\ddots & \\vdots \\\\ cov(x_m,x_1) & cov(x_m,x_2) & \\cdots & var(x_m)\\\\ \\end{bmatrix} \\] \\[ r_{ij}=\\frac{1}{n-1}\\sum_{k=1}^{n}b_{ki}b_{kj} ,\u5176\u4e2di,j=1,2,\\ldots,m \\] \u6ce8\u610f : 1\u3001\u534f\u65b9\u5dee\u77e9\u9635\u662f\u5bf9\u79f0\u77e9\u9635\uff0c\u5bf9\u79f0\u77e9\u9635\u7684\u7279\u5f81\u5411\u91cf\u76f8\u4e92\u6b63\u4ea4\uff0c\u5176\u70b9\u4e58\u4e3a0\u3002 2\u3001\u6570\u636e\u70b9\u5728\u7279\u5f81\u5411\u91cf\u4e0a\u6295\u5f71\u7684\u65b9\u5dee\uff0c\u4e3a\u5bf9\u5e94\u7684\u7279\u5f81\u503c\uff0c\u9009\u62e9\u7279\u5f81\u503c\u5927\u7684\u7279\u5f81\u5411\u91cf\uff0c\u5c31\u662f\u9009\u62e9\u70b9\u6295\u5f71\u65b9\u5dee\u5927\u7684\u65b9\u5411\uff0c\u5373\u662f\u5177\u6709\u9ad8\u4fe1\u606f\u91cf\u7684\u4e3b\u6210\u5206\u3002\u6b21\u4f73\u6295\u5f71\u65b9\u5411\u4f4d\u4e8e\u6700\u4f73\u6295\u5f71\u65b9\u5411\u7684\u6b63\u4ea4\u7a7a\u95f4\uff0c\u662f\u7b2c\u4e8c\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u7279\u5f81\u503c\u3001\u7279\u5f81\u5411\u91cf \u76f8\u5173\u7cfb\u6570\u77e9\u9635\u5c31\u662f\u968f\u673a\u53d8\u91cf\u6807\u51c6\u5316\u540e\u7684\u534f\u65b9\u5dee\u77e9\u9635\uff0c\u8ba1\u7b97\u76f8\u5173\u7cfb\u6570\u77e9\u9635R= \\(\\Sigma\\) \u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf \\(R\\alpha=\\lambda\\alpha\\) , \\(\\lambda\\) \u4e3a\u7279\u5f81\u503c\uff0c \\(\\alpha\\) \u4e3a\u7279\u5f81\u5411\u91cf \u56e0\u6b64\uff0c\u5f97\u5230\u76f8\u5173\u7cfb\u6570\u77e9\u9635R\u7684\u7279\u5f81\u503c \\(\\lambda_1,\\lambda_2,\\ldots,\\lambda_m\\) , \u53ca\u5bf9\u5e94\u7684\u6807\u51c6\u6b63\u4ea4\u5316\u7279\u5f81\u5411\u91cf \\(\\alpha_1,\\alpha_2,\\ldots,\\alpha_m\\) ,\u5176\u4e2d \\(\\alpha_j=[\\alpha_{1j},\\alpha_{2j},\\ldots,\\alpha_{mj}]^T\\) ,\u7531\u7279\u5f81\u5411\u91cf\u7ec4\u6210m\u4e2a\u65b0\u7684\u6307\u6807\u53d8\u91cf \\[ \\begin{cases} F_1=\\alpha_{11}y_1+\\alpha_{21}y_2+\\cdots+\\alpha_{m1}y_m \\\\ F_2=\\alpha_{12}y_1+\\alpha_{22}y_2+\\cdots+\\alpha_{m2}y_m \\\\ \\vdots \\\\ F_m=\\alpha_{1m}y_1+\\alpha_{2m}y_2+\\cdots+\\alpha_{mm}y_m \\\\ \\end{cases} \\] \u5176\u4e2d \\(F_1\u662f\u7b2c1\u4e3b\u6210\u5206\uff0cF_2\u662f\u7b2c2\u4e3b\u6210\u5206,...,F_m\u662f\u7b2cm\u4e3b\u6210\u5206\\)","title":"\u534f\u65b9\u5dee\u77e9\u9635\u3001\u7279\u5f81\u503c\u3001\u7279\u5f81\u5411\u91cf"},{"location":"ml/mypca/#_4","text":"\u4e3b\u6210\u5206 \\(F_j\\) \u7684\u8d21\u732e\u7387\u4e3a: $$ w_j=\\frac{\\lambda_j}{\\sum_{k=1}^{m}\\lambda_k} , j=1,2,\\ldots,m$$ \u524di\u4e2a\u4e3b\u6210\u5206\u7684\u7d2f\u8ba1\u8d21\u732e\u7387\u4e3a: \\[\\frac{\\sum_{k=1}^{i}\\lambda_k}{\\sum_{k=1}^m\\lambda_k}\\] \u4e00\u822c\u53d6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u7d2f\u8ba1\u8d21\u732e\u7387\u8fbe\u523085%\u4ee5\u4e0a\u7684\u7279\u5f81\u503c \\(\\lambda_1,\\lambda_2,\\ldots,\\lambda_k\\) ,\u6240\u5bf9\u5e94\u7684\u524dk\u4e2a\u4e3b\u6210\u5206 \\((k\\leqslant m)\\) \uff0c\u5373\u5c06\u6570\u636e\u4ecem\u7ef4\u964d\u5230k\u7ef4\uff0c\u8fbe\u5230\u964d\u7ef4\u7684\u76ee\u7684\u3002","title":"\u8d21\u732e\u7387\u3001\u7d2f\u8ba1\u8d21\u732e\u7387"},{"location":"ml/mypca/#sklearnpca","text":"import numpy as np from sklearn import decomposition np.random.seed(0) x1 = np.random.normal(size=100) #\u9ed8\u8ba4\u5747\u503c0\uff0c\u6807\u51c6\u5dee1\u7684\u6b63\u6001\u5206\u5e03,shape=(100,) x2 = np.random.normal(size=100) x3 = x1 + x2 X = np.c_[x1,x2,x3] #(100,3) pca = decomposition.PCA() #\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0n_components\u53c2\u6570 pca.fit(X) print(pca.explained_variance_) #\u53ef\u89e3\u91ca\u6027\u65b9\u5dee(\u7279\u5f81\u503c) pca.n_components = 2 #\u8bbe\u7f6e\u7ef4\u5ea6 X_reduced = pca.fit_transform(X) print(X_reduced.shape) \u8f93\u51fa: [3.51511512e+00 9.35139697e-01 1.40645385e-31] (100, 2)","title":"\u5229\u7528sklearn\u5e93\u5b9e\u73b0PCA"},{"location":"ml/mypca/#pca_1","text":"import numpy as np from sklearn import decomposition np.random.seed(0) x1 = np.random.normal(size=100) #\u9ed8\u8ba4\u5747\u503c0\uff0c\u6807\u51c6\u5dee1\u7684\u6b63\u6001\u5206\u5e03,shape=(100,) x2 = np.random.normal(size=100) x3 = x1 + x2 X = np.c_[x1,x2,x3] #(100,3) \uff0c\u9664\u4e00\u7ef4\u6570\u7ec4\u5916\uff0c\u548cnp.hstack\u7ed3\u679c\u76f8\u540c n,m = X.shape mean_c = np.mean(X,axis=0) #\u6bcf\u4e00\u5217\u5747\u503c std_c = np.std(X,axis=0,ddof=0) #\u603b\u4f53\u65b9\u5deeddof=0\uff0csigma:\u9664\u4ee5n;\u6837\u672c\u6807\u51c6\u5deeddof=1\uff0csigma:\u9664\u4ee5n-1;\u65b9\u5dee\u7528np.var std_data = (X-mean_c)/std_c sigma = 1/n*np.dot(std_data.T,std_data) #\u534f\u65b9\u5dee\u77e9\u9635(\u76f8\u5173\u7cfb\u6570\u77e9\u9635) #\u8ba1\u7b97\u7279\u5f81\u503c\u3001\u7279\u5f81\u5411\u91cf eig_vals,eig_vecs = np.linalg.eig(sigma) #\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\u914d\u5bf9 eig_pairs = [(np.abs(eig_vals[i]), eig_vecs[:,i]) for i in range(len(eig_vals))] # \u6309\u7279\u5f81\u503c\u5927\u5c0f\u8fdb\u884c\u6392\u5e8f eig_pairs = sorted(eig_pairs, key=lambda k: k[0], reverse=True) # \u6307\u5b9a\u8981\u964d\u5230\u7684\u7ef4\u6570\uff0c\u6bd4\u59822\u3002\u5c06\u7279\u5f81\u5411\u91cf\u6c34\u5e73\u5e73\u94fa\u5408\u5e76,\u4ee5\u5217\u5411\u91cf\u5f62\u5f0f\u62fc\u5408\u3002 pca_matrix = np.hstack([eig_pairs[i][1].reshape(-1, 1) for i in range(2)]) # \u5c06\u539f\u59cb\u6570\u636e\u8fdb\u884c\u6295\u5f71\u3002 res = X.dot(pca_matrix) print(sorted(eig_val,reverse=True)) print(res.shape) \u8f93\u51fa: [2.1117041069332574, 0.8882958930667454, 4.532663311939432e-17] (100, 2)","title":"\u624b\u52a8\u5b9e\u73b0PCA"},{"location":"ml/mypca/#_5","text":"\u5b9a\u4e49: A\u662f\u6b63\u4ea4\u77e9\u9635\uff0c\u5219A\u5fc5\u4e3a\u65b9\u9635\uff0c\u5e76\u4e14 \\(AA^T=E\\) \u6216 \\(A^TA=E\\) \uff0cE\u662f\u5355\u4f4d\u77e9\u9635\u3002 \u7279\u5f81: \\(A^T\u7684\u5404\u884c\u662f\u5355\u4f4d\u5411\u91cf\u4e14\u4e24\u4e24\u6b63\u4ea4\\) \\(A^T\u7684\u5404\u5217\u662f\u5355\u4f4d\u5411\u91cf\u4e14\u4e24\u4e24\u6b63\u4ea4\\) \u884c\u5217\u5f0fdetA=+1\u6216-1 \\(A^T=A^{-1}\\) \u6b63\u4ea4\u77e9\u9635\u4e00\u822c\u7528\u5b57\u6bcdQ\u8868\u793a \u4f8b\u5982 \\(A=[r_{11},r_{12};r_{21},r_{22}]\\) \uff0c\u5219: \\(r_{11}^2+r_{12}^2=r_{21}^2+r_{22}^2=1\\) , \\(r_{11}r{21}+r_{12}r_{22}=0\\)","title":"\u6b63\u4ea4\u77e9\u9635"},{"location":"ml/mypca/#svd","text":"\u5434\u6069\u8fbe\u7684\u300a\u673a\u5668\u5b66\u4e60\u300b\u8bfe\u7a0b\u4e2d\u7684\u4e3b\u6210\u5206\u5206\u6790\u7684\u89c6\u9891\u4e2d\uff0c\u91c7\u7528\u7684\u662f\u534f\u65b9\u5dee\u77e9\u9635 \\(\\Sigma\\) \u7684\u5947\u5f02\u503c\u5206\u89e3(SVD)\u6765\u51cf\u5c11\u8ba1\u7b97\u91cf,\u800c\u4e0a\u8ff0\u6211\u4eec\u91c7\u7528\u7684\u662f\u534f\u65b9\u5dee\u77e9\u9635\u7684\u7279\u5f81\u503c\u5206\u89e3\u7684\u5f62\u5f0f\u6c42\u89e3\uff0c\u5176\u672c\u8d28\u662f\u4e00\u6837\u7684\uff0c\u56e0\u4e3a\u534f\u65b9\u5dee\u77e9\u9635\u662f\u5bf9\u79f0\u6b63\u5b9a\u7684\u3002 \u5bf9\u4e8e\u5bf9\u79f0\u6b63\u5b9a\u77e9\u9635A\uff0c\u5176\u7279\u5f81\u503c\u5206\u89e3: \\(A\\alpha=\\lambda\\alpha\\) \u5b83\u7684\u5947\u5f02\u503c\u5206\u89e3: \\(AA^T\\alpha=A\\lambda\\alpha=\\lambda^2\\alpha\\) \u5947\u5f02\u503c\u5206\u89e3(Singular Value Decomposition)\u5b9a\u4e49: SVD\u4e5f\u662f\u5bf9\u77e9\u9635\u8fdb\u884c\u5206\u89e3\uff0c\u4f46\u662f\u548c\u7279\u5f81\u5206\u89e3\u4e0d\u540c\uff0cSVD\u5e76\u4e0d\u8981\u6c42\u8981\u5206\u89e3\u7684\u77e9\u9635\u4e3a\u65b9\u9635\u3002\u5047\u8bbe\u6211\u4eec\u7684\u77e9\u9635A\u662f\u4e00\u4e2am\u00d7n\u7684\u77e9\u9635\uff0c\u90a3\u4e48\u6211\u4eec\u5b9a\u4e49\u77e9\u9635A\u7684SVD\u4e3a\uff1a $$ A=U\\Sigma V^T$$ \u5176\u4e2dU\u662f\u4e00\u4e2am\u00d7m\u7684\u77e9\u9635\uff0c \\(\\Sigma\\) \u662f\u4e00\u4e2am\u00d7n\u7684\u77e9\u9635\uff0c\u9664\u4e86\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\u4ee5\u5916\u5168\u4e3a0\uff0c\u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u79f0\u4e3a\u5947\u5f02\u503c\uff0cV\u662f\u4e00\u4e2an\u00d7n\u7684\u77e9\u9635\u3002U\u548cV\u90fd\u662f\u9149\u77e9\u9635\uff0c\u5373\u6ee1\u8db3 \\(U^TU=I,V^TV=I\\) .(\u82e5\u9149\u77e9\u9635\u7684\u5143\u7d20\u90fd\u662f\u5b9e\u6570\uff0c\u5373\u4e3a\u6b63\u4ea4\u77e9\u9635)\u3002 \u6c42U: \u6c42 \\(AA^T\\) \u7684\u5f97\u5230\u4e00\u4e2am\u00d7m\u7684\u65b9\u9635\uff0c\u5bf9\u8be5\u65b9\u9635\u8fdb\u884c\u7279\u5f81\u5206\u89e3\uff0c\u5f97\u5230 \\(AA^T\\) \u7684m\u4e2a\u7279\u5f81\u503c\u548c\u5bf9\u5e94\u7684m\u4e2a\u7279\u5f81\u5411\u91cf\uff0c\u5c06\u6240\u6709\u7279\u5f81\u5411\u91cf\u5f20\u6210\u4e00\u4e2am\u00d7m\u7684\u77e9\u9635\uff0c\u5373U\u77e9\u9635\u3002\u4e00\u822c\u6211\u4eec\u5c06U\u4e2d\u7684\u6bcf\u4e2a\u7279\u5f81\u5411\u91cf\u53eb\u505aA\u7684\u5de6\u5947\u5f02\u5411\u91cf\u3002 \u6c42V: \u6c42 \\(A^TA\\) \u7684\u5f97\u5230\u4e00\u4e2an\u00d7n\u7684\u65b9\u9635\uff0c\u5bf9\u8be5\u65b9\u9635\u8fdb\u884c\u7279\u5f81\u5206\u89e3\uff0c\u5f97\u5230 \\(A^TA\\) \u7684n\u4e2a\u7279\u5f81\u503c\u548c\u5bf9\u5e94\u7684n\u4e2a\u7279\u5f81\u5411\u91cf\uff0c\u5c06\u6240\u6709\u7279\u5f81\u5411\u91cf\u5f20\u6210\u4e00\u4e2an\u00d7n\u7684\u77e9\u9635\uff0c\u5373V\u77e9\u9635\u3002\u4e00\u822c\u6211\u4eec\u5c06V\u4e2d\u7684\u6bcf\u4e2a\u7279\u5f81\u5411\u91cf\u53eb\u505aA\u7684\u53f3\u5947\u5f02\u5411\u91cf\u3002 \u6c42 \\(\\Sigma\\) : \u7531\u4e8e \\(\\Sigma\\) \u9664\u4e86\u5bf9\u89d2\u7ebf\u4e0a\u662f\u5947\u5f02\u503c\u5176\u4ed6\u4f4d\u7f6e\u90fd\u662f0\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u5947\u5f02\u503c \\(\\sigma\\) \u5c31\u53ef\u4ee5\u4e86\u3002 \u5982\u4e0a\uff0c\u6c42\u51fa\u6bcf\u4e2a\u5947\u5f02\u503c\uff0c\u6309\u5bf9\u89d2\u7ebf\u6392\u5217\u5f97\u5230\u5947\u5f02\u503c\u77e9\u9635\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u6c42\u51fa \\(A^TA\\) \u7684\u7279\u5f81\u503c\u53d6\u5e73\u65b9\u6839\u6765\u6c42\u5947\u5f02\u503c\uff0c \\(\\sigma_i=\\sqrt{\\lambda_i}\\) \u3002 def _svd(data): U, S, VT = np.linalg.svd(data) return U, S, VT \u53c2\u8003\uff1a https://zhuanlan.zhihu.com/p/29846048 https://zhuanlan.zhihu.com/p/78193297","title":"\u5947\u5f02\u503c\u5206\u89e3(SVD)"},{"location":"ml/regressionalg/","text":"","title":"\u56de\u5f52\u7b97\u6cd5"},{"location":"numpy%E6%A8%A1%E5%9D%97/mynumpy/","text":"\u7b80\u4ecb numpy \u901a\u5e38\u4e0e scipy \u548c matplotlib \u5e93\u4e00\u8d77\u4f7f\u7528,\u5b83\u7684\u6838\u5fc3\u662fndarray\u5bf9\u8c61\uff0c\u652f\u6301\u5927\u91cf\u7684\u7ef4\u6570\u6570\u7ec4\u4e0e\u77e9\u9635\u8fd0\u7b97\uff0c\u6b64\u5916\u4e5f\u9488\u5bf9\u6570\u7ec4\u8fd0\u7b97\u63d0\u4f9b\u5927\u91cf\u7684\u6570\u5b66\u51fd\u6570\u5e93\u3002 SciPy\u5305\u542b\u7684\u6a21\u5757\u6709\u6700\u4f18\u5316\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u79ef\u5206\u3001\u63d2\u503c\u3001\u7279\u6b8a\u51fd\u6570\u3001\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u3001\u4fe1\u53f7\u5904\u7406\u548c\u56fe\u50cf\u5904\u7406\u3001\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u548c\u5176\u4ed6\u79d1\u5b66\u4e0e\u5de5\u7a0b\u4e2d\u5e38\u7528\u7684\u8ba1\u7b97\u3002 Matplotlib\u662fPython\u7f16\u7a0b\u8bed\u8a00\u53ca\u5176\u6570\u503c\u6570\u5b66\u6269\u5c55\u5305 NumPy \u7684\u53ef\u89c6\u5316\u64cd\u4f5c\u754c\u9762\u3002\u5b83\u4e3a\u5229\u7528\u901a\u7528\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u5de5\u5177\u5305\uff0c\u5982Tkinter, wxPython, Qt\u6216GTK+\u5411\u5e94\u7528\u7a0b\u5e8f\u5d4c\u5165\u5f0f\u7ed8\u56fe\u63d0\u4f9b\u4e86\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff08API\uff09\u3002 numpy\u4e2d\u6587\u6587\u6863 \u57fa\u672c\u64cd\u4f5c \u6c42\u548c np.sum(a, axis, dtype, out, keepdims, initial, where) import numpy as np i = np.array([[1,5],[3,3]]) j = np.array([[2,1],[4,4]]) print(i-j) #\u5bf9\u5e94\u5143\u7d20\u76f8\u51cf a = np.sum(i) b = sum(i) c = np.sum(i,axis=0,keepdims=True) #\u4fdd\u7559\u539f\u7ef4\u5ea6\uff0c\u9ed8\u8ba4\u662fFalse d = np.sum(i,axis=1,keepdims=True) print(a,end='\\n\\n') print(b,end='\\n\\n') print(c,end='\\n\\n') print(d) \u8f93\u51fa\uff1a [[-1 4] [-1 -1]] 12 [4 8] [4 8] [6 6] np.sum()\u53c2\u6570 \u6570\u7ec4\u7684\u5806\u53e0\u548c\u5e73\u94fa np.hstack()\u548cnp.c_[],\u6c34\u5e73\u5e73\u94fa import numpy as np #np.hstack()\u548cnp.c_[],\u6c34\u5e73\u5e73\u94fa a = np.array([[1,2],[3,4]]) b = np.array([[5,6],[7,8]]) print('\u6c34\u5e73\u5e73\u94fa') print('np.hstack((a, b))=\\n',np.hstack((a,b))) print('np.c_[a, b]=\\n',np.c_[a,b]) #\u53ea\u6709\u5f53a,b\u4e3a\u4e00\u7ef4\u6570\u7ec4\u65f6,\u4e24\u79cd\u51fd\u6570\u7ed3\u679c\u4e0d\u540c a1 = a.flatten() b1 = b.flatten() print('a1=\\n',a1) print('b1=\\n',b1) print('np.hstack((a1,b1))=\\n',np.hstack((a1,b1))) print('np.c_[a,b]=\\n',np.c_[a1,b1]) \u8f93\u51fa\uff1a \u6c34\u5e73\u5e73\u94fa np.hstack((a, b))= [[1 2 5 6] [3 4 7 8]] np.c_[a, b]= [[1 2 5 6] [3 4 7 8]] a1= [1 2 3 4] b1= [5 6 7 8] np.hstack((a1,b1))= [1 2 3 4 5 6 7 8] np.c_[a,b]= [[1 5] [2 6] [3 7] [4 8]] np.vstack()\u548cnp.r_[],\u7ad6\u76f4\u5806\u53e0 import numpy as np #np.vstack()\u548cnp.r_[],\u7ad6\u76f4\u5806\u53e0 a = np.array([[1,2],[3,4]]) b = np.array([[5,6],[7,8]]) print('\u7ad6\u76f4\u5806\u53e0') print('np.vstack((a, b))=\\n',np.vstack((a,b))) print('np.r_[a, b]=\\n',np.r_[a,b]) #\u53ea\u6709\u5f53a,b\u4e3a\u4e00\u7ef4\u6570\u7ec4\u65f6,\u4e24\u79cd\u51fd\u6570\u7ed3\u679c\u4e0d\u540c a1 = a.flatten() b1 = b.flatten() print('a1=\\n',a1) print('b1=\\n',b1) print('np.vstack((a1,b1))=\\n',np.vstack((a1,b1))) print('np.r_[a,b]=\\n',np.r_[a1,b1]) \u8f93\u51fa\uff1a \u7ad6\u76f4\u5806\u53e0 np.vstack((a, b))= [[1 2] [3 4] [5 6] [7 8]] np.r_[a, b]= [[1 2] [3 4] [5 6] [7 8]] a1= [1 2 3 4] b1= [5 6 7 8] np.vstack((a1,b1))= [[1 2 3 4] [5 6 7 8]] np.r_[a,b]= [1 2 3 4 5 6 7 8] np.concatenate()\u662f\u5bf9array\u8fdb\u884c\u62fc\u63a5\u7684\u51fd\u6570\uff0c\u4e5f\u80fd\u5b9e\u73b0\u4e0a\u8ff0\u8fc7\u7a0b import numpy as np np.random.seed(1) x1 = np.random.normal(0,1,(2,3)) #\u968f\u673a\u751f\u6210\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1\uff0csize\u4e3a(2,3)\u7684\u968f\u673a\u6570\u7ec4 x2 = np.random.normal(1,2,(2,3)) print('x1=\\n',x1) print('x2=\\n',x2) print(np.concatenate([x1,x2],axis=1)) #\u6309\u6c34\u5e73\u65b9\u5411 print(np.concatenate([x1,x2],axis=0)) #\u6309\u7ad6\u76f4\u53cd\u5411 \u8f93\u51fa\uff1a x1= [[ 1.62434536 -0.61175641 -0.52817175] [-1.07296862 0.86540763 -2.3015387 ]] x2= [[ 4.48962353 -0.5224138 1.63807819] [ 0.50125925 3.92421587 -3.12028142]] [[ 1.62434536 -0.61175641 -0.52817175 4.48962353 -0.5224138 1.63807819] [-1.07296862 0.86540763 -2.3015387 0.50125925 3.92421587 -3.12028142]] [[ 1.62434536 -0.61175641 -0.52817175] [-1.07296862 0.86540763 -2.3015387 ] [ 4.48962353 -0.5224138 1.63807819] [ 0.50125925 3.92421587 -3.12028142]]","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"numpy%E6%A8%A1%E5%9D%97/mynumpy/#_1","text":"numpy \u901a\u5e38\u4e0e scipy \u548c matplotlib \u5e93\u4e00\u8d77\u4f7f\u7528,\u5b83\u7684\u6838\u5fc3\u662fndarray\u5bf9\u8c61\uff0c\u652f\u6301\u5927\u91cf\u7684\u7ef4\u6570\u6570\u7ec4\u4e0e\u77e9\u9635\u8fd0\u7b97\uff0c\u6b64\u5916\u4e5f\u9488\u5bf9\u6570\u7ec4\u8fd0\u7b97\u63d0\u4f9b\u5927\u91cf\u7684\u6570\u5b66\u51fd\u6570\u5e93\u3002 SciPy\u5305\u542b\u7684\u6a21\u5757\u6709\u6700\u4f18\u5316\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u79ef\u5206\u3001\u63d2\u503c\u3001\u7279\u6b8a\u51fd\u6570\u3001\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\u3001\u4fe1\u53f7\u5904\u7406\u548c\u56fe\u50cf\u5904\u7406\u3001\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3\u548c\u5176\u4ed6\u79d1\u5b66\u4e0e\u5de5\u7a0b\u4e2d\u5e38\u7528\u7684\u8ba1\u7b97\u3002 Matplotlib\u662fPython\u7f16\u7a0b\u8bed\u8a00\u53ca\u5176\u6570\u503c\u6570\u5b66\u6269\u5c55\u5305 NumPy \u7684\u53ef\u89c6\u5316\u64cd\u4f5c\u754c\u9762\u3002\u5b83\u4e3a\u5229\u7528\u901a\u7528\u7684\u56fe\u5f62\u7528\u6237\u754c\u9762\u5de5\u5177\u5305\uff0c\u5982Tkinter, wxPython, Qt\u6216GTK+\u5411\u5e94\u7528\u7a0b\u5e8f\u5d4c\u5165\u5f0f\u7ed8\u56fe\u63d0\u4f9b\u4e86\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff08API\uff09\u3002 numpy\u4e2d\u6587\u6587\u6863","title":"\u7b80\u4ecb"},{"location":"numpy%E6%A8%A1%E5%9D%97/mynumpy/#_2","text":"","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"numpy%E6%A8%A1%E5%9D%97/mynumpy/#_3","text":"np.sum(a, axis, dtype, out, keepdims, initial, where) import numpy as np i = np.array([[1,5],[3,3]]) j = np.array([[2,1],[4,4]]) print(i-j) #\u5bf9\u5e94\u5143\u7d20\u76f8\u51cf a = np.sum(i) b = sum(i) c = np.sum(i,axis=0,keepdims=True) #\u4fdd\u7559\u539f\u7ef4\u5ea6\uff0c\u9ed8\u8ba4\u662fFalse d = np.sum(i,axis=1,keepdims=True) print(a,end='\\n\\n') print(b,end='\\n\\n') print(c,end='\\n\\n') print(d) \u8f93\u51fa\uff1a [[-1 4] [-1 -1]] 12 [4 8] [4 8] [6 6] np.sum()\u53c2\u6570","title":"\u6c42\u548c"},{"location":"numpy%E6%A8%A1%E5%9D%97/mynumpy/#_4","text":"np.hstack()\u548cnp.c_[],\u6c34\u5e73\u5e73\u94fa import numpy as np #np.hstack()\u548cnp.c_[],\u6c34\u5e73\u5e73\u94fa a = np.array([[1,2],[3,4]]) b = np.array([[5,6],[7,8]]) print('\u6c34\u5e73\u5e73\u94fa') print('np.hstack((a, b))=\\n',np.hstack((a,b))) print('np.c_[a, b]=\\n',np.c_[a,b]) #\u53ea\u6709\u5f53a,b\u4e3a\u4e00\u7ef4\u6570\u7ec4\u65f6,\u4e24\u79cd\u51fd\u6570\u7ed3\u679c\u4e0d\u540c a1 = a.flatten() b1 = b.flatten() print('a1=\\n',a1) print('b1=\\n',b1) print('np.hstack((a1,b1))=\\n',np.hstack((a1,b1))) print('np.c_[a,b]=\\n',np.c_[a1,b1]) \u8f93\u51fa\uff1a \u6c34\u5e73\u5e73\u94fa np.hstack((a, b))= [[1 2 5 6] [3 4 7 8]] np.c_[a, b]= [[1 2 5 6] [3 4 7 8]] a1= [1 2 3 4] b1= [5 6 7 8] np.hstack((a1,b1))= [1 2 3 4 5 6 7 8] np.c_[a,b]= [[1 5] [2 6] [3 7] [4 8]] np.vstack()\u548cnp.r_[],\u7ad6\u76f4\u5806\u53e0 import numpy as np #np.vstack()\u548cnp.r_[],\u7ad6\u76f4\u5806\u53e0 a = np.array([[1,2],[3,4]]) b = np.array([[5,6],[7,8]]) print('\u7ad6\u76f4\u5806\u53e0') print('np.vstack((a, b))=\\n',np.vstack((a,b))) print('np.r_[a, b]=\\n',np.r_[a,b]) #\u53ea\u6709\u5f53a,b\u4e3a\u4e00\u7ef4\u6570\u7ec4\u65f6,\u4e24\u79cd\u51fd\u6570\u7ed3\u679c\u4e0d\u540c a1 = a.flatten() b1 = b.flatten() print('a1=\\n',a1) print('b1=\\n',b1) print('np.vstack((a1,b1))=\\n',np.vstack((a1,b1))) print('np.r_[a,b]=\\n',np.r_[a1,b1]) \u8f93\u51fa\uff1a \u7ad6\u76f4\u5806\u53e0 np.vstack((a, b))= [[1 2] [3 4] [5 6] [7 8]] np.r_[a, b]= [[1 2] [3 4] [5 6] [7 8]] a1= [1 2 3 4] b1= [5 6 7 8] np.vstack((a1,b1))= [[1 2 3 4] [5 6 7 8]] np.r_[a,b]= [1 2 3 4 5 6 7 8] np.concatenate()\u662f\u5bf9array\u8fdb\u884c\u62fc\u63a5\u7684\u51fd\u6570\uff0c\u4e5f\u80fd\u5b9e\u73b0\u4e0a\u8ff0\u8fc7\u7a0b import numpy as np np.random.seed(1) x1 = np.random.normal(0,1,(2,3)) #\u968f\u673a\u751f\u6210\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1\uff0csize\u4e3a(2,3)\u7684\u968f\u673a\u6570\u7ec4 x2 = np.random.normal(1,2,(2,3)) print('x1=\\n',x1) print('x2=\\n',x2) print(np.concatenate([x1,x2],axis=1)) #\u6309\u6c34\u5e73\u65b9\u5411 print(np.concatenate([x1,x2],axis=0)) #\u6309\u7ad6\u76f4\u53cd\u5411 \u8f93\u51fa\uff1a x1= [[ 1.62434536 -0.61175641 -0.52817175] [-1.07296862 0.86540763 -2.3015387 ]] x2= [[ 4.48962353 -0.5224138 1.63807819] [ 0.50125925 3.92421587 -3.12028142]] [[ 1.62434536 -0.61175641 -0.52817175 4.48962353 -0.5224138 1.63807819] [-1.07296862 0.86540763 -2.3015387 0.50125925 3.92421587 -3.12028142]] [[ 1.62434536 -0.61175641 -0.52817175] [-1.07296862 0.86540763 -2.3015387 ] [ 4.48962353 -0.5224138 1.63807819] [ 0.50125925 3.92421587 -3.12028142]]","title":"\u6570\u7ec4\u7684\u5806\u53e0\u548c\u5e73\u94fa"},{"location":"pachong/mypachong1/","text":"\u4e00\u3001\u591a\u7ebf\u7a0b\u722c\u866b \u5b9e\u4f8b\uff1a \u722c\u53d6\u798f\u5e03\u65af\u5bcc\u8c6a\u699c\uff0c\u5e76\u4fdd\u5b58\u5230csv\u6587\u4ef6\u3002 \u8fd9\u91cc\u56e0\u6d89\u53ca\u9690\u79c1\u95ee\u9898\u4e0d\u5728\u4ee3\u7801\u4e2d\u5c55\u793a\u6015\u722c\u53d6\u7f51\u7ad9\uff0c\u53ef\u4ee5\u53c2\u8003\u57fa\u672c\u6846\u67b6\u65b9\u6cd5\u3002 # \u5982\u4f55\u63d0\u53d6\u5355\u9875\u9762\u7684\u6570\u636e # \u4e0a\u7ebf\u7a0b\u6c60\uff0c\u591a\u4e2a\u9875\u9762\u540c\u65f6\u6293\u53d6 from concurrent.futures import ThreadPoolExecutor import requests from lxml import etree import csv f = open('./\u722c\u866b\u5b66\u4e60/\u591a\u7ebf\u7a0b/\u5bcc\u8c6a\u699c.csv','w',encoding='utf-8') csvwriter = csv.writer(f) def download_one_page(url): head = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'} resp = requests.get(url,headers=head) resp.encoding = 'utf-8' html = etree.HTML(resp.text) trs = html.xpath('//table/tbody/tr') for tr in trs[1:]: txt1 = tr.xpath('./td[1]/text()') txt2 = tr.xpath('./td[2]/a/p/text()') txt3 = tr.xpath('./td[3]/text()') txt4 = tr.xpath('./td[4]/text()') txt5 = tr.xpath('./td[5]/a/text()') data = txt1 + txt2 + txt3 + txt4 + txt5 csvwriter.writerow(data) if __name__ == '__main__': csvwriter.writerow(['\u4e16\u754c\u6392\u540d','\u540d\u5b57','\u8d22\u5bcc','\u8d22\u5bcc\u6765\u6e90','\u56fd\u5bb6/\u5730\u533a']) # \u521b\u5efa\u7ebf\u7a0b\u6c60 with ThreadPoolExecutor(50) as t: for i in range(1,16): t.submit(download_one_page,f'https://www.phb123.com/renwu/fuhao/shishi_{i}.html') print('\u722c\u53d6\u5b8c\u6210') \u6587\u4ef6\u524d\u51e0\u884c\u5185\u5bb9\uff1a \u4e8c\u3001\u5f02\u6b65\u722c\u866b \u8fd9\u91cc\u7528\u5230\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u6a21\u5757 (aiohttp) \uff0c\u968f\u4fbf\u722c\u53d6\u7f51\u4e0a\u627e\u7684\u4e09\u5f20\u56fe\u7247\u3002 \u6ce8\u610f\uff1a s = aiohttp.ClientSession() <=> requests s.get() <=> requests.get() s.post() <=> requests.post() import asyncio import aiohttp urls = ['https://file07.16sucai.com/2020/0813/d5197dcfd1c6cd422fb1da90ece3700c.jpg', 'https://file07.16sucai.com/2020/0915/6760ca48e3f66b46e4ee723f3818f564.jpg', 'https://file07.16sucai.com/2020/0903/9d9455af6c295e0af0fa2799a292d3b6.jpg' ] async def aiodownload(url): name = url.rsplit('/',1)[1] async with aiohttp.ClientSession() as session: #\u7528with\u6709\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u4f7f\u7528\u5b8c\u4e4b\u540e\u81ea\u52a8\u5173\u95ed async with session.get(url) as resp: #requests.get() #\u8bf7\u6c42\u56de\u6765\uff0c\u5199\u5165\u6587\u4ef6\uff0c\u53ef\u4ee5\u5b66\u4e60aiofiles\uff0c\u521b\u5efa\u6587\u4ef6\u4e5f\u5f02\u6b65 with open(name,mode='wb') as f: f.write(await resp.content.read()) #\u8bfb\u53d6\u5185\u5bb9\u662f\u5f02\u6b65\u7684\uff0c\u9700\u8981await\u6302\u8d77 #resp.content.read() #\u8fd9\u662f\u8bfb\u53d6\u56fe\u7247==resp.content,\u8bfb\u53d6\u6587\u672c\u7528resp.text(),\u539f\u6765resp.text #\u53d1\u9001\u8bf7\u6c42 #\u5f97\u5230\u56fe\u7247 #\u4fdd\u5b58\u6587\u4ef6 async def main(): tasks = [] for url in urls: tasks.append(asyncio.create_task(aiodownload(url))) await asyncio.wait(tasks) if __name__ == '__main__': loop = asyncio.get_event_loop() loop.run_until_complete(main()) print('\u5b8c\u6210') #asyncio.run(main())\u4e0d\u884c\uff0c\u56e0\u4e3aasync\u5b9a\u4e49\u7684\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a coroutine \u534f\u7a0b\u5bf9\u8c61\uff0c # \u5173\u4e8e\u8fd9\u4e2a\u5bf9\u8c61\u5fc5\u987b\u8981\u6ce8\u518c\u5230\u4e8b\u4ef6\u5faa\u73af\u4e2d\u53bb\u624d\u53ef\u4ee5\u6267\u884c\uff0c\u800c\u6211\u4eec\u539f\u6765\u7684asyncio.run(main())\u4f1a\u81ea\u52a8\u5173\u95ed\u5faa\u73af # \uff08\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684Loop event\uff09,\u5e76\u4e14\u8c03\u7528_ProactorBasePipeTransport.__del__\u62a5\u9519, \u800casyncio.run_until_complete()\u4e0d\u4f1a. \u6ce8\u610f\uff1a asyncio.get_event_loop() \u7528\u6765\u83b7\u53d6\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u5faa\u73af\u5b9e\u4f8b\uff0c\u7136\u540e\u4f20\u5165run_until_complete()\u6267\u884c\u3002 \u5177\u4f53\u53c2\u8003 \u89e3\u51b3\u6211\u4eec\u4e0d\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u5e76\u4e14\u6ca1\u6709\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u5b9e\u4f8b\u5316\u8fd0\u884c\u5faa\u73af\uff0c\u5f15\u53d1\u7684RuntimeError\u95ee\u9898\u3002","title":"\u591a\u7ebf\u7a0b\u3001\u5f02\u6b65\u722c\u866b"},{"location":"pachong/mypachong1/#_1","text":"\u5b9e\u4f8b\uff1a \u722c\u53d6\u798f\u5e03\u65af\u5bcc\u8c6a\u699c\uff0c\u5e76\u4fdd\u5b58\u5230csv\u6587\u4ef6\u3002 \u8fd9\u91cc\u56e0\u6d89\u53ca\u9690\u79c1\u95ee\u9898\u4e0d\u5728\u4ee3\u7801\u4e2d\u5c55\u793a\u6015\u722c\u53d6\u7f51\u7ad9\uff0c\u53ef\u4ee5\u53c2\u8003\u57fa\u672c\u6846\u67b6\u65b9\u6cd5\u3002 # \u5982\u4f55\u63d0\u53d6\u5355\u9875\u9762\u7684\u6570\u636e # \u4e0a\u7ebf\u7a0b\u6c60\uff0c\u591a\u4e2a\u9875\u9762\u540c\u65f6\u6293\u53d6 from concurrent.futures import ThreadPoolExecutor import requests from lxml import etree import csv f = open('./\u722c\u866b\u5b66\u4e60/\u591a\u7ebf\u7a0b/\u5bcc\u8c6a\u699c.csv','w',encoding='utf-8') csvwriter = csv.writer(f) def download_one_page(url): head = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'} resp = requests.get(url,headers=head) resp.encoding = 'utf-8' html = etree.HTML(resp.text) trs = html.xpath('//table/tbody/tr') for tr in trs[1:]: txt1 = tr.xpath('./td[1]/text()') txt2 = tr.xpath('./td[2]/a/p/text()') txt3 = tr.xpath('./td[3]/text()') txt4 = tr.xpath('./td[4]/text()') txt5 = tr.xpath('./td[5]/a/text()') data = txt1 + txt2 + txt3 + txt4 + txt5 csvwriter.writerow(data) if __name__ == '__main__': csvwriter.writerow(['\u4e16\u754c\u6392\u540d','\u540d\u5b57','\u8d22\u5bcc','\u8d22\u5bcc\u6765\u6e90','\u56fd\u5bb6/\u5730\u533a']) # \u521b\u5efa\u7ebf\u7a0b\u6c60 with ThreadPoolExecutor(50) as t: for i in range(1,16): t.submit(download_one_page,f'https://www.phb123.com/renwu/fuhao/shishi_{i}.html') print('\u722c\u53d6\u5b8c\u6210') \u6587\u4ef6\u524d\u51e0\u884c\u5185\u5bb9\uff1a","title":"\u4e00\u3001\u591a\u7ebf\u7a0b\u722c\u866b"},{"location":"pachong/mypachong1/#_2","text":"\u8fd9\u91cc\u7528\u5230\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u6a21\u5757 (aiohttp) \uff0c\u968f\u4fbf\u722c\u53d6\u7f51\u4e0a\u627e\u7684\u4e09\u5f20\u56fe\u7247\u3002 \u6ce8\u610f\uff1a s = aiohttp.ClientSession() <=> requests s.get() <=> requests.get() s.post() <=> requests.post() import asyncio import aiohttp urls = ['https://file07.16sucai.com/2020/0813/d5197dcfd1c6cd422fb1da90ece3700c.jpg', 'https://file07.16sucai.com/2020/0915/6760ca48e3f66b46e4ee723f3818f564.jpg', 'https://file07.16sucai.com/2020/0903/9d9455af6c295e0af0fa2799a292d3b6.jpg' ] async def aiodownload(url): name = url.rsplit('/',1)[1] async with aiohttp.ClientSession() as session: #\u7528with\u6709\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u4f7f\u7528\u5b8c\u4e4b\u540e\u81ea\u52a8\u5173\u95ed async with session.get(url) as resp: #requests.get() #\u8bf7\u6c42\u56de\u6765\uff0c\u5199\u5165\u6587\u4ef6\uff0c\u53ef\u4ee5\u5b66\u4e60aiofiles\uff0c\u521b\u5efa\u6587\u4ef6\u4e5f\u5f02\u6b65 with open(name,mode='wb') as f: f.write(await resp.content.read()) #\u8bfb\u53d6\u5185\u5bb9\u662f\u5f02\u6b65\u7684\uff0c\u9700\u8981await\u6302\u8d77 #resp.content.read() #\u8fd9\u662f\u8bfb\u53d6\u56fe\u7247==resp.content,\u8bfb\u53d6\u6587\u672c\u7528resp.text(),\u539f\u6765resp.text #\u53d1\u9001\u8bf7\u6c42 #\u5f97\u5230\u56fe\u7247 #\u4fdd\u5b58\u6587\u4ef6 async def main(): tasks = [] for url in urls: tasks.append(asyncio.create_task(aiodownload(url))) await asyncio.wait(tasks) if __name__ == '__main__': loop = asyncio.get_event_loop() loop.run_until_complete(main()) print('\u5b8c\u6210') #asyncio.run(main())\u4e0d\u884c\uff0c\u56e0\u4e3aasync\u5b9a\u4e49\u7684\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a coroutine \u534f\u7a0b\u5bf9\u8c61\uff0c # \u5173\u4e8e\u8fd9\u4e2a\u5bf9\u8c61\u5fc5\u987b\u8981\u6ce8\u518c\u5230\u4e8b\u4ef6\u5faa\u73af\u4e2d\u53bb\u624d\u53ef\u4ee5\u6267\u884c\uff0c\u800c\u6211\u4eec\u539f\u6765\u7684asyncio.run(main())\u4f1a\u81ea\u52a8\u5173\u95ed\u5faa\u73af # \uff08\u5c31\u662f\u524d\u9762\u63d0\u5230\u7684Loop event\uff09,\u5e76\u4e14\u8c03\u7528_ProactorBasePipeTransport.__del__\u62a5\u9519, \u800casyncio.run_until_complete()\u4e0d\u4f1a. \u6ce8\u610f\uff1a asyncio.get_event_loop() \u7528\u6765\u83b7\u53d6\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u5faa\u73af\u5b9e\u4f8b\uff0c\u7136\u540e\u4f20\u5165run_until_complete()\u6267\u884c\u3002 \u5177\u4f53\u53c2\u8003 \u89e3\u51b3\u6211\u4eec\u4e0d\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u5e76\u4e14\u6ca1\u6709\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u5b9e\u4f8b\u5316\u8fd0\u884c\u5faa\u73af\uff0c\u5f15\u53d1\u7684RuntimeError\u95ee\u9898\u3002","title":"\u4e8c\u3001\u5f02\u6b65\u722c\u866b"},{"location":"pachong/mypachong2/","text":"\u4e00\u3001\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b\u7b80\u4ecb \u8fdb\u7a0b(Process)\uff1a \u8fdb\u7a0b\u662f\u6307\u8ba1\u7b97\u673a\u4e2d\u5df2\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u662f\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u7684\u57fa\u7840\u3002 1.\u8fdb\u7a0b\u5c31\u662f\u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\u3002\u5728OS\u7684\u773c\u91cc\uff0c\u8fdb\u7a0b\u5c31\u662f\u4e00\u4e2a\u62c5\u5f53\u5206\u914d\u7cfb\u7edf\u8d44\u6e90CPU\u65f6\u95f4\u3001\u5185\u5b58\u7684\u5b9e\u4f53\u3002 2.\u8fdb\u7a0b\u63a7\u5236\u7684\u4e3b\u8981\u529f\u80fd\u662f\u5bf9\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8fdb\u7a0b\u5b9e\u65bd\u6709\u6548\u7684\u7ba1\u7406\uff0c\u5b83\u5177\u6709\u521b\u5efa\u65b0\u8fdb\u7a0b\u3001\u64a4\u9500\u5df2\u6709\u8fdb\u7a0b\u3001\u5b9e\u73b0\u8fdb\u7a0b\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\u7b49\u529f\u80fd\u3002 3.\u8fdb\u7a0b\u5728\u8fd0\u884c\u4e2d\u4e0d\u65ad\u5730\u6539\u53d8\u5176\u8fd0\u884c\u72b6\u6001\u3002\u4e00\u4e2a\u8fdb\u7a0b\u5728\u8fd0\u884c\u671f\u95f4\uff0c\u4e0d\u65ad\u5730\u4ece\u4e00\u79cd\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u72b6\u6001\uff0c\u5b83\u53ef\u4ee5\u591a\u6b21\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u548c\u6267\u884c\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u591a\u6b21\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u8fdb\u7a0b\u5c31\u597d\u6bd4\u4f60\u7684\u624b\u673a\u540c\u65f6\u7528\u7740QQ\u548c\u5fae\u4fe1\uff0c\u8fd9\u5c31\u662f\u4e24\u4e2a\u8fdb\u7a0b\u3002 \u7ebf\u7a0b(Thread): \u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u5b83\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e4b\u4e2d\uff0c\u662f\u8fdb\u7a0b\u4e2d\u7684\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d\u3002 \u4e00\u6761\u7ebf\u7a0b\u6307\u7684\u662f\u8fdb\u7a0b\u4e2d\u4e00\u4e2a\u5355\u4e00\u987a\u5e8f\u7684\u63a7\u5236\u6d41\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u5e76\u53d1\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u6761\u7ebf\u7a0b\u5e76\u884c\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\u3002\u5728Unix System V\u53caSunOS\u4e2d\u4e5f\u88ab\u79f0\u4e3a\u8f7b\u91cf\u8fdb\u7a0b\uff08lightweight processes\uff09\uff0c\u4f46\u8f7b\u91cf\u8fdb\u7a0b\u66f4\u591a\u6307\u5185\u6838\u7ebf\u7a0b\uff08kernel thread\uff09\uff0c\u800c\u628a\u7528\u6237\u7ebf\u7a0b\uff08user thread\uff09\u79f0\u4e3a\u7ebf\u7a0b\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u7ebf\u7a0b\u5c31\u662f\u4f60\u7528\u624b\u673a\u767b\u7740QQ\uff0c\u53ef\u4ee5\u4e00\u8fb9\u548c\u522b\u4eba\u89c6\u9891\u4e00\u8fb9\u53d1\u4fe1\u606f\uff0c\u8fd9\u5c31\u662f\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u4e24\u4e2a\u4e0d\u540c\u7ebf\u7a0b\u3002 \u534f\u7a0b(Corouties): \u534f\u7a0b\u662f\u4e00\u79cd\u6bd4\u7ebf\u7a0b\u66f4\u52a0\u8f7b\u91cf\u7ea7\u7684\u4e00\u79cd\u51fd\u6570\u3002 \u64cd\u4f5c\u7cfb\u7edf\u5728\u7ebf\u7a0b\u7b49\u5f85IO\u7684\u65f6\u5019\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u5207\u6362\u5230\u5176\u5b83\u7ebf\u7a0b\uff0c\u8fd9\u6837\u5728\u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85IO\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5176\u5b83\u7ebf\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u3002\u5f53\u7cfb\u7edf\u7ebf\u7a0b\u8f83\u5c11\u7684\u65f6\u5019\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5f53\u7ebf\u7a0b\u6570\u91cf\u975e\u5e38\u591a\u7684\u65f6\u5019\uff0c\u5374\u4ea7\u751f\u4e86\u95ee\u9898\u3002 \u4e00\u662f\u7cfb\u7edf\u7ebf\u7a0b\u4f1a\u5360\u7528\u975e\u5e38\u591a\u7684\u5185\u5b58\u7a7a\u95f4\uff1b\u4e8c\u662f\u8fc7\u591a\u7684\u7ebf\u7a0b\u5207\u6362\u4f1a\u5360\u7528\u5927\u91cf\u7684\u7cfb\u7edf\u65f6\u95f4\u3002 \u534f\u7a0b\u7684\u51fa\u73b0\u6709\u6548\u89e3\u51b3\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\uff0c\u534f\u7a0b\u8fd0\u884c\u5728\u7ebf\u7a0b\u4e4b\u4e0a\uff0c\u5f53\u4e00\u4e2a\u534f\u7a0b\u6267\u884c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u9009\u62e9\u4e3b\u52a8\u8ba9\u51fa\uff0c\u8ba9\u53e6\u4e00\u4e2a\u534f\u7a0b\u8fd0\u884c\u5728\u5f53\u524d\u7ebf\u7a0b\u4e4b\u4e0a\u3002 \u534f\u7a0b\u5e76\u6ca1\u6709\u589e\u52a0\u7ebf\u7a0b\u6570\u91cf\uff0c\u53ea\u662f\u5728\u7ebf\u7a0b\u7684\u57fa\u7840\u4e4b\u4e0a\u901a\u8fc7\u5206\u65f6\u590d\u7528\u7684\u65b9\u5f0f\u8fd0\u884c\u591a\u4e2a\u534f\u7a0b\uff0c \u800c\u4e14\u534f\u7a0b\u7684\u5207\u6362\u5728\u7528\u6237\u6001\u5b8c\u6210\uff0c\u5207\u6362\u7684\u4ee3\u4ef7\u6bd4\u7ebf\u7a0b\u4ece\u7528\u6237\u6001\u5230\u5185\u6838\u6001\u7684\u4ee3\u4ef7\u5c0f\u5f88\u591a\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u597d\u6bd4\u4f60\u53bb\u8db3\u7597\u6b63\u81ea\u5df1\u6d17\u811a\uff0c\u6280\u5e08\u8981\u8d70\uff0c\u800c\u4f60\u8ba9\u4ed6\u5e2e\u5fd9\u6309\u6469\u4e00\u4e0b\u80a9\u8180\uff0c\u4e0d\u8ba9\u4ed6\u8d70,\u4e00\u4f1a\u6d17\u597d\u4e86\u518d\u6309\u811a\u3002 \u6ce8\u610f\uff1a\u534f\u7a0b\u53ea\u6709\u548c\u5f02\u6b65IO\u7ed3\u5408\u8d77\u6765\uff0c\u624d\u80fd\u53d1\u6325\u6700\u5927\u7684\u5a01\u529b\u3002 1\u3001\u7a0b\u5e8f\u4e2d\u4ea7\u751f\u7684\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u4e0b\u65b9\u4ee3\u7801\u4e3a\u4f8b import time def func(): print('a') time.sleep(2) #\u8ba9\u5f53\u524d\u7ebf\u7a0b\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002CUP\u4e0d\u4e3a\u6211\u5de5\u4f5c print('b') if __name__ == '__main__': func() #input()\u7a0b\u5e8f\u4e5f\u662f\u5904\u4e8e\u963b\u585e\u72b6\u6001 #requests.get()\u5728\u7f51\u7edc\u8bf7\u6c42\u8fd4\u56de\u6570\u636e\u4e4b\u524d\uff0c\u7a0b\u5e8f\u4e5f\u662f\u5904\u4e8e\u963b\u585e\u72b6\u6001\u7684 #\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5f53\u7a0b\u5e8f\u5904\u4e8eIO\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\u90fd\u4f1a\u5904\u4e8e\u963b\u585e\u72b6\u6001 #\u534f\u7a0b\uff1a\u5f53\u7a0b\u5e8f\u9047\u89c1\u4e86IO\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u9009\u62e9\u6027\u7684\u5207\u6362\u5230\u5176\u5b83\u4efb\u52a1\u4e0a 2\u3001\u534f\u7a0b\u7528\u5230asyncio\u6a21\u5757\uff0c\u5982\u4e0b\uff1a import asyncio import time async def func(): print('Hello,world') if __name__ == '__main__': g = func() #\u6b64\u65f6\u7684\u51fd\u6570\u662f\u5f02\u6b65\u534f\u7a0b\u51fd\u6570\uff0c\u6b64\u65f6\u51fd\u6570\u6267\u884c\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u534f\u7a0b\u5bf9\u8c61 # print(g) asyncio.run(g) #\u534f\u7a0b\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981asyncio\u6a21\u5757\u652f\u6301 \u8f93\u51fa\uff1a <coroutine object func at 0x0000020AAB9EEF80> Hello,world 3\u3001\u4e00\u4e2a\u91c7\u7528\u534f\u7a0b\u7684\u5b9e\u4f8b import asyncio import time async def func1(): print('\u4f60\u597d,\u55e1\u55e1\u55e1') await asyncio.sleep(3) print('\u4f60\u597d,\u6c34\u6c34\u6c34') async def func2(): print('\u4f60\u597d,\u9876\u9876\u9876') await asyncio.sleep(2) print('\u4f60\u597d,\u54c8\u54c8\u54c8') async def func3(): print('\u4f60\u597d,\u554a\u554a\u554a') await asyncio.sleep(4) print('\u4f60\u597d,\u563b\u563b\u563b') async def main(): #\u7b2c\u4e00\u79cd\u5199\u6cd5 # f1 = func1() # await f1 #\u4e00\u822cawait\u6302\u8d77\u64cd\u4f5c\u653e\u5728\u534f\u7a0b\u5bf9\u8c61\u524d\u9762 #\u7b2c\u4e8c\u79cd\u5199\u6cd5(\u63a8\u8350) tasks = [ asyncio.create_task(func1()), #py3.8\u4ee5\u540e\u5148\u628a\u534f\u7a0b\u5bf9\u8c61\u5305\u88c5\u6210task asyncio.create_task(func2()), asyncio.create_task(func3()) ] await asyncio.wait(tasks) #\u591a\u4e2a\u4efb\u52a1\u4e00\u822c\u7b2c\u4e00\u662fasyncio.wait() if __name__ == '__main__': t1 = time.time() asyncio.run(main()) t2 = time.time() print(t2-t1) #\u534f\u7a0b\u8017\u65f6\u5e94\u8be5\u548c\u6700\u5927\u65f6\u95f4\u5bf9\u5e94 \u8f93\u51fa\uff1a \u4f60\u597d,\u55e1\u55e1\u55e1 \u4f60\u597d,\u9876\u9876\u9876 \u4f60\u597d,\u554a\u554a\u554a \u4f60\u597d,\u54c8\u54c8\u54c8 \u4f60\u597d,\u6c34\u6c34\u6c34 \u4f60\u597d,\u563b\u563b\u563b 4.016979932785034 \u4e8c\u3001\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b \u591a\u8fdb\u7a0b\uff1a \u540c\u4e00\u65f6\u523b\u5e76\u884c\u7684\u5904\u7406\u591a\u4e2a\u4efb\u52a1\uff0c\u5373\u4e3a\u591a\u8fdb\u7a0b\u3002 \u6bd4\u5982\uff0c\u4f60\u4e00\u8fb9\u559d\u8336\u3001\u770b\u4e66\u8fd8\u542c\u7740\u97f3\u4e50\u3002\u771f\u6b63\u7684\u5e76\u884c\u591a\u4efb\u52a1\u53ea\u80fd\u5728\u591a\u6838\u7684CPU\u4e0a\u5b9e\u73b0\uff0c\u7531\u4e8e\u4efb\u52a1\u6570\u91cf\u662f\u8fdc\u8fdc\u591a\u4e8eCPU\u7684\u6838\u6570\uff0c\u6240\u4ee5\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u591a\u4efb\u52a1\u77ed\u65f6\u95f4\u8f6e\u6d41\u5207\u6362\u6267\u884c\uff0c\u7ed9\u6211\u4eec\u7684\u611f\u89c9\u5c31\u50cf\u540c\u65f6\u5728\u6267\u884c\u4e00\u6837\u3002 \u4ee3\u7801\u5b9e\u4f8b from multiprocessing import Process def func(): for i in range(100): print('\u5b50\u8fdb\u7a0b',i) if __name__ == '__main__': p = Process(target=func) p.start() for i in range(100): print(\"\u4e3b\u8fdb\u7a0b\",i) \u8f93\u51fa\uff1a \u4e3b\u8fdb\u7a0b 0 \u4e3b\u8fdb\u7a0b 1 \u4e3b\u8fdb\u7a0b 2 ... \u5b50\u8fdb\u7a0b 97 \u5b50\u8fdb\u7a0b 98 \u5b50\u8fdb\u7a0b 99 \u591a\u7ebf\u7a0b\uff1a \u591a\u7ebf\u7a0b\u5c31\u662f\u628a\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u8fd9\u79cd\u5e76\u53d1\u6267\u884c\u673a\u5236\u539f\u7406\u8fd0\u7528\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u628a\u4e00\u4e2a\u7a0b\u5e8f\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u5b50\u4efb\u52a1\uff0c\u591a\u4e2a\u5b50\u4efb\u52a1\u5e76\u53d1\u6267\u884c\uff0c\u6bcf\u4e00\u4e2a\u4efb\u52a1\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b\u3002\u56e0\u4e3aCPU\u5728\u6267\u884c\u7a0b\u5e8f\u65f6\u6bcf\u4e2a\u65f6\u95f4\u523b\u5ea6\u4e0a\u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u56e0\u6b64\u591a\u7ebf\u7a0b\u5b9e\u9645\u4e0a\u63d0\u9ad8\u4e86\u8fdb\u7a0b\u7684\u4f7f\u7528\u7387\u4ece\u800c \u63d0\u9ad8\u4e86CPU\u7684\u4f7f\u7528\u7387 \u3002 \u4f46\u7ebf\u7a0b\u8fc7\u591a\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5728\u4ed6\u4eec\u76f4\u63a5\u6765\u56de\u5207\u6362\uff0c\u5f71\u54cd\u6027\u80fd\u3002 1\u3001\u4e00\u822c\u7684\u591a\u7ebf\u7a0b from threading import Thread def func1(): for i in range(100): print('func1',i) def func2(): for i in range(100): print('func2',i) if __name__ == '__main__': t1 = Thread(target=func1) #\u521b\u5efa\u7ebf\u7a0b\uff0c\u5e76\u7ed9\u7ebf\u7a0b\u5b89\u6392\u4efb\u52a1\uff0c\uff08\u5b50\u7ebf\u7a0b\uff09 t1.start() #\u591a\u7ebf\u7a0b\u72b6\u6001\u4e3a\u53ef\u4ee5\u5f00\u59cb\u5de5\u4f5c\u72b6\u6001\uff0c\u5177\u4f53\u6267\u884c\u65f6\u95f4\u7531CPU\u51b3\u5b9a t2 = Thread(target=func2) t2.start() for i in range(100): print('main',i) \u8f93\u51fa\uff1a ... func1 88 func1 89 func1 90 ... main func1 83 func2 69 91 func2 ... 2\u3001\u521b\u5efa\u591a\u7ebf\u7a0b\u7c7b class MyThread(Thread): def run(self): #\u56fa\u5b9a\u7684 for i in range(100): print('\u5b50\u7ebf\u7a0b',i) if __name__ == '__main__': t = MyThread() # t.run()\u662f\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u4e0d\u884c\uff0c\u662f\u5355\u7ebf\u7a0b t.start() #\u5f00\u542f\u7ebf\u7a0b for i in range(100): print(\"\u4e3b\u7ebf\u7a0b\",i) 3\u3001\u7ed9\u7ebf\u7a0b\u4f20\u5165\u53c2\u6570 def func(name): for i in range(100): print(name,i) if __name__ == '__main__': t1 = Thread(target=func,args=('\u5468\u6770\u4f26',)) t1.start() t2 = Thread(target=func,args=('\u5f20\u6770',)) t2.start() for i in range(100): print('main',i) \u4e09\u3001\u7ebf\u7a0b\u6c60\u3001\u8fdb\u7a0b\u6c60 \u6c60\u7684\u6982\u5ff5\uff1a \u6c60\u662f\u4fdd\u8bc1\u8ba1\u7b97\u673a\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u7684\u524d\u63d0\u4e0b\uff0c\u80fd\u6700\u5927\u9650\u5ea6\u5f00\u91c7\u7684\u8d44\u6e90\u7684\u91cf\uff0c\u4ed6\u964d\u4f4e\u7684\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\uff0c\u4f46\u662f\u4fdd\u8bc1\u4e86\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u5b89\u5168\uff0c\u4ece\u800c\u8ba9\u4f60\u5199\u7684\u7a0b\u5e8f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002\u6c60\u5c31\u662f\u4e00\u4e2a\u91cf\u7684\u5355\u4f4d\uff0c\u4ee3\u8868\u4e86\u4f60\u6240\u80fd\u5f00\u91c7\u7684\u8d44\u6e90\u7684\u5ea6\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u5ea6\uff0c\u8eab\u4f53\u5c31\u8de8\u4e86\uff0c\u9996\u5148\u8981\u7528\uff0c\u5176\u6b21\u8981\u6709\u5ea6\u3002 \u91c7\u7528\u7ebf\u7a0b\u6c60\u548c\u8fdb\u7a0b\u6c60\uff1a\u4fdd\u8bc1\u786c\u4ef6\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u9650\u5ea6\u7684\u5229\u7528\u8d44\u6e90\u3002 \u7ebf\u7a0b\u6c60\uff1a \u7ebf\u7a0b\u6c60\u662f\u4e00\u79cd\u591a\u7ebf\u7a0b\u5904\u7406\u5f62\u5f0f\uff0c\u5904\u7406\u8fc7\u7a0b\u4e2d\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u961f\u5217\uff0c\u7136\u540e\u5728\u521b\u5efa\u7ebf\u7a0b\u540e\u81ea\u52a8\u542f\u52a8\u8fd9\u4e9b\u4efb\u52a1\u3002 \u91c7\u7528ThreadPoolExecutor\uff083\uff09\uff0c\u62ec\u53f7\u5185\u662f\u521b\u5efa\u7684\u7ebf\u7a0b\u6570\uff0c\u4e0d\u586b\u7684\u8bdd\uff0c\u4f1a\u9ed8\u8ba4\u5f00\u8bbe\u5f53\u524d\u8ba1\u7b97\u673acpu\u6838\u6570\u76845\u500d\u7684\u7ebf\u7a0b\u3002 #\u7ebf\u7a0b\u6c60\uff1a\u4e00\u6b21\u6027\u5f00\u8f9f\u4e00\u4e9b\u7ebf\u7a0b\u3002\u6211\u4eec\u7528\u6237\u76f4\u63a5\u7ed9\u7ebf\u7a0b\u6c60\u5b50\u63d0\u4ea4\u4efb\u52a1\u3002\u7ebf\u7a0b\u4efb\u52a1\u7684\u8c03\u5ea6\u4ea4\u7ed9\u7ebf\u7a0b\u6c60\u5b8c\u6210\u3002 from concurrent.futures import ThreadPoolExecutor,ProcessPoolExecutor def fn(name): for i in range(1000): print(name,i) if __name__ == '__main__': #\u521b\u5efa\u7ebf\u7a0b\u6c60 with ThreadPoolExecutor(50) as t: for i in range(100): t.submit(fn,name=f\"\u7ebf\u7a0b{i}\") #\u7b49\u5f85\u7ebf\u7a0b\u6c60\u4e2d\u4efb\u52a1\u5168\u90e8\u6267\u884c\u5b8c\u6bd5\uff0c\u624d\u7ee7\u7eed\u6267\u884c\uff08\u5b88\u62a4\uff09 print('123') \u8fdb\u7a0b\u6c60\uff1a \u4f17\u6240\u5468\u77e5\uff0cPython \u7684\u591a\u7ebf\u7a0b\u662f\u5047\u7684\uff0c\u4e0d\u8fc7\u597d\u5728\u5f00\u53d1\u8005\u8001\u5927\u8fd8\u662f\u7ed9\u6211\u4eec\u7559\u4e86\u4e00\u4e2a\u6d3b\u8def\uff0c\u4e5f\u5c31\u662f\u8fdb\u7a0b\u6c60\u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f18\u70b9\u5728\u4e8e\u8fdb\u7a0b\u7684\u5e76\u53d1\u7ec6\u8282\u5b8c\u5168\u4e0d\u7528\u6211\u4eec\u64cd\u5fc3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u5e76\u53d1\u7684\u4efb\u52a1\u4ecd\u5230\u8fdb\u7a0b\u6c60\u91cc\u5c31\u597d\u4e86\u3002 \u8fdb\u7a0b\u6c60\u5927\u4f53\u4e0a\u8ddf\u7ebf\u7a0b\u6c60\u7c7b\u4f3c\uff0cProcessPoolExecutor(3)\uff0c\u62ec\u53f7\u5185\u4e0d\u586b\u7684\u8bdd\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e0e\u201ccpu\u6838\u6570\u201d\u76f8\u540c\u6570\u91cf\u7684\u8fdb\u7a0b\u3002 \u540c\u6837\u7684\uff0c\u8fdb\u7a0b\u6c60\u4e2d\u7684\u8fdb\u7a0b\u662f\u56fa\u5b9a\u5de5\uff0c\u4e0d\u4f1a\u91cd\u590d\u521b\u5efa\u548c\u9500\u6bc1\u3002 \u8fdb\u7a0b\u6c60\u548c\u7ebf\u7a0b\u6c60\u5728\u4f7f\u7528\u5f62\u5f0f\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff1a\u5728Windows\u73af\u5883\u4e0b\uff0c\u8fdb\u7a0b\u6c60\u8981\u653e\u5728main\u65b9\u6cd5\u91cc\u9762\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 from concurrent.futures import ThreadPoolExecutor,ProcessPoolExecutor def fn(name): for i in range(10): print(name,i) if __name__ == '__main__': #\u521b\u5efa\u8fdb\u7a0b\u6c60 with ProcessPoolExecutor(50) as t: for i in range(100): t.submit(fn,name=f\"\u8fdb\u7a0b{i}\") \u8f93\u51fa\uff1a \u8fdb\u7a0b0 0 \u8fdb\u7a0b0 1 \u8fdb\u7a0b0 2 \u8fdb\u7a0b0 3 \u8fdb\u7a0b0 4 \u8fdb\u7a0b0 5 \u8fdb\u7a0b0 6 \u8fdb\u7a0b0 7 \u8fdb\u7a0b0 8 \u8fdb\u7a0b0 9 ...","title":"\u8fdb\u3001\u7ebf\u3001\u534f\u7a0b\u7684\u6982\u5ff5"},{"location":"pachong/mypachong2/#_1","text":"","title":"\u4e00\u3001\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u3001\u534f\u7a0b\u7b80\u4ecb"},{"location":"pachong/mypachong2/#process","text":"\u8fdb\u7a0b\u662f\u6307\u8ba1\u7b97\u673a\u4e2d\u5df2\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u662f\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u7684\u57fa\u7840\u3002 1.\u8fdb\u7a0b\u5c31\u662f\u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\u3002\u5728OS\u7684\u773c\u91cc\uff0c\u8fdb\u7a0b\u5c31\u662f\u4e00\u4e2a\u62c5\u5f53\u5206\u914d\u7cfb\u7edf\u8d44\u6e90CPU\u65f6\u95f4\u3001\u5185\u5b58\u7684\u5b9e\u4f53\u3002 2.\u8fdb\u7a0b\u63a7\u5236\u7684\u4e3b\u8981\u529f\u80fd\u662f\u5bf9\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u8fdb\u7a0b\u5b9e\u65bd\u6709\u6548\u7684\u7ba1\u7406\uff0c\u5b83\u5177\u6709\u521b\u5efa\u65b0\u8fdb\u7a0b\u3001\u64a4\u9500\u5df2\u6709\u8fdb\u7a0b\u3001\u5b9e\u73b0\u8fdb\u7a0b\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\u7b49\u529f\u80fd\u3002 3.\u8fdb\u7a0b\u5728\u8fd0\u884c\u4e2d\u4e0d\u65ad\u5730\u6539\u53d8\u5176\u8fd0\u884c\u72b6\u6001\u3002\u4e00\u4e2a\u8fdb\u7a0b\u5728\u8fd0\u884c\u671f\u95f4\uff0c\u4e0d\u65ad\u5730\u4ece\u4e00\u79cd\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u72b6\u6001\uff0c\u5b83\u53ef\u4ee5\u591a\u6b21\u5904\u4e8e\u5c31\u7eea\u72b6\u6001\u548c\u6267\u884c\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u591a\u6b21\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u8fdb\u7a0b\u5c31\u597d\u6bd4\u4f60\u7684\u624b\u673a\u540c\u65f6\u7528\u7740QQ\u548c\u5fae\u4fe1\uff0c\u8fd9\u5c31\u662f\u4e24\u4e2a\u8fdb\u7a0b\u3002","title":"\u8fdb\u7a0b(Process)\uff1a"},{"location":"pachong/mypachong2/#thread","text":"\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u5b83\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e4b\u4e2d\uff0c\u662f\u8fdb\u7a0b\u4e2d\u7684\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d\u3002 \u4e00\u6761\u7ebf\u7a0b\u6307\u7684\u662f\u8fdb\u7a0b\u4e2d\u4e00\u4e2a\u5355\u4e00\u987a\u5e8f\u7684\u63a7\u5236\u6d41\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u5e76\u53d1\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u6761\u7ebf\u7a0b\u5e76\u884c\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\u3002\u5728Unix System V\u53caSunOS\u4e2d\u4e5f\u88ab\u79f0\u4e3a\u8f7b\u91cf\u8fdb\u7a0b\uff08lightweight processes\uff09\uff0c\u4f46\u8f7b\u91cf\u8fdb\u7a0b\u66f4\u591a\u6307\u5185\u6838\u7ebf\u7a0b\uff08kernel thread\uff09\uff0c\u800c\u628a\u7528\u6237\u7ebf\u7a0b\uff08user thread\uff09\u79f0\u4e3a\u7ebf\u7a0b\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u7ebf\u7a0b\u5c31\u662f\u4f60\u7528\u624b\u673a\u767b\u7740QQ\uff0c\u53ef\u4ee5\u4e00\u8fb9\u548c\u522b\u4eba\u89c6\u9891\u4e00\u8fb9\u53d1\u4fe1\u606f\uff0c\u8fd9\u5c31\u662f\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u4e24\u4e2a\u4e0d\u540c\u7ebf\u7a0b\u3002","title":"\u7ebf\u7a0b(Thread):"},{"location":"pachong/mypachong2/#corouties","text":"\u534f\u7a0b\u662f\u4e00\u79cd\u6bd4\u7ebf\u7a0b\u66f4\u52a0\u8f7b\u91cf\u7ea7\u7684\u4e00\u79cd\u51fd\u6570\u3002 \u64cd\u4f5c\u7cfb\u7edf\u5728\u7ebf\u7a0b\u7b49\u5f85IO\u7684\u65f6\u5019\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u5207\u6362\u5230\u5176\u5b83\u7ebf\u7a0b\uff0c\u8fd9\u6837\u5728\u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85IO\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5176\u5b83\u7ebf\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u3002\u5f53\u7cfb\u7edf\u7ebf\u7a0b\u8f83\u5c11\u7684\u65f6\u5019\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5f53\u7ebf\u7a0b\u6570\u91cf\u975e\u5e38\u591a\u7684\u65f6\u5019\uff0c\u5374\u4ea7\u751f\u4e86\u95ee\u9898\u3002 \u4e00\u662f\u7cfb\u7edf\u7ebf\u7a0b\u4f1a\u5360\u7528\u975e\u5e38\u591a\u7684\u5185\u5b58\u7a7a\u95f4\uff1b\u4e8c\u662f\u8fc7\u591a\u7684\u7ebf\u7a0b\u5207\u6362\u4f1a\u5360\u7528\u5927\u91cf\u7684\u7cfb\u7edf\u65f6\u95f4\u3002 \u534f\u7a0b\u7684\u51fa\u73b0\u6709\u6548\u89e3\u51b3\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\uff0c\u534f\u7a0b\u8fd0\u884c\u5728\u7ebf\u7a0b\u4e4b\u4e0a\uff0c\u5f53\u4e00\u4e2a\u534f\u7a0b\u6267\u884c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u9009\u62e9\u4e3b\u52a8\u8ba9\u51fa\uff0c\u8ba9\u53e6\u4e00\u4e2a\u534f\u7a0b\u8fd0\u884c\u5728\u5f53\u524d\u7ebf\u7a0b\u4e4b\u4e0a\u3002 \u534f\u7a0b\u5e76\u6ca1\u6709\u589e\u52a0\u7ebf\u7a0b\u6570\u91cf\uff0c\u53ea\u662f\u5728\u7ebf\u7a0b\u7684\u57fa\u7840\u4e4b\u4e0a\u901a\u8fc7\u5206\u65f6\u590d\u7528\u7684\u65b9\u5f0f\u8fd0\u884c\u591a\u4e2a\u534f\u7a0b\uff0c \u800c\u4e14\u534f\u7a0b\u7684\u5207\u6362\u5728\u7528\u6237\u6001\u5b8c\u6210\uff0c\u5207\u6362\u7684\u4ee3\u4ef7\u6bd4\u7ebf\u7a0b\u4ece\u7528\u6237\u6001\u5230\u5185\u6838\u6001\u7684\u4ee3\u4ef7\u5c0f\u5f88\u591a\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u597d\u6bd4\u4f60\u53bb\u8db3\u7597\u6b63\u81ea\u5df1\u6d17\u811a\uff0c\u6280\u5e08\u8981\u8d70\uff0c\u800c\u4f60\u8ba9\u4ed6\u5e2e\u5fd9\u6309\u6469\u4e00\u4e0b\u80a9\u8180\uff0c\u4e0d\u8ba9\u4ed6\u8d70,\u4e00\u4f1a\u6d17\u597d\u4e86\u518d\u6309\u811a\u3002 \u6ce8\u610f\uff1a\u534f\u7a0b\u53ea\u6709\u548c\u5f02\u6b65IO\u7ed3\u5408\u8d77\u6765\uff0c\u624d\u80fd\u53d1\u6325\u6700\u5927\u7684\u5a01\u529b\u3002 1\u3001\u7a0b\u5e8f\u4e2d\u4ea7\u751f\u7684\u963b\u585e\u72b6\u6001\uff0c\u4ee5\u4e0b\u65b9\u4ee3\u7801\u4e3a\u4f8b import time def func(): print('a') time.sleep(2) #\u8ba9\u5f53\u524d\u7ebf\u7a0b\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002CUP\u4e0d\u4e3a\u6211\u5de5\u4f5c print('b') if __name__ == '__main__': func() #input()\u7a0b\u5e8f\u4e5f\u662f\u5904\u4e8e\u963b\u585e\u72b6\u6001 #requests.get()\u5728\u7f51\u7edc\u8bf7\u6c42\u8fd4\u56de\u6570\u636e\u4e4b\u524d\uff0c\u7a0b\u5e8f\u4e5f\u662f\u5904\u4e8e\u963b\u585e\u72b6\u6001\u7684 #\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5f53\u7a0b\u5e8f\u5904\u4e8eIO\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\u90fd\u4f1a\u5904\u4e8e\u963b\u585e\u72b6\u6001 #\u534f\u7a0b\uff1a\u5f53\u7a0b\u5e8f\u9047\u89c1\u4e86IO\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u9009\u62e9\u6027\u7684\u5207\u6362\u5230\u5176\u5b83\u4efb\u52a1\u4e0a 2\u3001\u534f\u7a0b\u7528\u5230asyncio\u6a21\u5757\uff0c\u5982\u4e0b\uff1a import asyncio import time async def func(): print('Hello,world') if __name__ == '__main__': g = func() #\u6b64\u65f6\u7684\u51fd\u6570\u662f\u5f02\u6b65\u534f\u7a0b\u51fd\u6570\uff0c\u6b64\u65f6\u51fd\u6570\u6267\u884c\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u534f\u7a0b\u5bf9\u8c61 # print(g) asyncio.run(g) #\u534f\u7a0b\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981asyncio\u6a21\u5757\u652f\u6301 \u8f93\u51fa\uff1a <coroutine object func at 0x0000020AAB9EEF80> Hello,world 3\u3001\u4e00\u4e2a\u91c7\u7528\u534f\u7a0b\u7684\u5b9e\u4f8b import asyncio import time async def func1(): print('\u4f60\u597d,\u55e1\u55e1\u55e1') await asyncio.sleep(3) print('\u4f60\u597d,\u6c34\u6c34\u6c34') async def func2(): print('\u4f60\u597d,\u9876\u9876\u9876') await asyncio.sleep(2) print('\u4f60\u597d,\u54c8\u54c8\u54c8') async def func3(): print('\u4f60\u597d,\u554a\u554a\u554a') await asyncio.sleep(4) print('\u4f60\u597d,\u563b\u563b\u563b') async def main(): #\u7b2c\u4e00\u79cd\u5199\u6cd5 # f1 = func1() # await f1 #\u4e00\u822cawait\u6302\u8d77\u64cd\u4f5c\u653e\u5728\u534f\u7a0b\u5bf9\u8c61\u524d\u9762 #\u7b2c\u4e8c\u79cd\u5199\u6cd5(\u63a8\u8350) tasks = [ asyncio.create_task(func1()), #py3.8\u4ee5\u540e\u5148\u628a\u534f\u7a0b\u5bf9\u8c61\u5305\u88c5\u6210task asyncio.create_task(func2()), asyncio.create_task(func3()) ] await asyncio.wait(tasks) #\u591a\u4e2a\u4efb\u52a1\u4e00\u822c\u7b2c\u4e00\u662fasyncio.wait() if __name__ == '__main__': t1 = time.time() asyncio.run(main()) t2 = time.time() print(t2-t1) #\u534f\u7a0b\u8017\u65f6\u5e94\u8be5\u548c\u6700\u5927\u65f6\u95f4\u5bf9\u5e94 \u8f93\u51fa\uff1a \u4f60\u597d,\u55e1\u55e1\u55e1 \u4f60\u597d,\u9876\u9876\u9876 \u4f60\u597d,\u554a\u554a\u554a \u4f60\u597d,\u54c8\u54c8\u54c8 \u4f60\u597d,\u6c34\u6c34\u6c34 \u4f60\u597d,\u563b\u563b\u563b 4.016979932785034","title":"\u534f\u7a0b(Corouties):"},{"location":"pachong/mypachong2/#_2","text":"","title":"\u4e8c\u3001\u591a\u8fdb\u7a0b\u3001\u591a\u7ebf\u7a0b"},{"location":"pachong/mypachong2/#_3","text":"\u540c\u4e00\u65f6\u523b\u5e76\u884c\u7684\u5904\u7406\u591a\u4e2a\u4efb\u52a1\uff0c\u5373\u4e3a\u591a\u8fdb\u7a0b\u3002 \u6bd4\u5982\uff0c\u4f60\u4e00\u8fb9\u559d\u8336\u3001\u770b\u4e66\u8fd8\u542c\u7740\u97f3\u4e50\u3002\u771f\u6b63\u7684\u5e76\u884c\u591a\u4efb\u52a1\u53ea\u80fd\u5728\u591a\u6838\u7684CPU\u4e0a\u5b9e\u73b0\uff0c\u7531\u4e8e\u4efb\u52a1\u6570\u91cf\u662f\u8fdc\u8fdc\u591a\u4e8eCPU\u7684\u6838\u6570\uff0c\u6240\u4ee5\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u591a\u4efb\u52a1\u77ed\u65f6\u95f4\u8f6e\u6d41\u5207\u6362\u6267\u884c\uff0c\u7ed9\u6211\u4eec\u7684\u611f\u89c9\u5c31\u50cf\u540c\u65f6\u5728\u6267\u884c\u4e00\u6837\u3002 \u4ee3\u7801\u5b9e\u4f8b from multiprocessing import Process def func(): for i in range(100): print('\u5b50\u8fdb\u7a0b',i) if __name__ == '__main__': p = Process(target=func) p.start() for i in range(100): print(\"\u4e3b\u8fdb\u7a0b\",i) \u8f93\u51fa\uff1a \u4e3b\u8fdb\u7a0b 0 \u4e3b\u8fdb\u7a0b 1 \u4e3b\u8fdb\u7a0b 2 ... \u5b50\u8fdb\u7a0b 97 \u5b50\u8fdb\u7a0b 98 \u5b50\u8fdb\u7a0b 99","title":"\u591a\u8fdb\u7a0b\uff1a"},{"location":"pachong/mypachong2/#_4","text":"\u591a\u7ebf\u7a0b\u5c31\u662f\u628a\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u8fd9\u79cd\u5e76\u53d1\u6267\u884c\u673a\u5236\u539f\u7406\u8fd0\u7528\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u628a\u4e00\u4e2a\u7a0b\u5e8f\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u5b50\u4efb\u52a1\uff0c\u591a\u4e2a\u5b50\u4efb\u52a1\u5e76\u53d1\u6267\u884c\uff0c\u6bcf\u4e00\u4e2a\u4efb\u52a1\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b\u3002\u56e0\u4e3aCPU\u5728\u6267\u884c\u7a0b\u5e8f\u65f6\u6bcf\u4e2a\u65f6\u95f4\u523b\u5ea6\u4e0a\u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u56e0\u6b64\u591a\u7ebf\u7a0b\u5b9e\u9645\u4e0a\u63d0\u9ad8\u4e86\u8fdb\u7a0b\u7684\u4f7f\u7528\u7387\u4ece\u800c \u63d0\u9ad8\u4e86CPU\u7684\u4f7f\u7528\u7387 \u3002 \u4f46\u7ebf\u7a0b\u8fc7\u591a\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5728\u4ed6\u4eec\u76f4\u63a5\u6765\u56de\u5207\u6362\uff0c\u5f71\u54cd\u6027\u80fd\u3002 1\u3001\u4e00\u822c\u7684\u591a\u7ebf\u7a0b from threading import Thread def func1(): for i in range(100): print('func1',i) def func2(): for i in range(100): print('func2',i) if __name__ == '__main__': t1 = Thread(target=func1) #\u521b\u5efa\u7ebf\u7a0b\uff0c\u5e76\u7ed9\u7ebf\u7a0b\u5b89\u6392\u4efb\u52a1\uff0c\uff08\u5b50\u7ebf\u7a0b\uff09 t1.start() #\u591a\u7ebf\u7a0b\u72b6\u6001\u4e3a\u53ef\u4ee5\u5f00\u59cb\u5de5\u4f5c\u72b6\u6001\uff0c\u5177\u4f53\u6267\u884c\u65f6\u95f4\u7531CPU\u51b3\u5b9a t2 = Thread(target=func2) t2.start() for i in range(100): print('main',i) \u8f93\u51fa\uff1a ... func1 88 func1 89 func1 90 ... main func1 83 func2 69 91 func2 ... 2\u3001\u521b\u5efa\u591a\u7ebf\u7a0b\u7c7b class MyThread(Thread): def run(self): #\u56fa\u5b9a\u7684 for i in range(100): print('\u5b50\u7ebf\u7a0b',i) if __name__ == '__main__': t = MyThread() # t.run()\u662f\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u4e0d\u884c\uff0c\u662f\u5355\u7ebf\u7a0b t.start() #\u5f00\u542f\u7ebf\u7a0b for i in range(100): print(\"\u4e3b\u7ebf\u7a0b\",i) 3\u3001\u7ed9\u7ebf\u7a0b\u4f20\u5165\u53c2\u6570 def func(name): for i in range(100): print(name,i) if __name__ == '__main__': t1 = Thread(target=func,args=('\u5468\u6770\u4f26',)) t1.start() t2 = Thread(target=func,args=('\u5f20\u6770',)) t2.start() for i in range(100): print('main',i)","title":"\u591a\u7ebf\u7a0b\uff1a"},{"location":"pachong/mypachong2/#_5","text":"","title":"\u4e09\u3001\u7ebf\u7a0b\u6c60\u3001\u8fdb\u7a0b\u6c60"},{"location":"pachong/mypachong2/#_6","text":"\u6c60\u662f\u4fdd\u8bc1\u8ba1\u7b97\u673a\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u7684\u524d\u63d0\u4e0b\uff0c\u80fd\u6700\u5927\u9650\u5ea6\u5f00\u91c7\u7684\u8d44\u6e90\u7684\u91cf\uff0c\u4ed6\u964d\u4f4e\u7684\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\uff0c\u4f46\u662f\u4fdd\u8bc1\u4e86\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u5b89\u5168\uff0c\u4ece\u800c\u8ba9\u4f60\u5199\u7684\u7a0b\u5e8f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002\u6c60\u5c31\u662f\u4e00\u4e2a\u91cf\u7684\u5355\u4f4d\uff0c\u4ee3\u8868\u4e86\u4f60\u6240\u80fd\u5f00\u91c7\u7684\u8d44\u6e90\u7684\u5ea6\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u5ea6\uff0c\u8eab\u4f53\u5c31\u8de8\u4e86\uff0c\u9996\u5148\u8981\u7528\uff0c\u5176\u6b21\u8981\u6709\u5ea6\u3002 \u91c7\u7528\u7ebf\u7a0b\u6c60\u548c\u8fdb\u7a0b\u6c60\uff1a\u4fdd\u8bc1\u786c\u4ef6\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u9650\u5ea6\u7684\u5229\u7528\u8d44\u6e90\u3002","title":"\u6c60\u7684\u6982\u5ff5\uff1a"},{"location":"pachong/mypachong2/#_7","text":"\u7ebf\u7a0b\u6c60\u662f\u4e00\u79cd\u591a\u7ebf\u7a0b\u5904\u7406\u5f62\u5f0f\uff0c\u5904\u7406\u8fc7\u7a0b\u4e2d\u5c06\u4efb\u52a1\u6dfb\u52a0\u5230\u961f\u5217\uff0c\u7136\u540e\u5728\u521b\u5efa\u7ebf\u7a0b\u540e\u81ea\u52a8\u542f\u52a8\u8fd9\u4e9b\u4efb\u52a1\u3002 \u91c7\u7528ThreadPoolExecutor\uff083\uff09\uff0c\u62ec\u53f7\u5185\u662f\u521b\u5efa\u7684\u7ebf\u7a0b\u6570\uff0c\u4e0d\u586b\u7684\u8bdd\uff0c\u4f1a\u9ed8\u8ba4\u5f00\u8bbe\u5f53\u524d\u8ba1\u7b97\u673acpu\u6838\u6570\u76845\u500d\u7684\u7ebf\u7a0b\u3002 #\u7ebf\u7a0b\u6c60\uff1a\u4e00\u6b21\u6027\u5f00\u8f9f\u4e00\u4e9b\u7ebf\u7a0b\u3002\u6211\u4eec\u7528\u6237\u76f4\u63a5\u7ed9\u7ebf\u7a0b\u6c60\u5b50\u63d0\u4ea4\u4efb\u52a1\u3002\u7ebf\u7a0b\u4efb\u52a1\u7684\u8c03\u5ea6\u4ea4\u7ed9\u7ebf\u7a0b\u6c60\u5b8c\u6210\u3002 from concurrent.futures import ThreadPoolExecutor,ProcessPoolExecutor def fn(name): for i in range(1000): print(name,i) if __name__ == '__main__': #\u521b\u5efa\u7ebf\u7a0b\u6c60 with ThreadPoolExecutor(50) as t: for i in range(100): t.submit(fn,name=f\"\u7ebf\u7a0b{i}\") #\u7b49\u5f85\u7ebf\u7a0b\u6c60\u4e2d\u4efb\u52a1\u5168\u90e8\u6267\u884c\u5b8c\u6bd5\uff0c\u624d\u7ee7\u7eed\u6267\u884c\uff08\u5b88\u62a4\uff09 print('123')","title":"\u7ebf\u7a0b\u6c60\uff1a"},{"location":"pachong/mypachong2/#_8","text":"\u4f17\u6240\u5468\u77e5\uff0cPython \u7684\u591a\u7ebf\u7a0b\u662f\u5047\u7684\uff0c\u4e0d\u8fc7\u597d\u5728\u5f00\u53d1\u8005\u8001\u5927\u8fd8\u662f\u7ed9\u6211\u4eec\u7559\u4e86\u4e00\u4e2a\u6d3b\u8def\uff0c\u4e5f\u5c31\u662f\u8fdb\u7a0b\u6c60\u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f18\u70b9\u5728\u4e8e\u8fdb\u7a0b\u7684\u5e76\u53d1\u7ec6\u8282\u5b8c\u5168\u4e0d\u7528\u6211\u4eec\u64cd\u5fc3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u5e76\u53d1\u7684\u4efb\u52a1\u4ecd\u5230\u8fdb\u7a0b\u6c60\u91cc\u5c31\u597d\u4e86\u3002 \u8fdb\u7a0b\u6c60\u5927\u4f53\u4e0a\u8ddf\u7ebf\u7a0b\u6c60\u7c7b\u4f3c\uff0cProcessPoolExecutor(3)\uff0c\u62ec\u53f7\u5185\u4e0d\u586b\u7684\u8bdd\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e0e\u201ccpu\u6838\u6570\u201d\u76f8\u540c\u6570\u91cf\u7684\u8fdb\u7a0b\u3002 \u540c\u6837\u7684\uff0c\u8fdb\u7a0b\u6c60\u4e2d\u7684\u8fdb\u7a0b\u662f\u56fa\u5b9a\u5de5\uff0c\u4e0d\u4f1a\u91cd\u590d\u521b\u5efa\u548c\u9500\u6bc1\u3002 \u8fdb\u7a0b\u6c60\u548c\u7ebf\u7a0b\u6c60\u5728\u4f7f\u7528\u5f62\u5f0f\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff1a\u5728Windows\u73af\u5883\u4e0b\uff0c\u8fdb\u7a0b\u6c60\u8981\u653e\u5728main\u65b9\u6cd5\u91cc\u9762\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 from concurrent.futures import ThreadPoolExecutor,ProcessPoolExecutor def fn(name): for i in range(10): print(name,i) if __name__ == '__main__': #\u521b\u5efa\u8fdb\u7a0b\u6c60 with ProcessPoolExecutor(50) as t: for i in range(100): t.submit(fn,name=f\"\u8fdb\u7a0b{i}\") \u8f93\u51fa\uff1a \u8fdb\u7a0b0 0 \u8fdb\u7a0b0 1 \u8fdb\u7a0b0 2 \u8fdb\u7a0b0 3 \u8fdb\u7a0b0 4 \u8fdb\u7a0b0 5 \u8fdb\u7a0b0 6 \u8fdb\u7a0b0 7 \u8fdb\u7a0b0 8 \u8fdb\u7a0b0 9 ...","title":"\u8fdb\u7a0b\u6c60\uff1a"},{"location":"pandas%E6%A8%A1%E5%9D%97/mypandas/","text":"pandas\u7b80\u4ecb Pandas (Python Data Analysis Library) \u662f\u57fa\u4e8eNumPy \u7684\u4e00\u79cd\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u662f\u4e3a\u4e86\u89e3\u51b3\u6570\u636e\u5206\u6790\u4efb\u52a1\u800c\u521b\u5efa\u7684\u3002 numpy\u66f4\u52a0\u9002\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\uff1b\u800cpandas\u6700\u521d\u636e\u8bf4\u662f\u8bbe\u8ba1\u7528\u4e8e\u91d1\u878d\u9886\u57df\uff0c\u56e0\u6b64pandas\u53ef\u80fd\u66f4\u52a0\u9002\u7528\u4e8e\u5404\u7c7b\u5b9e\u9645\u5e94\u7528\u573a\u666f\u7684\u5904\u7406\u3002\u53e6\u4e00\u65b9\u9762\uff0c numpy\u9002\u7528\u4e8e\u5904\u7406\u201c\u5e72\u51c0\u201d\u7684\u6570\u636e\uff0c\u53ca\u89c4\u8303\u3001\u65e0\u7f3a\u5931\u7684\u6570\u636e \uff0c\u800c pandas\u66f4\u52a0\u64c5\u957f\u6570\u636e\u6e05\u6d17(data munging) \uff0c\u8fd9\u4e3a\u540e\u4e00\u6b65\u6570\u636e\u5904\u7406\u626b\u6e05\u969c\u788d\u3002 Excel\u53ef\u4ee5\u5904\u7406\u5c11\u91cf\u7684\u6570\u636e\uff0c\u5f53\u6570\u636e\u91cf\u8f83\u5927\u65f6\u8bb8\u591a\u64cd\u4f5c\u65e0\u6cd5\u8fdb\u884c\uff0c\u8fd9\u5c31\u9700\u8981\u5229\u7528pandas\u6a21\u5757\u8fdb\u884c\u6570\u636e\u5904\u7406\u3002 pandas\u4e2d\u7684python\u6570\u636e\u7ed3\u6784 Series:\u4e00\u5806\u6570\u7ec4\u3002\u4e0epython\u6807\u51c6\u6570\u636e\u7ed3\u6784list\u5217\u8868\u7c7b\u4f3c\u3002 DataFrame:\u4e8c\u7ef4\u7684\u8868\u683c\u578b\u6570\u636e\u7ed3\u6784\u3002\u53ef\u4ee5\u7406\u89e3\u4e3aSeries\u5bb9\u5668\u3002 Panel:\u4e09\u7ef4\u6570\u7ec4\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aDataFrame\u5bb9\u5668\u3002 \u5e38\u89c1\u7684pandas\u8bfb\u53d6\u6570\u636e\u7c7b\u578b pandas.read_csv() pandas.read_excel() pandas.read_sql() pandas.read_html() pandas.read_json() Series\u7684\u521b\u5efa\u4e0e\u7d22\u5f15 1\u3001 import pandas as pd #\u901a\u8fc7\u6570\u7ec4\u521b\u5efaSeries s1 = pd.Series([1,2,3,'Tom',True]) print(s1) #\u521b\u5efa\u6307\u5b9a\u7d22\u5f15\u5217\u7684Series s2 = pd.Series(['tom','jack','dane'],index=['001','002','003']) print(s2) #\u4f7f\u7528\u5b57\u5178\u521b\u5efaSeries s3 = pd.Series({'tom':'001','jack':'002'}) print(s3) #\u83b7\u53d6s1\u7684\u7d22\u5f15\u5217 print(s1.index) #\u83b7\u53d6s1\u7684\u503c print(s1.values) # \u83b7\u53d6\u591a\u4e2a\u7d22\u5f15\u7684\u503c print(s1[[0,1]]) 2\u3001 s = pd.Series([1,2,3,2,4],index=['a','b','c','d','e']) print(s) print('\\n') print(s.max()) #\u6700\u5927 print(s.min()) #\u6700\u5c0f print(s.median()) #\u4e2d\u4f4d\u6570 print(s.sum()) #\u6c42\u548c s.drop('d')#\u5220\u9664\u7d22\u5f15\u4e3ad\u7684\u503c s['a'] = 0 #\u4fee\u6539\u7d22\u5f15\u4e3aa\u7684\u503c print(s) s1 = pd.Series([5,4,3,2,1],index=list(map(lambda x:x.upper(),['a','b','c','d','e']))) print('\\n') print(s1) s2 = s.append(s1) #\u5c06s1\u5408\u5e76\u5230s\u540e print(s2) a 1 b 2 c 3 d 2 e 4 dtype: int64 4 1 2.0 12 a 0 b 2 c 3 d 2 e 4 dtype: int64 A 5 B 4 C 3 D 2 E 1 dtype: int64 a 0 b 2 c 3 d 2 e 4 A 5 B 4 C 3 D 2 E 1 dtype: int64 dataframe\u7684\u57fa\u672c\u64cd\u4f5c \u521b\u5efadataframe 1\u3001 \u4e00\u822c\u4f7f\u7528pandas\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6\uff0c\u5c31\u662fdataframe\u7c7b\u578b pd.read_csv() pd.read_excel() pd.read_sql() 2\u3001\u901a\u8fc7\u5b57\u5178\u6765\u521b\u5efa import pandas as pd data = {'id':[1,2,3],'name':['tom','jack','luck']} df = pd.DataFrame(data) print(df) \u7ed3\u679c: id name 0 1 tom 1 2 jack 2 3 luc dataframe\u57fa\u672c\u64cd\u4f5c #\u83b7\u53d6\u6570\u636e\u7c7b\u578b print(df.dtypes) #\u83b7\u53d6columns print(df.columns) #\u83b7\u53d6\u7d22\u5f15\u5217 print(df.index) \u8f93\u51fa\uff1a id int64 name object dtype: object Index(['id', 'name'], dtype='object') RangeIndex(start=0, stop=3, step=1) #\u83b7\u53d6\u67d0\u4e00\u5217 print(df['id']) print(type(df['id'])) #series #\u83b7\u53d6\u591a\u5217\u6570\u636e,\u6309\u7d22\u5f15 print(df[['name','id']]) print(type(df[['name','id']])) #DataFrame #\u83b7\u53d6\u524dn\u6761\u6570\u636e print(df.head(1)) #\u83b7\u53d6\u540en\u6761\u6570\u636e print(df.tail(2)) #\u83b7\u53d6\u67d0\u4e00\u884c\u6570\u636e df.loc[1] #\u83b7\u53d6\u591a\u884c\u6570\u636e df.loc[1:2]","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"pandas%E6%A8%A1%E5%9D%97/mypandas/#pandas","text":"Pandas (Python Data Analysis Library) \u662f\u57fa\u4e8eNumPy \u7684\u4e00\u79cd\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u662f\u4e3a\u4e86\u89e3\u51b3\u6570\u636e\u5206\u6790\u4efb\u52a1\u800c\u521b\u5efa\u7684\u3002 numpy\u66f4\u52a0\u9002\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\uff1b\u800cpandas\u6700\u521d\u636e\u8bf4\u662f\u8bbe\u8ba1\u7528\u4e8e\u91d1\u878d\u9886\u57df\uff0c\u56e0\u6b64pandas\u53ef\u80fd\u66f4\u52a0\u9002\u7528\u4e8e\u5404\u7c7b\u5b9e\u9645\u5e94\u7528\u573a\u666f\u7684\u5904\u7406\u3002\u53e6\u4e00\u65b9\u9762\uff0c numpy\u9002\u7528\u4e8e\u5904\u7406\u201c\u5e72\u51c0\u201d\u7684\u6570\u636e\uff0c\u53ca\u89c4\u8303\u3001\u65e0\u7f3a\u5931\u7684\u6570\u636e \uff0c\u800c pandas\u66f4\u52a0\u64c5\u957f\u6570\u636e\u6e05\u6d17(data munging) \uff0c\u8fd9\u4e3a\u540e\u4e00\u6b65\u6570\u636e\u5904\u7406\u626b\u6e05\u969c\u788d\u3002 Excel\u53ef\u4ee5\u5904\u7406\u5c11\u91cf\u7684\u6570\u636e\uff0c\u5f53\u6570\u636e\u91cf\u8f83\u5927\u65f6\u8bb8\u591a\u64cd\u4f5c\u65e0\u6cd5\u8fdb\u884c\uff0c\u8fd9\u5c31\u9700\u8981\u5229\u7528pandas\u6a21\u5757\u8fdb\u884c\u6570\u636e\u5904\u7406\u3002","title":"pandas\u7b80\u4ecb"},{"location":"pandas%E6%A8%A1%E5%9D%97/mypandas/#pandaspython","text":"Series:\u4e00\u5806\u6570\u7ec4\u3002\u4e0epython\u6807\u51c6\u6570\u636e\u7ed3\u6784list\u5217\u8868\u7c7b\u4f3c\u3002 DataFrame:\u4e8c\u7ef4\u7684\u8868\u683c\u578b\u6570\u636e\u7ed3\u6784\u3002\u53ef\u4ee5\u7406\u89e3\u4e3aSeries\u5bb9\u5668\u3002 Panel:\u4e09\u7ef4\u6570\u7ec4\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aDataFrame\u5bb9\u5668\u3002","title":"pandas\u4e2d\u7684python\u6570\u636e\u7ed3\u6784"},{"location":"pandas%E6%A8%A1%E5%9D%97/mypandas/#pandas_1","text":"pandas.read_csv() pandas.read_excel() pandas.read_sql() pandas.read_html() pandas.read_json()","title":"\u5e38\u89c1\u7684pandas\u8bfb\u53d6\u6570\u636e\u7c7b\u578b"},{"location":"pandas%E6%A8%A1%E5%9D%97/mypandas/#series","text":"1\u3001 import pandas as pd #\u901a\u8fc7\u6570\u7ec4\u521b\u5efaSeries s1 = pd.Series([1,2,3,'Tom',True]) print(s1) #\u521b\u5efa\u6307\u5b9a\u7d22\u5f15\u5217\u7684Series s2 = pd.Series(['tom','jack','dane'],index=['001','002','003']) print(s2) #\u4f7f\u7528\u5b57\u5178\u521b\u5efaSeries s3 = pd.Series({'tom':'001','jack':'002'}) print(s3) #\u83b7\u53d6s1\u7684\u7d22\u5f15\u5217 print(s1.index) #\u83b7\u53d6s1\u7684\u503c print(s1.values) # \u83b7\u53d6\u591a\u4e2a\u7d22\u5f15\u7684\u503c print(s1[[0,1]]) 2\u3001 s = pd.Series([1,2,3,2,4],index=['a','b','c','d','e']) print(s) print('\\n') print(s.max()) #\u6700\u5927 print(s.min()) #\u6700\u5c0f print(s.median()) #\u4e2d\u4f4d\u6570 print(s.sum()) #\u6c42\u548c s.drop('d')#\u5220\u9664\u7d22\u5f15\u4e3ad\u7684\u503c s['a'] = 0 #\u4fee\u6539\u7d22\u5f15\u4e3aa\u7684\u503c print(s) s1 = pd.Series([5,4,3,2,1],index=list(map(lambda x:x.upper(),['a','b','c','d','e']))) print('\\n') print(s1) s2 = s.append(s1) #\u5c06s1\u5408\u5e76\u5230s\u540e print(s2) a 1 b 2 c 3 d 2 e 4 dtype: int64 4 1 2.0 12 a 0 b 2 c 3 d 2 e 4 dtype: int64 A 5 B 4 C 3 D 2 E 1 dtype: int64 a 0 b 2 c 3 d 2 e 4 A 5 B 4 C 3 D 2 E 1 dtype: int64","title":"Series\u7684\u521b\u5efa\u4e0e\u7d22\u5f15"},{"location":"pandas%E6%A8%A1%E5%9D%97/mypandas/#dataframe","text":"","title":"dataframe\u7684\u57fa\u672c\u64cd\u4f5c"},{"location":"pandas%E6%A8%A1%E5%9D%97/mypandas/#dataframe_1","text":"1\u3001 \u4e00\u822c\u4f7f\u7528pandas\u76f4\u63a5\u8bfb\u53d6\u6587\u4ef6\uff0c\u5c31\u662fdataframe\u7c7b\u578b pd.read_csv() pd.read_excel() pd.read_sql() 2\u3001\u901a\u8fc7\u5b57\u5178\u6765\u521b\u5efa import pandas as pd data = {'id':[1,2,3],'name':['tom','jack','luck']} df = pd.DataFrame(data) print(df) \u7ed3\u679c: id name 0 1 tom 1 2 jack 2 3 luc","title":"\u521b\u5efadataframe"},{"location":"pandas%E6%A8%A1%E5%9D%97/mypandas/#dataframe_2","text":"#\u83b7\u53d6\u6570\u636e\u7c7b\u578b print(df.dtypes) #\u83b7\u53d6columns print(df.columns) #\u83b7\u53d6\u7d22\u5f15\u5217 print(df.index) \u8f93\u51fa\uff1a id int64 name object dtype: object Index(['id', 'name'], dtype='object') RangeIndex(start=0, stop=3, step=1) #\u83b7\u53d6\u67d0\u4e00\u5217 print(df['id']) print(type(df['id'])) #series #\u83b7\u53d6\u591a\u5217\u6570\u636e,\u6309\u7d22\u5f15 print(df[['name','id']]) print(type(df[['name','id']])) #DataFrame #\u83b7\u53d6\u524dn\u6761\u6570\u636e print(df.head(1)) #\u83b7\u53d6\u540en\u6761\u6570\u636e print(df.tail(2)) #\u83b7\u53d6\u67d0\u4e00\u884c\u6570\u636e df.loc[1] #\u83b7\u53d6\u591a\u884c\u6570\u636e df.loc[1:2]","title":"dataframe\u57fa\u672c\u64cd\u4f5c"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/","text":"\u524d\u8a00 \u8bad\u7ec3\u96c6\uff1a\u7528\u4e8e\u6a21\u578b\u62df\u5408\u7684\u6570\u636e\u6837\u672c\u3002 \u9a8c\u8bc1\u96c6\uff1a\u662f\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5355\u72ec\u7559\u51fa\u7684\u6837\u672c\u96c6\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u8c03\u6574\u6a21\u578b\u7684\u8d85\u53c2\u6570\u548c\u7528\u4e8e\u5bf9\u6a21\u578b\u7684\u80fd\u529b\u8fdb\u884c\u521d\u6b65\u8bc4\u4f30\u3002 \u5e38\u91c7\u7528\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u6cd5\u5c06\u8bad\u7ec3\u6570\u636e\u96c6\u518d\u7ec6\u5206\u6210\u4e0d\u540c\u7684\u9a8c\u8bc1\u6570\u636e\u96c6\u53bb\u8bad\u7ec3\u6a21\u578b\u3002 \u6d4b\u8bd5\u96c6\uff1a\u7528\u6765\u8bc4\u4f30\u6700\u7ec8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u4f46 \u4e0d\u80fd\u4f5c\u4e3a\u8c03\u53c2\u3001\u9009\u62e9\u7279\u5f81\u7b49\u64cd\u4f5c\u7684\u4f9d\u636e\u3002 \u673a\u5668\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u5c06\u6570\u636e\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u6d4b\u8bd5\u96c6\u5b8c\u5168\u4e0d\u53c2\u4e0e\u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u800c\u7528\u4e8e\u6700\u7ec8\u6a21\u578b\u7684\u8bc4\u4f30\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5e38\u5e38\u4f1a\u51fa\u73b0\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u5373\u8bad\u7ec3\u8bef\u5dee\u5c0f\uff0c\u6d4b\u8bd5\u8bef\u5dee\u5927\u3002\u5982\u679c\u6b64\u65f6\u5c31\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u6765\u8c03\u6574\u6a21\u578b\u53c2\u6570\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728\u8bad\u7ec3\u65f6\u5df2\u77e5\u90e8\u5206\u6d4b\u8bd5\u6570\u636e\u7684\u4fe1\u606f\uff0c\u4f1a\u5f71\u54cd\u6700\u7ec8\u8bc4\u4f30\u7ed3\u679c\u7684\u51c6\u786e\u6027\u3002 \u901a\u5e38\u7684\u505a\u6cd5\u662f\u5728\u8bad\u7ec3\u6570\u636e\u518d\u4e2d\u5206\u51fa\u4e00\u90e8\u5206\u505a\u4e3a\u9a8c\u8bc1(Validation)\u6570\u636e\uff0c\u7528\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u8bad\u7ec3\u6548\u679c\u3002 \u9a8c\u8bc1\u6570\u636e\u53d6\u81ea\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u4e0d\u53c2\u4e0e\u8bad\u7ec3\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f8\u5bf9\u5ba2\u89c2\u7684\u8bc4\u4f30\u6a21\u578b\u5bf9\u4e8e\u8bad\u7ec3\u96c6\u4e4b\u5916\u6570\u636e\u7684\u5339\u914d\u7a0b\u5ea6\u3002 KFold\u4ea4\u53c9\u9a8c\u8bc1 \u6a21\u578b\u5728\u9a8c\u8bc1\u6570\u636e\u4e2d\u7684\u8bc4\u4f30\u5e38\u7528\u7684\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u53c8\u79f0\u5faa\u73af\u9a8c\u8bc1\u3002 \u5b83\u5c06\u539f\u59cb\u6570\u636e \u5206\u6210K\u7ec4(K-Fold) \uff0c\u5c06\u6bcf\u4e2a\u5b50\u96c6\u6570\u636e\u5206\u522b\u505a\u4e00\u6b21\u9a8c\u8bc1\u96c6\uff0c\u5176\u4f59\u7684K-1\u7ec4\u5b50\u96c6\u6570\u636e\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u8fd9\u6837\u4f1a \u5f97\u5230K\u4e2a\u6a21\u578b\u3002 \u8fd9K\u4e2a\u6a21\u578b\u5206\u522b\u5728\u9a8c\u8bc1\u96c6\u4e2d\u8bc4\u4f30\u7ed3\u679c\uff0c\u6700\u540e\u7684\u8bef\u5deeMSE(Mean Squared Error)\u52a0\u548c\u5e73\u5747\u5c31\u5f97\u5230\u4ea4\u53c9\u9a8c\u8bc1\u8bef\u5dee\u3002\u4ea4\u53c9\u9a8c\u8bc1\u6709\u6548\u5229\u7528\u4e86\u6709\u9650\u7684\u6570\u636e\uff0c\u5e76\u4e14\u8bc4\u4f30\u7ed3\u679c\u80fd\u591f\u5c3d\u53ef\u80fd\u63a5\u8fd1\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8868\u73b0\uff0c\u53ef\u4ee5\u505a\u4e3a\u6a21\u578b\u4f18\u5316\u7684\u6307\u6807\u4f7f\u7528\u3002 1\u3001\u5982\u679c\u8bad\u7ec3\u6570\u636e\u96c6\u76f8\u5bf9\u8f83\u5c0f\uff0c\u5219\u589e\u5927k\u503c\u3002 \u589e\u5927k\u503c\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u5c06\u4f1a\u6709\u66f4\u591a\u7684\u6570\u636e\u7528\u4e8e\u6a21\u578b\u8bad\u7ec3\uff0c\u80fd\u591f\u5f97\u5230\u6700\u5c0f\u504f\u5dee\uff0c\u540c\u65f6\u7b97\u6cd5\u65f6\u95f4\u5ef6\u957f\u3002\u4e14\u8bad\u7ec3\u5757\u95f4\u9ad8\u5ea6\u76f8\u4f3c\uff0c\u5bfc\u81f4\u8bc4\u4ef7\u7ed3\u679c\u65b9\u5dee\u8f83\u9ad8\u3002 2\u3001\u5982\u679c\u8bad\u7ec3\u96c6\u76f8\u5bf9\u8f83\u5927\uff0c\u5219\u51cf\u5c0fk\u503c\u3002 \u51cf\u5c0fk\u503c\uff0c\u964d\u4f4e\u6a21\u578b\u5728\u4e0d\u540c\u7684\u6570\u636e\u5757\u4e0a\u8fdb\u884c\u91cd\u590d\u62df\u5408\u7684\u6027\u80fd\u8bc4\u4f30\u7684\u8ba1\u7b97\u6210\u672c\uff0c\u5728\u5e73\u5747\u6027\u80fd\u7684\u57fa\u7840\u4e0a\u83b7\u5f97\u6a21\u578b\u7684\u51c6\u786e\u8bc4\u4f30\u3002 \u4ee3\u7801\u5b9e\u4f8b \u5224\u65ad\u6a21\u578b\u5728\u65b0\u6570\u636e\u4e0a\u7684\u62df\u5408\u8d28\u91cf\uff08\u6216\u9884\u671f\u503c\uff09\u53ef\u4ee5\u91c7\u7528 score \u65b9\u6cd5\uff0c\u8d8a\u5927\u8d8a\u597d\u3002 from sklearn import datasets, svm digits = datasets.load_digits() X_digits = digits.data y_digits = digits.target svc = svm.SVC(C=1, kernel='linear') svc.fit(X_digits[:-100], y_digits[:-100]).score(X_digits[-100:], y_digits[-100:]) 0.98 kfold\u4ea4\u53c9\u9a8c\u8bc1 from sklearn import datasets import numpy as np from sklearn import svm digits = datasets.load_digits() X = digits.data y = digits.target svc = svm.SVC(C=1,kernel='linear') #svc.fit(X[:-100],y[:-100]) #print(svc.score(X[-100:],y[-100:])) #\u7528\u6700\u540e100\u4e2a\u6d4b\u8bd5 X_folds = np.array_split(X,3) #\u5c06\u6570\u7ec4\u4e09\u4e2a\u4e00\u7ec4\u5206\u5272 y_folds = np.array_split(y,3) scores = [] for k in range(3): X_train = list(X_folds) X_test = X_train.pop(k) #pop\u4f1a\u6539\u53d8\u539f\u6570\u7ec4\uff0cX_train\u4e5f\u5220\u9664\u4e86\u7d22\u5f15\u4e3ak\u7684\u5143\u7d20 X_train = np.concatenate(X_train) y_train = list(y_folds) y_test = y_train.pop(k) y_train = np.concatenate(y_train) scores.append(svc.fit(X_train,y_train).score(X_test,y_test)) print(scores) [0.9348914858096828, 0.9565943238731218, 0.9398998330550918] \u4ea4\u53c9\u9a8c\u8bc1\u751f\u6210\u5668 sklearn\u6709\u76f4\u63a5\u751f\u6210\u8bad\u7ec3/\u6d4b\u8bd5\u7d22\u5f15\u5217\u8868\u7684\u7c7b\uff0c\u66f4\u7b80\u6d01\u3001\u65b9\u4fbf\u7684\u5b9e\u73b0\u4ea4\u53c9\u9a8c\u8bc1\u3002\u7c7b\u63d0\u4f9b\u4e86 split \u65b9\u6cd5\uff0c\u65b9\u6cd5\u5141\u8bb8\u8f93\u5165\u80fd\u88ab\u5206\u89e3\u7684\u6570\u636e\u96c6\uff0c\u5e76\u4e3a\u6bcf\u6b21\u9009\u62e9\u7684\u4ea4\u53c9\u9a8c\u8bc1\u7b56\u7565\u8fed\u4ee3\u751f\u6210\u8bad\u7ec3/\u6d4b\u8bd5\u96c6 \u7d22\u5f15 \u3002 from unicodedata import digit from sklearn.model_selection import KFold,cross_val_score from sklearn import datasets,svm digits = datasets.load_digits() X_digits = digits.data y_digits = digits.target svc = svm.SVC(C=1,kernel='linear') X = ['a','a','b','c','c','c'] k_fold = KFold(n_splits=3) for train_indices,test_indices in k_fold.split(X): print(f'Train:{train_indices} | test:{test_indices}') Train:[2 3 4 5] | test:[0 1] Train:[0 1 4 5] | test:[2 3] Train:[0 1 2 3] | test:[4 5] \u6839\u636e\u9009\u53d6\u7684\u7d22\u5f15\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1 socres = [svc.fit(X_digits[train],y_digits[train]).score(X_digits[test],y_digits[test]) for train,test in k_fold.split(X_digits)] print(socres) [0.9348914858096828, 0.9565943238731218, 0.9398998330550918] \u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528cross_val_score\u7b97\u51fa\u4ea4\u53c9\u9a8c\u8bc1\u5206\u6570 print(cross_val_score(svc,X_digits,y_digits,cv=k_fold,n_jobs=-1)) #n_jobs=-1\u8fd0\u7b97\u8c03\u5ea6\u5230\u5168\u90e8cpu\u4e0a\u8fdb\u884c [0.93489149 0.95659432 0.93989983] \u901a\u8fc7\u6539\u53d8scoring\u53c2\u6570\u6765\u6307\u5b9a\u66ff\u6362\u7684\u8bc4\u5206\u65b9\u6cd5 print(cross_val_score(svc,X_digits,y_digits,cv=k_fold,scoring='precision_macro')) [0.93969761 0.95911415 0.94041254] https://blog.csdn.net/xiaohutong1991/article/details/107924703","title":"\u4ea4\u53c9\u9a8c\u8bc1\u751f\u6210\u5668"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/#_1","text":"\u8bad\u7ec3\u96c6\uff1a\u7528\u4e8e\u6a21\u578b\u62df\u5408\u7684\u6570\u636e\u6837\u672c\u3002 \u9a8c\u8bc1\u96c6\uff1a\u662f\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5355\u72ec\u7559\u51fa\u7684\u6837\u672c\u96c6\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u8c03\u6574\u6a21\u578b\u7684\u8d85\u53c2\u6570\u548c\u7528\u4e8e\u5bf9\u6a21\u578b\u7684\u80fd\u529b\u8fdb\u884c\u521d\u6b65\u8bc4\u4f30\u3002 \u5e38\u91c7\u7528\u4ea4\u53c9\u9a8c\u8bc1\u7684\u65b9\u6cd5\u5c06\u8bad\u7ec3\u6570\u636e\u96c6\u518d\u7ec6\u5206\u6210\u4e0d\u540c\u7684\u9a8c\u8bc1\u6570\u636e\u96c6\u53bb\u8bad\u7ec3\u6a21\u578b\u3002 \u6d4b\u8bd5\u96c6\uff1a\u7528\u6765\u8bc4\u4f30\u6700\u7ec8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u4f46 \u4e0d\u80fd\u4f5c\u4e3a\u8c03\u53c2\u3001\u9009\u62e9\u7279\u5f81\u7b49\u64cd\u4f5c\u7684\u4f9d\u636e\u3002 \u673a\u5668\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u5c06\u6570\u636e\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u3002\u6d4b\u8bd5\u96c6\u5b8c\u5168\u4e0d\u53c2\u4e0e\u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u800c\u7528\u4e8e\u6700\u7ec8\u6a21\u578b\u7684\u8bc4\u4f30\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u5e38\u5e38\u4f1a\u51fa\u73b0\u8fc7\u62df\u5408\u95ee\u9898\uff0c\u5373\u8bad\u7ec3\u8bef\u5dee\u5c0f\uff0c\u6d4b\u8bd5\u8bef\u5dee\u5927\u3002\u5982\u679c\u6b64\u65f6\u5c31\u4f7f\u7528\u6d4b\u8bd5\u6570\u636e\u6765\u8c03\u6574\u6a21\u578b\u53c2\u6570\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728\u8bad\u7ec3\u65f6\u5df2\u77e5\u90e8\u5206\u6d4b\u8bd5\u6570\u636e\u7684\u4fe1\u606f\uff0c\u4f1a\u5f71\u54cd\u6700\u7ec8\u8bc4\u4f30\u7ed3\u679c\u7684\u51c6\u786e\u6027\u3002 \u901a\u5e38\u7684\u505a\u6cd5\u662f\u5728\u8bad\u7ec3\u6570\u636e\u518d\u4e2d\u5206\u51fa\u4e00\u90e8\u5206\u505a\u4e3a\u9a8c\u8bc1(Validation)\u6570\u636e\uff0c\u7528\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u8bad\u7ec3\u6548\u679c\u3002 \u9a8c\u8bc1\u6570\u636e\u53d6\u81ea\u8bad\u7ec3\u6570\u636e\uff0c\u4f46\u4e0d\u53c2\u4e0e\u8bad\u7ec3\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f8\u5bf9\u5ba2\u89c2\u7684\u8bc4\u4f30\u6a21\u578b\u5bf9\u4e8e\u8bad\u7ec3\u96c6\u4e4b\u5916\u6570\u636e\u7684\u5339\u914d\u7a0b\u5ea6\u3002","title":"\u524d\u8a00"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/#kfold","text":"\u6a21\u578b\u5728\u9a8c\u8bc1\u6570\u636e\u4e2d\u7684\u8bc4\u4f30\u5e38\u7528\u7684\u662f\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u53c8\u79f0\u5faa\u73af\u9a8c\u8bc1\u3002 \u5b83\u5c06\u539f\u59cb\u6570\u636e \u5206\u6210K\u7ec4(K-Fold) \uff0c\u5c06\u6bcf\u4e2a\u5b50\u96c6\u6570\u636e\u5206\u522b\u505a\u4e00\u6b21\u9a8c\u8bc1\u96c6\uff0c\u5176\u4f59\u7684K-1\u7ec4\u5b50\u96c6\u6570\u636e\u4f5c\u4e3a\u8bad\u7ec3\u96c6\uff0c\u8fd9\u6837\u4f1a \u5f97\u5230K\u4e2a\u6a21\u578b\u3002 \u8fd9K\u4e2a\u6a21\u578b\u5206\u522b\u5728\u9a8c\u8bc1\u96c6\u4e2d\u8bc4\u4f30\u7ed3\u679c\uff0c\u6700\u540e\u7684\u8bef\u5deeMSE(Mean Squared Error)\u52a0\u548c\u5e73\u5747\u5c31\u5f97\u5230\u4ea4\u53c9\u9a8c\u8bc1\u8bef\u5dee\u3002\u4ea4\u53c9\u9a8c\u8bc1\u6709\u6548\u5229\u7528\u4e86\u6709\u9650\u7684\u6570\u636e\uff0c\u5e76\u4e14\u8bc4\u4f30\u7ed3\u679c\u80fd\u591f\u5c3d\u53ef\u80fd\u63a5\u8fd1\u6a21\u578b\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u8868\u73b0\uff0c\u53ef\u4ee5\u505a\u4e3a\u6a21\u578b\u4f18\u5316\u7684\u6307\u6807\u4f7f\u7528\u3002 1\u3001\u5982\u679c\u8bad\u7ec3\u6570\u636e\u96c6\u76f8\u5bf9\u8f83\u5c0f\uff0c\u5219\u589e\u5927k\u503c\u3002 \u589e\u5927k\u503c\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u5c06\u4f1a\u6709\u66f4\u591a\u7684\u6570\u636e\u7528\u4e8e\u6a21\u578b\u8bad\u7ec3\uff0c\u80fd\u591f\u5f97\u5230\u6700\u5c0f\u504f\u5dee\uff0c\u540c\u65f6\u7b97\u6cd5\u65f6\u95f4\u5ef6\u957f\u3002\u4e14\u8bad\u7ec3\u5757\u95f4\u9ad8\u5ea6\u76f8\u4f3c\uff0c\u5bfc\u81f4\u8bc4\u4ef7\u7ed3\u679c\u65b9\u5dee\u8f83\u9ad8\u3002 2\u3001\u5982\u679c\u8bad\u7ec3\u96c6\u76f8\u5bf9\u8f83\u5927\uff0c\u5219\u51cf\u5c0fk\u503c\u3002 \u51cf\u5c0fk\u503c\uff0c\u964d\u4f4e\u6a21\u578b\u5728\u4e0d\u540c\u7684\u6570\u636e\u5757\u4e0a\u8fdb\u884c\u91cd\u590d\u62df\u5408\u7684\u6027\u80fd\u8bc4\u4f30\u7684\u8ba1\u7b97\u6210\u672c\uff0c\u5728\u5e73\u5747\u6027\u80fd\u7684\u57fa\u7840\u4e0a\u83b7\u5f97\u6a21\u578b\u7684\u51c6\u786e\u8bc4\u4f30\u3002","title":"KFold\u4ea4\u53c9\u9a8c\u8bc1"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/#_2","text":"\u5224\u65ad\u6a21\u578b\u5728\u65b0\u6570\u636e\u4e0a\u7684\u62df\u5408\u8d28\u91cf\uff08\u6216\u9884\u671f\u503c\uff09\u53ef\u4ee5\u91c7\u7528 score \u65b9\u6cd5\uff0c\u8d8a\u5927\u8d8a\u597d\u3002 from sklearn import datasets, svm digits = datasets.load_digits() X_digits = digits.data y_digits = digits.target svc = svm.SVC(C=1, kernel='linear') svc.fit(X_digits[:-100], y_digits[:-100]).score(X_digits[-100:], y_digits[-100:]) 0.98 kfold\u4ea4\u53c9\u9a8c\u8bc1 from sklearn import datasets import numpy as np from sklearn import svm digits = datasets.load_digits() X = digits.data y = digits.target svc = svm.SVC(C=1,kernel='linear') #svc.fit(X[:-100],y[:-100]) #print(svc.score(X[-100:],y[-100:])) #\u7528\u6700\u540e100\u4e2a\u6d4b\u8bd5 X_folds = np.array_split(X,3) #\u5c06\u6570\u7ec4\u4e09\u4e2a\u4e00\u7ec4\u5206\u5272 y_folds = np.array_split(y,3) scores = [] for k in range(3): X_train = list(X_folds) X_test = X_train.pop(k) #pop\u4f1a\u6539\u53d8\u539f\u6570\u7ec4\uff0cX_train\u4e5f\u5220\u9664\u4e86\u7d22\u5f15\u4e3ak\u7684\u5143\u7d20 X_train = np.concatenate(X_train) y_train = list(y_folds) y_test = y_train.pop(k) y_train = np.concatenate(y_train) scores.append(svc.fit(X_train,y_train).score(X_test,y_test)) print(scores) [0.9348914858096828, 0.9565943238731218, 0.9398998330550918]","title":"\u4ee3\u7801\u5b9e\u4f8b"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/#_3","text":"sklearn\u6709\u76f4\u63a5\u751f\u6210\u8bad\u7ec3/\u6d4b\u8bd5\u7d22\u5f15\u5217\u8868\u7684\u7c7b\uff0c\u66f4\u7b80\u6d01\u3001\u65b9\u4fbf\u7684\u5b9e\u73b0\u4ea4\u53c9\u9a8c\u8bc1\u3002\u7c7b\u63d0\u4f9b\u4e86 split \u65b9\u6cd5\uff0c\u65b9\u6cd5\u5141\u8bb8\u8f93\u5165\u80fd\u88ab\u5206\u89e3\u7684\u6570\u636e\u96c6\uff0c\u5e76\u4e3a\u6bcf\u6b21\u9009\u62e9\u7684\u4ea4\u53c9\u9a8c\u8bc1\u7b56\u7565\u8fed\u4ee3\u751f\u6210\u8bad\u7ec3/\u6d4b\u8bd5\u96c6 \u7d22\u5f15 \u3002 from unicodedata import digit from sklearn.model_selection import KFold,cross_val_score from sklearn import datasets,svm digits = datasets.load_digits() X_digits = digits.data y_digits = digits.target svc = svm.SVC(C=1,kernel='linear') X = ['a','a','b','c','c','c'] k_fold = KFold(n_splits=3) for train_indices,test_indices in k_fold.split(X): print(f'Train:{train_indices} | test:{test_indices}') Train:[2 3 4 5] | test:[0 1] Train:[0 1 4 5] | test:[2 3] Train:[0 1 2 3] | test:[4 5] \u6839\u636e\u9009\u53d6\u7684\u7d22\u5f15\u8fdb\u884c\u4ea4\u53c9\u9a8c\u8bc1 socres = [svc.fit(X_digits[train],y_digits[train]).score(X_digits[test],y_digits[test]) for train,test in k_fold.split(X_digits)] print(socres) [0.9348914858096828, 0.9565943238731218, 0.9398998330550918] \u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528cross_val_score\u7b97\u51fa\u4ea4\u53c9\u9a8c\u8bc1\u5206\u6570 print(cross_val_score(svc,X_digits,y_digits,cv=k_fold,n_jobs=-1)) #n_jobs=-1\u8fd0\u7b97\u8c03\u5ea6\u5230\u5168\u90e8cpu\u4e0a\u8fdb\u884c [0.93489149 0.95659432 0.93989983] \u901a\u8fc7\u6539\u53d8scoring\u53c2\u6570\u6765\u6307\u5b9a\u66ff\u6362\u7684\u8bc4\u5206\u65b9\u6cd5 print(cross_val_score(svc,X_digits,y_digits,cv=k_fold,scoring='precision_macro')) [0.93969761 0.95911415 0.94041254] https://blog.csdn.net/xiaohutong1991/article/details/107924703","title":"\u4ea4\u53c9\u9a8c\u8bc1\u751f\u6210\u5668"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/","text":"\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u4ee5\u53ca\u6240\u5c5e\u7c7b\u522b \u8fd9\u91cc\u4f7f\u7528sklearn.datasets\u4e2d\u7684fetch_20newsgroups\u6570\u636e\u96c6\uff0820\u4e2a\u65b0\u95fb\u7ec4\u96c6\u5408\uff09\uff0c\u8be5\u6570\u636e\u96c6\u5e38\u5e38\u5e94\u7528\u5728 \u6587\u672c\u5206\u7c7b\u548c\u6587\u672c\u805a\u7c7b\u7b49 \u6587\u672c\u5e94\u7528\u7684\u8bd5\u9a8c\u4e2d\u3002 \u6570\u636e\u4f7f\u7528\u65b9\u6cd5 \uff1a fetch_20newsgroups().data:\u7279\u5f81\u6570\u636e\u6570\u7ec4\uff0c\u7528\u6765\u67e5\u770b\u6587\u672c\u5177\u4f53\u5185\u5bb9 fetch_20newsgroups().filenames:\u67e5\u770b\u6587\u4ef6\u4f4d\u7f6e\u4fe1\u606f fetch_20newsgroups().target_names:\u67e5\u770b\u6570\u636e\u96c6\u540d\u79f0\uff0c\u517120\u4e2a fetch_20newsgroups().target:\u67e5\u770b\u6240\u5c5eCategories(\u79cd\u7c7b)\u7684 \u7d22\u5f15 ,\u5bf9\u5e94\u4f4d\u7f6e\u7684target_names\u5c31\u662f\u79cd\u7c7b\u540d\u79f0 fetch_20newsgroups().DESCR:\u67e5\u770b\u63cf\u8ff0\u4fe1\u606f \u4ece20\u4e2a\u7c7b\u522b\u6570\u636e\u96c6\u4e2d\u9009\u51fa4\u4e2a\u8fdb\u884c\u8bad\u7ec3\uff1a from sklearn.datasets import fetch_20newsgroups categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] #subset:\u52a0\u8f7d\u54ea\u4e00\u90e8\u5206\u6570\u636e\u96c6train/test;categoties:\u9009\u53d6\u54ea\u4e00\u7c7b\u6570\u636e\u96c6\uff1bshuffle:\u5c06\u6570\u636e\u968f\u673a\u6392\u5e8f twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) # print(len(twenty_train.data)) # print(len(twenty_train.filenames)) #\u6253\u5370\u7b2c\u4e00\u4e2a\u6587\u4ef6\u7684\u524d\u51e0\u884c\uff0c\u5e76\u67e5\u770b\u8be5\u6587\u6863\u6240\u5c5e\u79cd\u7c7b\u540d\u79f0 print('\\n'.join(twenty_train.data[0].split('\\n')[:3])) print(twenty_train.target_names[twenty_train.target[0]]) From: sd345@city.ac.uk (Michael Collier) Subject: Converting images to HP LaserJet III? Nntp-Posting-Host: hampton comp.graphics \u7279\u5f81\u63d0\u53d6CountVectorizer CountVectorizer\u53ef\u4ee5\u5c06\u6587\u672c\u5185\u5bb9\u8f6c\u5316\u4e3a\u6570\u503c\u5f62\u5f0f\u7684\u7279\u5f81\u5411\u91cf \u8bcd\u888b 1\u3001\u7ed9\u5168\u90e8\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6bcf\u4e00\u4e2a\u5355\u8bcd\uff08\u4e0d\u91cd\u590d\u7684\uff09\u5206\u914d\u4e00\u4e2a\u7279\u5b9a\u7684\u6574\u6570id\uff0c\u4f8b\u5982\u4ee5\u5355\u8bcd\u540d\u79f0\u4e3a\u952e\uff0c\u5c06\u6309\u5355\u8bcd\u9996\u5b57\u6bcd\u987a\u5e8f\u8fdb\u884c\u6392\u5217\u7684\u7d22\u5f15\u503c\u4f5c\u4e3a\u503c\uff0c \u7ec4\u6210\u4e00\u4e2a\u5355\u8bcd\u5230\u6574\u6570\u7d22\u5f15\u7684\u5b57\u5178\u3002 2\u3001\u5bf9\u6bcf\u4e2a\u6587\u6863(\u7d22\u5f15\u4e3ai),\u8ba1\u7b97\u6bcf\u4e2a\u5355\u8bcdw\u7684 \u51fa\u73b0\u6b21\u6570 \uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728X[i,j]\u4e2d\u4f5c\u4e3a\u7279\u5f81#j\u7684\u503c\uff0c\u5176\u4e2dj\u662f\u5b57\u5178\u4e2d\u5355\u8bcdw\u7684\u7d22\u5f15\u3002 from sklearn.feature_extraction.text import CountVectorizer X_test = ['you are good','but you do not fit'] vectorizer = CountVectorizer() counts = vectorizer.fit_transform(X_test) print(counts) print(vectorizer.get_feature_names_out()) #\u6587\u672c\u4e2d\u5305\u542b\u7684\u5168\u90e8\u5355\u8bcd\uff0c\u6309\u9996\u5b57\u6bcd\u987a\u5e8f\u8fdb\u884c\u6392\u5217 print(vectorizer.vocabulary_) #\u4e3a\u6587\u6863\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u5b9a\u4e49\u4e00\u4e2a\u6574\u6570id\uff0c\u5efa\u7acb\u4ece\u5355\u8bcd\u5230\u6574\u6570\u7d22\u5f15\u7684\u5b57\u5178 print(counts.toarray()) #\u8bcd\u9891\u77e9\u9635\uff0c\u5c31\u662f\u4e0a\u8fb9\u8bf4\u7684X[i,j] print(counts.shape) #\u76f8\u5f53\u4e8e\u8bcd\u9891\u77e9\u9635\u5927\u5c0f (0, 6) 1 (0, 0) 1 (0, 4) 1 (1, 6) 1 (1, 1) 1 (1, 2) 1 (1, 5) 1 (1, 3) 1 ['are' 'but' 'do' 'fit' 'good' 'not' 'you'] {'you': 6, 'are': 0, 'good': 4, 'but': 1, 'do': 2, 'not': 5, 'fit': 3} [[1 0 0 0 1 0 1] [0 1 1 1 0 1 1]] (2,7) \u6700\u540e\u8bcd\u9891\u77e9\u9635\u7684\u8bf4\u660e\uff1a \u8bcd\u6c47\u987a\u5e8f are but do fit good not you \u7b2c\u4e00\u4e2a\u53e5\u5b50\u4e2d\u51fa\u73b0\u9891\u6570 1 0 0 0 1 0 1 \u7b2c\u4e8c\u4e2a\u53e5\u5b50\u4e2d\u51fa\u73b0\u9891\u6570 0 1 1 1 0 1 1 \u4ece\u51fa\u73b0\u6b21\u6570\u5230\u51fa\u73b0\u9891\u7387 \u5982\u679c\u53ea\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u4e48\u957f\u7684\u6587\u672c\u76f8\u5bf9\u4e8e\u77ed\u7684\u6587\u672c\u603b\u6709\u66f4\u9ad8\u7684\u51fa\u73b0\u6b21\u6570\u3002\u4e3a\u907f\u514d\u4e0d\u540c\u6587\u672c\u95f4\u6f5c\u5728\u7684\u5dee\u5f02\uff0c\u5c06\u6bcf\u4e2a\u6587\u6863\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u9664\u4ee5\u8be5\u6587\u6863\u4e2d\u6240\u6709\u7684\u5355\u8bcd\u603b\u6570\u3002\u8fd9\u4e9b\u65b0\u7279\u5f81\u79f0\u4e4b\u4e3a\u8bcd\u9891 tf (Term Frequencies)\u3002 \u53e6\u4e00\u4e2a \u5728\u8bcd\u9891\u7684\u57fa\u7840\u4e0a\u6539\u826f \u662f\uff0c\u964d\u4f4e\u5728\u8be5\u8bad\u7ec3\u6587\u96c6\u4e2d\u7684\u5f88\u591a\u6587\u6863\u4e2d\u5747\u51fa\u73b0\u7684\u5355\u8bcd\u7684\u6743\u91cd\uff0c\u4ece\u800c\u7a81\u51fa\u90a3\u4e9b\u4ec5\u5728\u8be5\u8bad\u7ec3\u6587\u96c6\u4e2d\u5728\u4e00\u5c0f\u90e8\u5206\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u7684\u4fe1\u606f\u91cf\u3002\u8fd9\u79cd\u65b9\u6cd5\u79f0\u4e3a tf-idf (Term Frequency times Inverse Document Frequency\uff0c\u8bcd\u9891-\u9006\u6587\u6863\u9891\u7387)\u3002 from sklearn.feature_extraction.text import CountVectorizer from sklearn.feature_extraction.text import TfidfTransformer X_test = ['you are good','but you do not fit'] vectorizer = CountVectorizer() counts = vectorizer.fit_transform(X_test) tfidf_transformer = TfidfTransformer() X_test_tfidf = tfidf_transformer.fit_transform(counts) print(X_test_tfidf) #\u8fd4\u56detf-idf\u9006\u6587\u6863\u9891\u7387 # print(X_test_tfidf.toarray()) \u8fd4\u56de\u77e9\u9635\u5f62\u5f0f (0, 6) 0.4494364165239821 (0, 4) 0.6316672017376245 (0, 0) 0.6316672017376245 (1, 6) 0.33517574332792605 (1, 5) 0.47107781233161794 (1, 3) 0.47107781233161794 (1, 2) 0.47107781233161794 (1, 1) 0.47107781233161794 \u8bad\u7ec3\u6587\u672c\u5206\u7c7b\u5668 \u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668\u6765\u9884\u6d4b\u4e00\u4e2a\u5e16\u5b50\u6240\u5c5e\u7684\u7c7b\u522b,\u6700\u597d\u4f7f\u7528 MultinomialNB\u591a\u9879\u5f0f\u6734\u7d20\u8d1d\u53f6\u65af from sklearn.feature_extraction.text import TfidfTransformer from sklearn.naive_bayes import MultinomialNB categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) count_vect = CountVectorizer() X_train_counts = count_vect.fit_transform(twenty_train.data) tfidf_transformer = TfidfTransformer() X_train_tfidf = tfidf_transformer.fit_transform(X_train_counts) clf = MultinomialNB().fit(X_train_tfidf,twenty_train.target) docs_new = ['God is love', 'OpenGL on the GPU is fast'] #\u62bd\u53d6\u7279\u5f81\uff0c\u8c03\u7528transform\u800c\u4e0d\u662ffit_transform\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u5f81\u5df2\u7ecf\u5728\u8bad\u7ec3\u96c6\u62df\u5408\u4e86 X_new_counts = count_vect.transform(docs_new) print(X_new_counts) X_new_tfidf = tfidf_transformer.transform(X_new_counts) predicted = clf.predict(X_new_tfidf) #\u8fd4\u56de\u9884\u6d4b\u7c7b\u522b\u7684\u7d22\u5f15 for doc,category in zip(docs_new,predicted): print(f'{doc}=>{twenty_train.target_names[category]}') (0, 15521) 1 (0, 18474) 1 (0, 20537) 1 (1, 14048) 1 (1, 15628) 1 (1, 18474) 1 (1, 23733) 1 (1, 23790) 1 (1, 32142) 1 God is love=>soc.religion.christian OpenGL on the GPU is fast=>comp.graphics \u6784\u5efaPipeline(\u7ba1\u9053) sklearn\u63d0\u4f9b\u4e86\u4e00\u4e2aPipeline\u7c7b\uff0c\u4f7f \u5411\u91cf\u5316(vectorizer)=>\u8f6c\u6362\u5668(transformer)=>\u5206\u7c7b\u5668(classifier) \u8fc7\u7a0b\u66f4\u52a0\u7b80\u5355\u3002\u4f7f\u7528Pipeline\u7c7b\uff0c\u64cd\u4f5c\u8d77\u6765\u50cf\u4e00\u4e2a\u590d\u5408\u5206\u7c7b\u5668\uff0c \u8f93\u5165\u53ef\u4ee5\u76f4\u63a5\u662f\u65b0\u6587\u6863 \uff0c\u800c\u4e0d\u9700\u8981\u518d\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\u3002 from sklearn.datasets import fetch_20newsgroups from sklearn.feature_extraction.text import CountVectorizer from sklearn.feature_extraction.text import TfidfTransformer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) docs_new = ['God is love', 'OpenGL on the GPU is fast'] # \u4e0b\u8ff0\u540d\u79f0'vect','tfidf','clf'\u90fd\u662f\u4efb\u610f\u7684\u3002 text_clf = Pipeline([('vect',CountVectorizer()),('tfidf',TfidfTransformer()),('clf',MultinomialNB())]) text_clf.fit(twenty_train.data,twenty_train.target) predicted = text_clf.predict(docs_new) #[3,1] for doc,category in zip(docs_new,predicted): print(f'{doc}=>{twenty_train.target_names[category]}') God is love=>soc.religion.christian OpenGL on the GPU is fast=>comp.graphics \u5728\u6d4b\u8bd5\u96c6\u4e0a\u6027\u80fd\u8bc4\u4f30 1\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff0c\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u6027\u80fd\u8bc4\u4f30 from sklearn.datasets import fetch_20newsgroups from sklearn.feature_extraction.text import CountVectorizer from sklearn.feature_extraction.text import TfidfTransformer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline import numpy as np categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) twenty_test = fetch_20newsgroups(subset='test',categories=categories,shuffle=True,random_state=42) docs_test = twenty_test.data text_clf = Pipeline([('vect',CountVectorizer()),('tfidf',TfidfTransformer()),('clf',MultinomialNB())]) text_clf.fit(twenty_train.data,twenty_train.target) predicted = text_clf.predict(docs_test) print(np.mean(predicted==twenty_test.target)) 0.8348868175765646 2\u3001\u7ebf\u6027\u5206\u7c7b\u5668\u6a21\u578b \u652f\u6301\u5411\u91cf\u673a(SVM) \u8bad\u7ec3\u901f\u5ea6\u6bd4\u6734\u7d20\u8d1d\u53f6\u65af\u6162\u4e00\u70b9\uff0c\u516c\u8ba4\u7684\u6700\u597d\u7684\u6587\u672c\u5206\u7c7b\u5668\u7b97\u6cd5\u4e4b\u4e00\u3002\u53ea\u9700\u8981\u5728Pipeline\u7c7b\u4e2d\u63d2\u63a5\u5165\u4e0d\u540c\u7684\u5206\u7c7b\u5668\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u5206\u7c7b\u5668\u6a21\u578b\u3002 SGDClassifier\u4e2dloss\u53c2\u6570\u9ed8\u8ba4\u4e3a'hinge',\u5373\u5408\u9875\u635f\u5931\u51fd\u6570\uff0c\u8868\u793a\u7ebf\u6027SVM\u6a21\u578b\u3002 SDGClassifier\u6839\u636e\u53c2\u6570\u5b9e\u73b0\u4e0d\u540c\u5206\u7c7b\u5668\u6a21\u578b # \u53ea\u9700\u8981\u6539\u53d8Pipeline\u7c7b\u4e2d\u7684\u5206\u7c7b\u5668\uff0c\u5176\u5b83\u548c\u4e0a\u8ff0\u8d1d\u53f6\u65af\u5206\u7c7b\u4ee3\u7801\u76f8\u540c from sklearn.linear_model import SGDClassifier # ... text_clf = Pipeline([('vect',CountVectorizer()), ('tfidf',TfidfTransformer()), ('clf',SGDClassifier(loss='hinge',penalty='l2',alpha=1e-3,random_state=42,max_iter=5,tol=None))]) # ... print(np.mean(predicted==twenty_test.target)) 0.9101198402130493 \u4f7f\u7528\u7f51\u683c\u641c\u7d20GridSearchCV\u8c03\u53c2 CountVectorizer\u4e2d\u6709ngram_range\u53c2\u6570\uff0c\u5373\u8bcd\u7ec4\u5207\u5206\u7684\u957f\u5ea6\u8303\u56f4\u3002 \u53c2\u6570\u8be6\u89e3 TfidfTransformer\u4e2d\u6709use_idf\u53c2\u6570\uff0c\u9ed8\u8ba4True\uff0c\u5373\u662f\u5426\u5728\u8bcd\u9891\uff08tf\uff09\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6539\u826f\u3002 \u5206\u7c7b\u5668MultinomialNB\u5305\u542b\u4e86\u5e73\u6ed1\u53c2\u6570alpha\uff0c\u4ee5\u53caSGDClassifier\u6709\u60e9\u7f5a\u53c2\u6570alpha\u548c\u76ee\u6807\u51fd\u6570\u4e2d\u7684\u53ef\u8bbe\u7f6e\u7684\u635f\u5931\u4ee5\u53ca\u60e9\u7f5a\u56e0\u5b50\u3002 from sklearn.datasets import fetch_20newsgroups from sklearn.feature_extraction.text import CountVectorizer from sklearn.feature_extraction.text import TfidfTransformer from sklearn.linear_model import SGDClassifier from sklearn.pipeline import Pipeline from sklearn.model_selection import GridSearchCV import numpy as np categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) docs_test = ['God is love'] text_clf = Pipeline([('vect',CountVectorizer()), ('tfidf',TfidfTransformer()), ('clf',SGDClassifier(loss='hinge',penalty='l2',alpha=1e-3,random_state=42,max_iter=5,tol=None))]) #\u5b57\u5178\u91cc\u7684\u952e\u7531\u201c\u540d\u79f0__\u53c2\u6570\u201d\u5f62\u5f0f\u6784\u6210\uff0c\u6ce8\u610f\u662f\u4e24\u4e2a\u4e0b\u5212\u7ebf parameters = {'vect__ngram_range':[(1,1),(1,2)], 'tfidf__use_idf':(True,False), 'clf__alpha':(1e-2,1e-3)} #\u5982\u679c\u6211\u4eec\u6709\u591a\u4e2acpu\uff0c\u8bbe\u7f6en_jobs\u53c2\u6570\u8fdb\u884c\u5e76\u884c\u5904\u7406\u3002n_jobs=-1,\u4f7f\u7528\u6240\u6709\u7684cpu\u6838\u5fc3 gs_clf = GridSearchCV(text_clf,parameters,n_jobs=-1) # \u4e3a\u8282\u7701\u65f6\u95f4\u9009\u62e9\u8bad\u7ec3\u96c6\u4e2d\u4e00\u90e8\u5206\u8fdb\u884c\u7f51\u683c\u641c\u7d22 gs_clf = gs_clf.fit(twenty_train.data[:400],twenty_train.target[:400]) #\u5bf9\u53e5\u5b50\u2018God is love\u2019\u8fdb\u884c\u5206\u7c7b print(twenty_train.target_names[gs_clf.predict(['God is love'])[0]]) soc.religion.christian \u8be5\u5bf9\u8c61\u7684 best_score_ \u548c best_params_ \u5c5e\u6027\u5b58\u653e\u4e86 \u6700\u4f73\u7684\u5e73\u5747\u5206\u4ee5\u53ca\u5176\u6240\u5bf9\u5e94\u7684\u53c2\u6570\u914d\u7f6e : print(gs_clf.best_score_) for param_name in sorted(parameters.keys()): print(f'{param_name}:{gs_clf.best_params_[param_name]}') 0.9175000000000001 clf__alpha:0.001 tfidf__use_idf:True vect__ngram_range:(1, 1) https://www.sklearncn.cn/59/#_3 \u6587\u672c\u4fe1\u606f","title":"\u6587\u672c\u6570\u636e\u5904\u7406"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_1","text":"\u8fd9\u91cc\u4f7f\u7528sklearn.datasets\u4e2d\u7684fetch_20newsgroups\u6570\u636e\u96c6\uff0820\u4e2a\u65b0\u95fb\u7ec4\u96c6\u5408\uff09\uff0c\u8be5\u6570\u636e\u96c6\u5e38\u5e38\u5e94\u7528\u5728 \u6587\u672c\u5206\u7c7b\u548c\u6587\u672c\u805a\u7c7b\u7b49 \u6587\u672c\u5e94\u7528\u7684\u8bd5\u9a8c\u4e2d\u3002 \u6570\u636e\u4f7f\u7528\u65b9\u6cd5 \uff1a fetch_20newsgroups().data:\u7279\u5f81\u6570\u636e\u6570\u7ec4\uff0c\u7528\u6765\u67e5\u770b\u6587\u672c\u5177\u4f53\u5185\u5bb9 fetch_20newsgroups().filenames:\u67e5\u770b\u6587\u4ef6\u4f4d\u7f6e\u4fe1\u606f fetch_20newsgroups().target_names:\u67e5\u770b\u6570\u636e\u96c6\u540d\u79f0\uff0c\u517120\u4e2a fetch_20newsgroups().target:\u67e5\u770b\u6240\u5c5eCategories(\u79cd\u7c7b)\u7684 \u7d22\u5f15 ,\u5bf9\u5e94\u4f4d\u7f6e\u7684target_names\u5c31\u662f\u79cd\u7c7b\u540d\u79f0 fetch_20newsgroups().DESCR:\u67e5\u770b\u63cf\u8ff0\u4fe1\u606f \u4ece20\u4e2a\u7c7b\u522b\u6570\u636e\u96c6\u4e2d\u9009\u51fa4\u4e2a\u8fdb\u884c\u8bad\u7ec3\uff1a from sklearn.datasets import fetch_20newsgroups categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] #subset:\u52a0\u8f7d\u54ea\u4e00\u90e8\u5206\u6570\u636e\u96c6train/test;categoties:\u9009\u53d6\u54ea\u4e00\u7c7b\u6570\u636e\u96c6\uff1bshuffle:\u5c06\u6570\u636e\u968f\u673a\u6392\u5e8f twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) # print(len(twenty_train.data)) # print(len(twenty_train.filenames)) #\u6253\u5370\u7b2c\u4e00\u4e2a\u6587\u4ef6\u7684\u524d\u51e0\u884c\uff0c\u5e76\u67e5\u770b\u8be5\u6587\u6863\u6240\u5c5e\u79cd\u7c7b\u540d\u79f0 print('\\n'.join(twenty_train.data[0].split('\\n')[:3])) print(twenty_train.target_names[twenty_train.target[0]]) From: sd345@city.ac.uk (Michael Collier) Subject: Converting images to HP LaserJet III? Nntp-Posting-Host: hampton comp.graphics","title":"\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u4ee5\u53ca\u6240\u5c5e\u7c7b\u522b"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#countvectorizer","text":"CountVectorizer\u53ef\u4ee5\u5c06\u6587\u672c\u5185\u5bb9\u8f6c\u5316\u4e3a\u6570\u503c\u5f62\u5f0f\u7684\u7279\u5f81\u5411\u91cf","title":"\u7279\u5f81\u63d0\u53d6CountVectorizer"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_2","text":"1\u3001\u7ed9\u5168\u90e8\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u6bcf\u4e00\u4e2a\u5355\u8bcd\uff08\u4e0d\u91cd\u590d\u7684\uff09\u5206\u914d\u4e00\u4e2a\u7279\u5b9a\u7684\u6574\u6570id\uff0c\u4f8b\u5982\u4ee5\u5355\u8bcd\u540d\u79f0\u4e3a\u952e\uff0c\u5c06\u6309\u5355\u8bcd\u9996\u5b57\u6bcd\u987a\u5e8f\u8fdb\u884c\u6392\u5217\u7684\u7d22\u5f15\u503c\u4f5c\u4e3a\u503c\uff0c \u7ec4\u6210\u4e00\u4e2a\u5355\u8bcd\u5230\u6574\u6570\u7d22\u5f15\u7684\u5b57\u5178\u3002 2\u3001\u5bf9\u6bcf\u4e2a\u6587\u6863(\u7d22\u5f15\u4e3ai),\u8ba1\u7b97\u6bcf\u4e2a\u5355\u8bcdw\u7684 \u51fa\u73b0\u6b21\u6570 \uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728X[i,j]\u4e2d\u4f5c\u4e3a\u7279\u5f81#j\u7684\u503c\uff0c\u5176\u4e2dj\u662f\u5b57\u5178\u4e2d\u5355\u8bcdw\u7684\u7d22\u5f15\u3002 from sklearn.feature_extraction.text import CountVectorizer X_test = ['you are good','but you do not fit'] vectorizer = CountVectorizer() counts = vectorizer.fit_transform(X_test) print(counts) print(vectorizer.get_feature_names_out()) #\u6587\u672c\u4e2d\u5305\u542b\u7684\u5168\u90e8\u5355\u8bcd\uff0c\u6309\u9996\u5b57\u6bcd\u987a\u5e8f\u8fdb\u884c\u6392\u5217 print(vectorizer.vocabulary_) #\u4e3a\u6587\u6863\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u5b9a\u4e49\u4e00\u4e2a\u6574\u6570id\uff0c\u5efa\u7acb\u4ece\u5355\u8bcd\u5230\u6574\u6570\u7d22\u5f15\u7684\u5b57\u5178 print(counts.toarray()) #\u8bcd\u9891\u77e9\u9635\uff0c\u5c31\u662f\u4e0a\u8fb9\u8bf4\u7684X[i,j] print(counts.shape) #\u76f8\u5f53\u4e8e\u8bcd\u9891\u77e9\u9635\u5927\u5c0f (0, 6) 1 (0, 0) 1 (0, 4) 1 (1, 6) 1 (1, 1) 1 (1, 2) 1 (1, 5) 1 (1, 3) 1 ['are' 'but' 'do' 'fit' 'good' 'not' 'you'] {'you': 6, 'are': 0, 'good': 4, 'but': 1, 'do': 2, 'not': 5, 'fit': 3} [[1 0 0 0 1 0 1] [0 1 1 1 0 1 1]] (2,7) \u6700\u540e\u8bcd\u9891\u77e9\u9635\u7684\u8bf4\u660e\uff1a \u8bcd\u6c47\u987a\u5e8f are but do fit good not you \u7b2c\u4e00\u4e2a\u53e5\u5b50\u4e2d\u51fa\u73b0\u9891\u6570 1 0 0 0 1 0 1 \u7b2c\u4e8c\u4e2a\u53e5\u5b50\u4e2d\u51fa\u73b0\u9891\u6570 0 1 1 1 0 1 1","title":"\u8bcd\u888b"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_3","text":"\u5982\u679c\u53ea\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u4e48\u957f\u7684\u6587\u672c\u76f8\u5bf9\u4e8e\u77ed\u7684\u6587\u672c\u603b\u6709\u66f4\u9ad8\u7684\u51fa\u73b0\u6b21\u6570\u3002\u4e3a\u907f\u514d\u4e0d\u540c\u6587\u672c\u95f4\u6f5c\u5728\u7684\u5dee\u5f02\uff0c\u5c06\u6bcf\u4e2a\u6587\u6863\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u9664\u4ee5\u8be5\u6587\u6863\u4e2d\u6240\u6709\u7684\u5355\u8bcd\u603b\u6570\u3002\u8fd9\u4e9b\u65b0\u7279\u5f81\u79f0\u4e4b\u4e3a\u8bcd\u9891 tf (Term Frequencies)\u3002 \u53e6\u4e00\u4e2a \u5728\u8bcd\u9891\u7684\u57fa\u7840\u4e0a\u6539\u826f \u662f\uff0c\u964d\u4f4e\u5728\u8be5\u8bad\u7ec3\u6587\u96c6\u4e2d\u7684\u5f88\u591a\u6587\u6863\u4e2d\u5747\u51fa\u73b0\u7684\u5355\u8bcd\u7684\u6743\u91cd\uff0c\u4ece\u800c\u7a81\u51fa\u90a3\u4e9b\u4ec5\u5728\u8be5\u8bad\u7ec3\u6587\u96c6\u4e2d\u5728\u4e00\u5c0f\u90e8\u5206\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u7684\u4fe1\u606f\u91cf\u3002\u8fd9\u79cd\u65b9\u6cd5\u79f0\u4e3a tf-idf (Term Frequency times Inverse Document Frequency\uff0c\u8bcd\u9891-\u9006\u6587\u6863\u9891\u7387)\u3002 from sklearn.feature_extraction.text import CountVectorizer from sklearn.feature_extraction.text import TfidfTransformer X_test = ['you are good','but you do not fit'] vectorizer = CountVectorizer() counts = vectorizer.fit_transform(X_test) tfidf_transformer = TfidfTransformer() X_test_tfidf = tfidf_transformer.fit_transform(counts) print(X_test_tfidf) #\u8fd4\u56detf-idf\u9006\u6587\u6863\u9891\u7387 # print(X_test_tfidf.toarray()) \u8fd4\u56de\u77e9\u9635\u5f62\u5f0f (0, 6) 0.4494364165239821 (0, 4) 0.6316672017376245 (0, 0) 0.6316672017376245 (1, 6) 0.33517574332792605 (1, 5) 0.47107781233161794 (1, 3) 0.47107781233161794 (1, 2) 0.47107781233161794 (1, 1) 0.47107781233161794","title":"\u4ece\u51fa\u73b0\u6b21\u6570\u5230\u51fa\u73b0\u9891\u7387"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_4","text":"\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u5668\u6765\u9884\u6d4b\u4e00\u4e2a\u5e16\u5b50\u6240\u5c5e\u7684\u7c7b\u522b,\u6700\u597d\u4f7f\u7528 MultinomialNB\u591a\u9879\u5f0f\u6734\u7d20\u8d1d\u53f6\u65af from sklearn.feature_extraction.text import TfidfTransformer from sklearn.naive_bayes import MultinomialNB categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) count_vect = CountVectorizer() X_train_counts = count_vect.fit_transform(twenty_train.data) tfidf_transformer = TfidfTransformer() X_train_tfidf = tfidf_transformer.fit_transform(X_train_counts) clf = MultinomialNB().fit(X_train_tfidf,twenty_train.target) docs_new = ['God is love', 'OpenGL on the GPU is fast'] #\u62bd\u53d6\u7279\u5f81\uff0c\u8c03\u7528transform\u800c\u4e0d\u662ffit_transform\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7279\u5f81\u5df2\u7ecf\u5728\u8bad\u7ec3\u96c6\u62df\u5408\u4e86 X_new_counts = count_vect.transform(docs_new) print(X_new_counts) X_new_tfidf = tfidf_transformer.transform(X_new_counts) predicted = clf.predict(X_new_tfidf) #\u8fd4\u56de\u9884\u6d4b\u7c7b\u522b\u7684\u7d22\u5f15 for doc,category in zip(docs_new,predicted): print(f'{doc}=>{twenty_train.target_names[category]}') (0, 15521) 1 (0, 18474) 1 (0, 20537) 1 (1, 14048) 1 (1, 15628) 1 (1, 18474) 1 (1, 23733) 1 (1, 23790) 1 (1, 32142) 1 God is love=>soc.religion.christian OpenGL on the GPU is fast=>comp.graphics","title":"\u8bad\u7ec3\u6587\u672c\u5206\u7c7b\u5668"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#pipeline","text":"sklearn\u63d0\u4f9b\u4e86\u4e00\u4e2aPipeline\u7c7b\uff0c\u4f7f \u5411\u91cf\u5316(vectorizer)=>\u8f6c\u6362\u5668(transformer)=>\u5206\u7c7b\u5668(classifier) \u8fc7\u7a0b\u66f4\u52a0\u7b80\u5355\u3002\u4f7f\u7528Pipeline\u7c7b\uff0c\u64cd\u4f5c\u8d77\u6765\u50cf\u4e00\u4e2a\u590d\u5408\u5206\u7c7b\u5668\uff0c \u8f93\u5165\u53ef\u4ee5\u76f4\u63a5\u662f\u65b0\u6587\u6863 \uff0c\u800c\u4e0d\u9700\u8981\u518d\u8fdb\u884c\u7279\u5f81\u63d0\u53d6\u3002 from sklearn.datasets import fetch_20newsgroups from sklearn.feature_extraction.text import CountVectorizer from sklearn.feature_extraction.text import TfidfTransformer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) docs_new = ['God is love', 'OpenGL on the GPU is fast'] # \u4e0b\u8ff0\u540d\u79f0'vect','tfidf','clf'\u90fd\u662f\u4efb\u610f\u7684\u3002 text_clf = Pipeline([('vect',CountVectorizer()),('tfidf',TfidfTransformer()),('clf',MultinomialNB())]) text_clf.fit(twenty_train.data,twenty_train.target) predicted = text_clf.predict(docs_new) #[3,1] for doc,category in zip(docs_new,predicted): print(f'{doc}=>{twenty_train.target_names[category]}') God is love=>soc.religion.christian OpenGL on the GPU is fast=>comp.graphics","title":"\u6784\u5efaPipeline(\u7ba1\u9053)"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#_5","text":"","title":"\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6027\u80fd\u8bc4\u4f30"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#1","text":"from sklearn.datasets import fetch_20newsgroups from sklearn.feature_extraction.text import CountVectorizer from sklearn.feature_extraction.text import TfidfTransformer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import Pipeline import numpy as np categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) twenty_test = fetch_20newsgroups(subset='test',categories=categories,shuffle=True,random_state=42) docs_test = twenty_test.data text_clf = Pipeline([('vect',CountVectorizer()),('tfidf',TfidfTransformer()),('clf',MultinomialNB())]) text_clf.fit(twenty_train.data,twenty_train.target) predicted = text_clf.predict(docs_test) print(np.mean(predicted==twenty_test.target)) 0.8348868175765646","title":"1\u3001\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff0c\u5728\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u6027\u80fd\u8bc4\u4f30"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#2svm","text":"\u8bad\u7ec3\u901f\u5ea6\u6bd4\u6734\u7d20\u8d1d\u53f6\u65af\u6162\u4e00\u70b9\uff0c\u516c\u8ba4\u7684\u6700\u597d\u7684\u6587\u672c\u5206\u7c7b\u5668\u7b97\u6cd5\u4e4b\u4e00\u3002\u53ea\u9700\u8981\u5728Pipeline\u7c7b\u4e2d\u63d2\u63a5\u5165\u4e0d\u540c\u7684\u5206\u7c7b\u5668\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u5206\u7c7b\u5668\u6a21\u578b\u3002 SGDClassifier\u4e2dloss\u53c2\u6570\u9ed8\u8ba4\u4e3a'hinge',\u5373\u5408\u9875\u635f\u5931\u51fd\u6570\uff0c\u8868\u793a\u7ebf\u6027SVM\u6a21\u578b\u3002 SDGClassifier\u6839\u636e\u53c2\u6570\u5b9e\u73b0\u4e0d\u540c\u5206\u7c7b\u5668\u6a21\u578b # \u53ea\u9700\u8981\u6539\u53d8Pipeline\u7c7b\u4e2d\u7684\u5206\u7c7b\u5668\uff0c\u5176\u5b83\u548c\u4e0a\u8ff0\u8d1d\u53f6\u65af\u5206\u7c7b\u4ee3\u7801\u76f8\u540c from sklearn.linear_model import SGDClassifier # ... text_clf = Pipeline([('vect',CountVectorizer()), ('tfidf',TfidfTransformer()), ('clf',SGDClassifier(loss='hinge',penalty='l2',alpha=1e-3,random_state=42,max_iter=5,tol=None))]) # ... print(np.mean(predicted==twenty_test.target)) 0.9101198402130493","title":"2\u3001\u7ebf\u6027\u5206\u7c7b\u5668\u6a21\u578b\u652f\u6301\u5411\u91cf\u673a(SVM)"},{"location":"sklearn%E6%A8%A1%E5%9D%97/%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/#gridsearchcv","text":"CountVectorizer\u4e2d\u6709ngram_range\u53c2\u6570\uff0c\u5373\u8bcd\u7ec4\u5207\u5206\u7684\u957f\u5ea6\u8303\u56f4\u3002 \u53c2\u6570\u8be6\u89e3 TfidfTransformer\u4e2d\u6709use_idf\u53c2\u6570\uff0c\u9ed8\u8ba4True\uff0c\u5373\u662f\u5426\u5728\u8bcd\u9891\uff08tf\uff09\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6539\u826f\u3002 \u5206\u7c7b\u5668MultinomialNB\u5305\u542b\u4e86\u5e73\u6ed1\u53c2\u6570alpha\uff0c\u4ee5\u53caSGDClassifier\u6709\u60e9\u7f5a\u53c2\u6570alpha\u548c\u76ee\u6807\u51fd\u6570\u4e2d\u7684\u53ef\u8bbe\u7f6e\u7684\u635f\u5931\u4ee5\u53ca\u60e9\u7f5a\u56e0\u5b50\u3002 from sklearn.datasets import fetch_20newsgroups from sklearn.feature_extraction.text import CountVectorizer from sklearn.feature_extraction.text import TfidfTransformer from sklearn.linear_model import SGDClassifier from sklearn.pipeline import Pipeline from sklearn.model_selection import GridSearchCV import numpy as np categories = ['alt.atheism', 'comp.graphics', 'sci.med', 'soc.religion.christian'] twenty_train = fetch_20newsgroups(subset='train',categories=categories,shuffle=True,random_state=42) docs_test = ['God is love'] text_clf = Pipeline([('vect',CountVectorizer()), ('tfidf',TfidfTransformer()), ('clf',SGDClassifier(loss='hinge',penalty='l2',alpha=1e-3,random_state=42,max_iter=5,tol=None))]) #\u5b57\u5178\u91cc\u7684\u952e\u7531\u201c\u540d\u79f0__\u53c2\u6570\u201d\u5f62\u5f0f\u6784\u6210\uff0c\u6ce8\u610f\u662f\u4e24\u4e2a\u4e0b\u5212\u7ebf parameters = {'vect__ngram_range':[(1,1),(1,2)], 'tfidf__use_idf':(True,False), 'clf__alpha':(1e-2,1e-3)} #\u5982\u679c\u6211\u4eec\u6709\u591a\u4e2acpu\uff0c\u8bbe\u7f6en_jobs\u53c2\u6570\u8fdb\u884c\u5e76\u884c\u5904\u7406\u3002n_jobs=-1,\u4f7f\u7528\u6240\u6709\u7684cpu\u6838\u5fc3 gs_clf = GridSearchCV(text_clf,parameters,n_jobs=-1) # \u4e3a\u8282\u7701\u65f6\u95f4\u9009\u62e9\u8bad\u7ec3\u96c6\u4e2d\u4e00\u90e8\u5206\u8fdb\u884c\u7f51\u683c\u641c\u7d22 gs_clf = gs_clf.fit(twenty_train.data[:400],twenty_train.target[:400]) #\u5bf9\u53e5\u5b50\u2018God is love\u2019\u8fdb\u884c\u5206\u7c7b print(twenty_train.target_names[gs_clf.predict(['God is love'])[0]]) soc.religion.christian \u8be5\u5bf9\u8c61\u7684 best_score_ \u548c best_params_ \u5c5e\u6027\u5b58\u653e\u4e86 \u6700\u4f73\u7684\u5e73\u5747\u5206\u4ee5\u53ca\u5176\u6240\u5bf9\u5e94\u7684\u53c2\u6570\u914d\u7f6e : print(gs_clf.best_score_) for param_name in sorted(parameters.keys()): print(f'{param_name}:{gs_clf.best_params_[param_name]}') 0.9175000000000001 clf__alpha:0.001 tfidf__use_idf:True vect__ngram_range:(1, 1) https://www.sklearncn.cn/59/#_3 \u6587\u672c\u4fe1\u606f","title":"\u4f7f\u7528\u7f51\u683c\u641c\u7d20GridSearchCV\u8c03\u53c2"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%89%8D%E8%A8%80/","text":"\u5e38\u89c1\u7684\u6a21\u578b\u5206\u7c7b \u4e00\u3001\u4f18\u5316\u6a21\u578b \u4f18\u5316\u9898\u578b\u4e09\u8981\u7d20: \u51b3\u7b56\u53d8\u91cf\u3001\u76ee\u6807\u51fd\u6570\u3001\u7ea6\u675f\u6761\u4ef6\u3002 \u5e94\u7528\u573a\u666f: \u5feb\u9012\u5458\u6d3e\u9001\u5feb\u9012\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\u3001\u6c34\u8d44\u6e90\u8c03\u5ea6\u4f18\u5316\u95ee\u9898\u3001\u9ad8\u901f\u8def\u53e3\u6536\u8d39\u7ad9\u95ee\u9898\u3001\u519b\u4e8b\u884c\u52a8\u907f\u7a7a\u4fa6\u5bdf\u65f6\u673a\u548c\u8def\u7ebf\u9009\u62e9\u3001\u7269\u6d41\u9009\u5740\u95ee\u9898\u3001\u5546\u533a\u5206\u5e03\u89c4\u5212\u7b49\u5404\u4e2a\u9886\u57df\u3002 \u4e8c\u3001\u8bc4\u4ef7\u6a21\u578b \u5e94\u7528\u573a\u666f: \u56fd\u8d5b\u957f\u6c5f\u6c34\u8d28\u7684\u7efc\u5408\u8bc4\u4ef7\u3001\u4e0a\u6d77\u4e16\u535a\u4f1a\u5f71\u54cd\u529b\u7684\u5b9a\u91cf\u8bc4\u4f30\u95ee\u9898\u3001\u7f8e\u8d5b\u6700\u597d\u5927\u5b66\u751f\u95ee\u9898\u3002 \u4e09\u3001\u9884\u6d4b\u6a21\u578b \u5e94\u7528\u573a\u666f: \u957f\u6c5f\u6c34\u8d44\u6e90\u9884\u6d4b\u95ee\u9898\u3001\u4eba\u53e3\u9884\u6d4b\u95ee\u9898\u3001\u75c5\u6bd2\u8513\u5ef6\u9884\u6d4b\u95ee\u9898\u3001\u836f\u7269\u5728\u4f53\u5185\u7684\u5206\u5e03\u4e0e\u6392\u9664\u9884\u6d4b\u6a21\u578b\u3001\u70df\u96fe\u7684\u6269\u6563\u4e0e\u6d88\u5931\u6a21\u578b\u3001\u9500\u552e\u9884\u6d4b\u3001\u7ecf\u6d4e\u53d1\u5c55\u60c5\u51b5\u9884\u6d4b\u3002 \u56db\u3001\u7edf\u8ba1\u6a21\u578b \u7b80\u4ecb: \u673a\u7406\u5206\u6790\u7684\u65b9\u6cd5\uff0c\u5e38\u5e38\u9002\u7528\u4e8e\u4eba\u4eec\u5bf9\u7814\u7a76\u5bf9\u8c61\u7684\u5185\u5728\u7279\u5f81\u548c\u5404\u56e0\u7d20\u95f4\u7684\u5173\u7cfb\u6709\u5145\u5206\u7684\u8ba4\u8bc6\uff0c\u4f46\u7531\u4e8e\u5ba2\u89c2\u4e8b\u7269\u5185\u90e8\u89c4\u5f8b\u7684\u590d\u6742\u6027\u4ee5\u53ca\u4eba\u4eec\u8ba4\u8bc6\u7a0b\u5ea6\u7684\u9650\u5236\uff0c\u65e0\u6cd5\u5206\u6790\u5b9e\u9645\u5bf9\u8c61\u5185\u5728\u7684\u56e0\u679c\u5173\u7cfb\u5efa\u7acb\u5408\u4e4e\u673a\u7406\u89c4\u5f8b\u7684\u6570\u5b66\u6a21\u578b\u3002\u8fd9\u65f6\u5c31\u9700\u8981\u641c\u96c6\u5927\u91cf\u7684\u6570\u636e\uff0c\u57fa\u4e8e\u5bf9\u6570\u636e\u7684\u7edf\u8ba1\u5206\u6790\u5efa\u7acb\u6a21\u578b\u3002 \u5e94\u7528\u573a\u666f: \u9ad8\u7b49\u6559\u80b2\u5b66\u8d39\u6807\u51c6\u7684\u63a2\u8ba8\u3001\u65bd\u80a5\u65b9\u6848\u5bf9\u4f5c\u7269\u7684\u5f71\u54cd\u3001\u516c\u53f8\u4e1a\u52a1\u6570\u636e\u5206\u6790\u7b49\u95ee\u9898\u3002 https://www.zhihu.com/question/59626072?ivk_sa=1024320u","title":"\u524d\u8a00"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B/%E5%A4%9A%E7%9B%AE%E6%A0%87%E8%A7%84%E5%88%92/","text":"\u591a\u76ee\u6807\u89c4\u5212 \u591a\u76ee\u6807\u89c4\u5212\u5c31\u662f\u591a\u4e2a\u76ee\u6807\u51fd\u6570\u5728\u7ed9\u5b9a\u533a\u57df\u4e0a\u7684\u6700\u4f18\u5316\u3002\u53c8\u79f0\u591a\u76ee\u6807\u6700\u4f18\u5316\u3002\u6211\u4eec\u9700\u8981\u8861\u91cf\u51fa\u5c3d\u91cf\u6ee1\u8db3\u6240\u6709\u9700\u6c42\u800c\u5f97\u51fa\u4f7f\u5f97\u76ee\u6807\u6700\u4f18\uff08\u5982\u6536\u76ca\u6700\u5927\uff09\u7684\u65b9\u6848\u3002 \u4e00\u822c\u90fd\u662f\u7528LINGO\u6c42\u89e3\u4f18\u5316\u95ee\u9898\u3002 \u65b9\u6cd5\u4e00\uff0c\u7ebf\u6027\u52a0\u6743\u6cd5\uff1a \u8be5\u65b9\u6cd5\u5e94\u7528\u7684\u5173\u952e\u662f\u8981\u786e\u5b9a\u6bcf\u4e2a\u76ee\u6807\u7684\u6743\u91cd\uff0c\u5b83\u53cd\u6620\u4e0d\u540c\u76ee\u6807\u5728\u51b3\u7b56\u8005\u5fc3\u4e2d\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u91cd\u8981\u7a0b\u5ea6\u9ad8\u7684\u6743\u91cd\u5c31\u5927\uff0c\u91cd\u8981\u7a0b\u5ea6\u4f4e\u7684\u6743\u91cd\u5c31\u5c0f\u3002\u6743\u91cd\u7684\u786e\u5b9a\u4e00\u822c\u7531\u51b3\u7b56\u8005\u7ed9\u51fa\uff0c\u56e0\u800c\u5177\u6709\u8f83\u5927\u7684\u4e3b\u89c2\u6027\uff0c\u4e0d\u540c\u7684\u51b3\u7b56\u8005\u7ed9\u7684\u6743\u91cd\u53ef\u80fd\u4e0d\u540c\uff0c\u4ece\u800c\u4f1a\u4f7f\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u540c\u3002 \u65b9\u6cd5\u4e8c\uff0c\u7406\u60f3\u70b9\u6cd5\uff1a \u4ee5\u6bcf\u4e2a\u5355\u76ee\u6807\u6700\u4f18\u503c\u4e3a\u8be5\u76ee\u6807\u7684\u7406\u60f3\u503c\uff0c\u4f7f\u6bcf\u4e2a\u76ee\u6807\u51fd\u6570\u503c\u4e0e\u7406\u60f3\u503c\u7684\u5dee\u7684\u52a0\u6743\u5e73\u65b9\u548c\u6700\u5c0f\u3002 \u65b9\u6cd5\u4e09\uff0c\u4f18\u5148\u7ea7\u6cd5\uff1a \u6839\u636e\u76ee\u6807\u91cd\u8981\u6027\u5206\u6210\u4e0d\u540c\u4f18\u5148\u7ea7\uff0c\u5148\u6c42\u4f18\u5148\u7ea7\u9ad8\u7684\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c\uff0c\u5728\u786e\u4fdd\u4f18\u5148\u7ea7\u9ad8\u7684\u76ee\u6807\u83b7\u5f97\u4e0d\u4f4e\u4e8e\u6700\u4f18\u503c\u7684\u6761\u4ef6\u4e0b\uff0c\u518d\u6c42\u4f18\u5148\u7ea7\u4f4e\u7684\u76ee\u6807\u51fd\u6570\u3002\u8be5\u65b9\u6cd5\u9002\u7528\u4e8e\u76ee\u6807\u6709\u660e\u663e\u8f7b\u91cd\u4e4b\u5206\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5404\u76ee\u6807\u7684\u91cd\u8981\u6027\u5dee\u8ddd\u6bd4\u8f83\u5927\uff0c\u9996\u5148\u786e\u4fdd\u6700\u91cd\u8981\u7684\u76ee\u6807\uff0c\u7136\u540e\u518d\u8003\u8651\u5176\u4ed6\u76ee\u6807\u3002\u5728\u540c\u4e00\u7b49\u7ea7\u7684\u76ee\u6807\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\uff0c\u8fd9\u4e9b\u76ee\u6807\u7684\u91cd\u8981\u6027\u6ca1\u6709\u660e\u663e\u5dee\u7684\u8ddd\uff0c\u53ef\u4ee5\u7528\u52a0\u6743\u65b9\u6cd5\u6c42\u89e3\u3002 \u5b9e\u4f8b \u67d0\u516c\u53f8\u8003\u8651\u751f\u4ea7\u4e24\u79cd\u5149\u7535\u592a\u9633\u80fd\u7535\u6c60\uff1a\u4ea7\u54c1\u7532\u548c\u4ea7\u54c1\u4e59\u3002\u8fd9\u79cd\u751f\u4ea7\u4f1a\u5f15\u8d77\u7a7a\u6c14\u653e\u5c04\u6027\u6c61\u67d3\u3002\u56e0\u6b64\uff0c\u516c\u53f8\u7ecf\u7406\u6709\u4e24\u4e2a\u76ee\u6807\uff1a\u6781\u5927\u5316\u5229\u6da6\u4e0e\u6781\u5c0f\u5316\u603b\u7684\u653e\u5c04\u6027\u6c61\u67d3\u3002\u5df2\u77e5\u5728\u4e00\u4e2a\u751f\u4ea7\u5468\u671f\u5185\uff0c\u6bcf\u5355\u4f4d\u4ea7\u54c1\u7684\u6536\u76ca\u3001\u653e\u5c04\u6027\u6c61\u67d3\u6392\u653e\u91cf\u3001\u673a\u5668\u80fd\u529b(\u5c0f\u65f6)\u3001\u88c5\u914d\u80fd\u529b\uff08\u4eba\u65f6\uff09\u548c\u53ef\u7528\u7684\u539f\u6750\u6599\uff08\u5355\u4f4d\uff09\u7684\u9650\u5236\u5982\u886816.1\u6240\u793a\u3002\u5047\u8bbe\u5e02\u573a\u9700\u6c42\u65e0\u9650\u5236\uff0c\u4e24\u79cd\u4ea7\u54c1\u7684\u4ea7\u91cf\u548c\u81f3\u5c11\u4e3a10\uff0c\u5219\u516c\u53f8\u8be5\u5982\u4f55\u5b89\u6392\u4e00\u4e2a\u751f\u4ea7\u5468\u671f\u5185\u7684\u751f\u4ea7\u3002 \u5206\u6790\uff1a \u8bbe\u7532\u4e59\u4e24\u79cd\u4ea7\u54c1\u5728\u4e00\u4e2a\u751f\u4ea7\u5468\u671f\u5185\u7684\u4ea7\u91cf\u5206\u522b\u4e3a \\(x_1\\) \u548c \\(x_2\\) ,\u5219\u8be5\u95ee\u9898\u7684\u76ee\u6807\u51fd\u6570\u4e3a\u5229\u6da6\u6781\u5927\u5316\uff1a \\(max:f_1=2x_1+3x_2\\) ,\u5e76\u4e14\u6c61\u67d3\u6781\u5c0f\u5316\uff1a \\(min: f_2=x_1+2x_2\\) \u5f97\uff1a \\[min\\{-f_1(x),f_2(x)\\}\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u65b9\u6cd5\u4e00\u6c42\u89e3\uff1a \u4e24\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6743\u91cd\u90fd\u53d60.5\uff0c\u628a\u4e0a\u8ff0\u591a\u76ee\u6807\u89c4\u5212\u95ee\u9898\u8f6c\u5316\u4e3a\u5982\u4e0b\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff1a \\[min\\quad 0.5(-2x_1-3x_2)+0.5(x_1+2x_2)\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=7,x_2=13,f_1=53,f_2=33\\) \u65b9\u6cd5\u4e8c\u6c42\u89e3\uff1a \u5148\u4f7f\u5229\u6da6\u6700\u5927\u5316 \\[min\\quad -2x_1-3x_2\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=7,x_2=13,f_1=2x_1+3x_2=53\\) \u518d\u4f7f\u6c61\u67d3\u6700\u5c0f\u5316 \\[min\\quad x_1+2x_2\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=10,x_2=0,f_2=x_1+2x_2=10\\) \u6784\u9020\u6bcf\u4e2a\u76ee\u6807\u4e0e\u6700\u4f18\u503c\u7684\u5dee\u7684\u5e73\u65b9\u548c\uff0c\u4f5c\u4e3a\u65b0\u7684\u76ee\u6807\u51fd\u6570\uff0c\u8f6c\u5316\u4e3a\u6c42\u89e3\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\uff1a \\[min\\quad (-2x_1-3x_2+53)^2+(x_1+2x_2-10)^2\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=13.36,x_2=5.28,f_1=42.56,f_2=23.92\\) \u65b9\u6cd5\u4e09\u6c42\u89e3\uff1a \u7531\u7406\u60f3\u70b9\u89e3\u77e5\uff0c\u7b2c\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c\u4e3a-53\u3002\u4ee5\u7b2c\u4e8c\u4e2a\u76ee\u6807\u51fd\u6570\u4f5c\u4e3a\u76ee\u6807\u51fd\u6570\uff0c\u95ee\u9898\u7684\u539f\u59cb\u7ea6\u675f\u6761\u4ef6\u518d\u52a0\u7b2c\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\u7b49\u4e8e\u5176\u6700\u4f18\u503c\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u6784\u9020\u5982\u4e0b\u7684\u7ebf\u6027\u89c4\u5212\u6a21\u578b\uff1a \\[min\\quad x_1+2x_2\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ -2x_1-3x_2=-53\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=7,x_2=13,f_1=53,f_2=33\\) python\u4ee3\u7801 import numpy as np import cvxpy as cp c1 = np.array([-2, -3]) c2 = np.array([1, 2]) a = np.array([[0.5, 0.25], [0.2, 0.2], [1, 5], [-1, -1]]) b = np.array([8, 4, 72, -10]) x = cp.Variable(2, pos=True) # 1.\u7ebf\u6027\u52a0\u6743\u6cd5\u6c42\u89e3 obj = cp.Minimize(0.5*(c1+c2)@x) con = [a@x <= b] prob = cp.Problem(obj, con) prob.solve(solver='GLPK_MI') print('\\n======1.\u7ebf\u6027\u52a0\u6743\u6cd5======\\n') print('\u89e3\u6cd5\u4e00\u7406\u60f3\u89e3\uff1a', x.value) print('\u5229\u6da6\uff1a', -c1@x.value) print('\u6c61\u67d3\u6392\u653e\uff1a', c2@x.value) # 2.\u7406\u60f3\u70b9\u6cd5\u6c42\u89e3 obj1 = cp.Minimize(c1@x) prob1 = cp.Problem(obj1, con) prob1.solve(solver='GLPK_MI') v1 = prob1.value # \u7b2c\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c obj2 = cp.Minimize(c2@x) prob2 = cp.Problem(obj2, con) prob2.solve(solver='GLPK_MI') v2 = prob2.value # \u7b2c\u4e8c\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c print('\\n======2.\u7406\u60f3\u70b9\u6cd5======\\n') print('\u4e24\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c\u5206\u522b\u4e3a\uff1a', v1, v2) obj3 = cp.Minimize((c1@x-v1)**2+(c2@x-v2)**2) prob3 = cp.Problem(obj3, con) prob3.solve(solver='CVXOPT') # GLPK_MI \u89e3\u4e0d\u4e86\u4e8c\u6b21\u89c4\u5212\uff0c\u53ea\u80fd\u7528CVXOPT\u6c42\u89e3\u5668 print('\u89e3\u6cd5\u4e8c\u7684\u7406\u60f3\u89e3\uff1a', x.value) print('\u5229\u6da6\uff1a', -c1@x.value) print('\u6c61\u67d3\u6392\u653e\uff1a', c2@x.value) # 3.\u5e8f\u8d2f\u6cd5\u6c42\u89e3 con.append(c1@x == v1) prob4 = cp.Problem(obj2, con) prob4.solve(solver='GLPK_MI') x3 = x.value # \u63d0\u51fa\u6700\u4f18\u89e3\u7684\u503c print('\\n======3.\u5e8f\u8d2f\u6cd5======\\n') print('\u89e3\u6cd5\u4e09\u7684\u7406\u60f3\u89e3\uff1a', x3) print('\u5229\u6da6\uff1a', -c1@x3) print('\u6c61\u67d3\u6392\u653e\uff1a', c2@x3) \u8f93\u51fa\uff1a ======1.\u7ebf\u6027\u52a0\u6743\u6cd5====== \u89e3\u6cd5\u4e00\u7406\u60f3\u89e3\uff1a [12. 8.] \u5229\u6da6\uff1a 47.99999999999999 \u6c61\u67d3\u6392\u653e\uff1a 27.999999999999993 ======2.\u7406\u60f3\u70b9\u6cd5====== \u4e24\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c\u5206\u522b\u4e3a\uff1a -53.0 10.0 \u89e3\u6cd5\u4e8c\u7684\u7406\u60f3\u89e3\uff1a [13.3598425 5.28031523] \u5229\u6da6\uff1a 42.560630693008314 \u6c61\u67d3\u6392\u653e\uff1a 23.92047296333103 ======3.\u5e8f\u8d2f\u6cd5====== \u89e3\u6cd5\u4e09\u7684\u7406\u60f3\u89e3\uff1a [ 7. 13.] \u5229\u6da6\uff1a 53.0 \u6c61\u67d3\u6392\u653e\uff1a 33.0 Matlab\u4ee3\u7801 python\u7ebf\u6027\u89c4\u5212","title":"\u591a\u76ee\u6807\u89c4\u5212"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B/%E5%A4%9A%E7%9B%AE%E6%A0%87%E8%A7%84%E5%88%92/#_1","text":"\u591a\u76ee\u6807\u89c4\u5212\u5c31\u662f\u591a\u4e2a\u76ee\u6807\u51fd\u6570\u5728\u7ed9\u5b9a\u533a\u57df\u4e0a\u7684\u6700\u4f18\u5316\u3002\u53c8\u79f0\u591a\u76ee\u6807\u6700\u4f18\u5316\u3002\u6211\u4eec\u9700\u8981\u8861\u91cf\u51fa\u5c3d\u91cf\u6ee1\u8db3\u6240\u6709\u9700\u6c42\u800c\u5f97\u51fa\u4f7f\u5f97\u76ee\u6807\u6700\u4f18\uff08\u5982\u6536\u76ca\u6700\u5927\uff09\u7684\u65b9\u6848\u3002 \u4e00\u822c\u90fd\u662f\u7528LINGO\u6c42\u89e3\u4f18\u5316\u95ee\u9898\u3002 \u65b9\u6cd5\u4e00\uff0c\u7ebf\u6027\u52a0\u6743\u6cd5\uff1a \u8be5\u65b9\u6cd5\u5e94\u7528\u7684\u5173\u952e\u662f\u8981\u786e\u5b9a\u6bcf\u4e2a\u76ee\u6807\u7684\u6743\u91cd\uff0c\u5b83\u53cd\u6620\u4e0d\u540c\u76ee\u6807\u5728\u51b3\u7b56\u8005\u5fc3\u4e2d\u7684\u91cd\u8981\u7a0b\u5ea6\uff0c\u91cd\u8981\u7a0b\u5ea6\u9ad8\u7684\u6743\u91cd\u5c31\u5927\uff0c\u91cd\u8981\u7a0b\u5ea6\u4f4e\u7684\u6743\u91cd\u5c31\u5c0f\u3002\u6743\u91cd\u7684\u786e\u5b9a\u4e00\u822c\u7531\u51b3\u7b56\u8005\u7ed9\u51fa\uff0c\u56e0\u800c\u5177\u6709\u8f83\u5927\u7684\u4e3b\u89c2\u6027\uff0c\u4e0d\u540c\u7684\u51b3\u7b56\u8005\u7ed9\u7684\u6743\u91cd\u53ef\u80fd\u4e0d\u540c\uff0c\u4ece\u800c\u4f1a\u4f7f\u8ba1\u7b97\u7684\u7ed3\u679c\u4e0d\u540c\u3002 \u65b9\u6cd5\u4e8c\uff0c\u7406\u60f3\u70b9\u6cd5\uff1a \u4ee5\u6bcf\u4e2a\u5355\u76ee\u6807\u6700\u4f18\u503c\u4e3a\u8be5\u76ee\u6807\u7684\u7406\u60f3\u503c\uff0c\u4f7f\u6bcf\u4e2a\u76ee\u6807\u51fd\u6570\u503c\u4e0e\u7406\u60f3\u503c\u7684\u5dee\u7684\u52a0\u6743\u5e73\u65b9\u548c\u6700\u5c0f\u3002 \u65b9\u6cd5\u4e09\uff0c\u4f18\u5148\u7ea7\u6cd5\uff1a \u6839\u636e\u76ee\u6807\u91cd\u8981\u6027\u5206\u6210\u4e0d\u540c\u4f18\u5148\u7ea7\uff0c\u5148\u6c42\u4f18\u5148\u7ea7\u9ad8\u7684\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c\uff0c\u5728\u786e\u4fdd\u4f18\u5148\u7ea7\u9ad8\u7684\u76ee\u6807\u83b7\u5f97\u4e0d\u4f4e\u4e8e\u6700\u4f18\u503c\u7684\u6761\u4ef6\u4e0b\uff0c\u518d\u6c42\u4f18\u5148\u7ea7\u4f4e\u7684\u76ee\u6807\u51fd\u6570\u3002\u8be5\u65b9\u6cd5\u9002\u7528\u4e8e\u76ee\u6807\u6709\u660e\u663e\u8f7b\u91cd\u4e4b\u5206\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5404\u76ee\u6807\u7684\u91cd\u8981\u6027\u5dee\u8ddd\u6bd4\u8f83\u5927\uff0c\u9996\u5148\u786e\u4fdd\u6700\u91cd\u8981\u7684\u76ee\u6807\uff0c\u7136\u540e\u518d\u8003\u8651\u5176\u4ed6\u76ee\u6807\u3002\u5728\u540c\u4e00\u7b49\u7ea7\u7684\u76ee\u6807\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\uff0c\u8fd9\u4e9b\u76ee\u6807\u7684\u91cd\u8981\u6027\u6ca1\u6709\u660e\u663e\u5dee\u7684\u8ddd\uff0c\u53ef\u4ee5\u7528\u52a0\u6743\u65b9\u6cd5\u6c42\u89e3\u3002","title":"\u591a\u76ee\u6807\u89c4\u5212"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B/%E5%A4%9A%E7%9B%AE%E6%A0%87%E8%A7%84%E5%88%92/#_2","text":"\u67d0\u516c\u53f8\u8003\u8651\u751f\u4ea7\u4e24\u79cd\u5149\u7535\u592a\u9633\u80fd\u7535\u6c60\uff1a\u4ea7\u54c1\u7532\u548c\u4ea7\u54c1\u4e59\u3002\u8fd9\u79cd\u751f\u4ea7\u4f1a\u5f15\u8d77\u7a7a\u6c14\u653e\u5c04\u6027\u6c61\u67d3\u3002\u56e0\u6b64\uff0c\u516c\u53f8\u7ecf\u7406\u6709\u4e24\u4e2a\u76ee\u6807\uff1a\u6781\u5927\u5316\u5229\u6da6\u4e0e\u6781\u5c0f\u5316\u603b\u7684\u653e\u5c04\u6027\u6c61\u67d3\u3002\u5df2\u77e5\u5728\u4e00\u4e2a\u751f\u4ea7\u5468\u671f\u5185\uff0c\u6bcf\u5355\u4f4d\u4ea7\u54c1\u7684\u6536\u76ca\u3001\u653e\u5c04\u6027\u6c61\u67d3\u6392\u653e\u91cf\u3001\u673a\u5668\u80fd\u529b(\u5c0f\u65f6)\u3001\u88c5\u914d\u80fd\u529b\uff08\u4eba\u65f6\uff09\u548c\u53ef\u7528\u7684\u539f\u6750\u6599\uff08\u5355\u4f4d\uff09\u7684\u9650\u5236\u5982\u886816.1\u6240\u793a\u3002\u5047\u8bbe\u5e02\u573a\u9700\u6c42\u65e0\u9650\u5236\uff0c\u4e24\u79cd\u4ea7\u54c1\u7684\u4ea7\u91cf\u548c\u81f3\u5c11\u4e3a10\uff0c\u5219\u516c\u53f8\u8be5\u5982\u4f55\u5b89\u6392\u4e00\u4e2a\u751f\u4ea7\u5468\u671f\u5185\u7684\u751f\u4ea7\u3002 \u5206\u6790\uff1a \u8bbe\u7532\u4e59\u4e24\u79cd\u4ea7\u54c1\u5728\u4e00\u4e2a\u751f\u4ea7\u5468\u671f\u5185\u7684\u4ea7\u91cf\u5206\u522b\u4e3a \\(x_1\\) \u548c \\(x_2\\) ,\u5219\u8be5\u95ee\u9898\u7684\u76ee\u6807\u51fd\u6570\u4e3a\u5229\u6da6\u6781\u5927\u5316\uff1a \\(max:f_1=2x_1+3x_2\\) ,\u5e76\u4e14\u6c61\u67d3\u6781\u5c0f\u5316\uff1a \\(min: f_2=x_1+2x_2\\) \u5f97\uff1a \\[min\\{-f_1(x),f_2(x)\\}\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u65b9\u6cd5\u4e00\u6c42\u89e3\uff1a \u4e24\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6743\u91cd\u90fd\u53d60.5\uff0c\u628a\u4e0a\u8ff0\u591a\u76ee\u6807\u89c4\u5212\u95ee\u9898\u8f6c\u5316\u4e3a\u5982\u4e0b\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff1a \\[min\\quad 0.5(-2x_1-3x_2)+0.5(x_1+2x_2)\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=7,x_2=13,f_1=53,f_2=33\\) \u65b9\u6cd5\u4e8c\u6c42\u89e3\uff1a \u5148\u4f7f\u5229\u6da6\u6700\u5927\u5316 \\[min\\quad -2x_1-3x_2\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=7,x_2=13,f_1=2x_1+3x_2=53\\) \u518d\u4f7f\u6c61\u67d3\u6700\u5c0f\u5316 \\[min\\quad x_1+2x_2\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=10,x_2=0,f_2=x_1+2x_2=10\\) \u6784\u9020\u6bcf\u4e2a\u76ee\u6807\u4e0e\u6700\u4f18\u503c\u7684\u5dee\u7684\u5e73\u65b9\u548c\uff0c\u4f5c\u4e3a\u65b0\u7684\u76ee\u6807\u51fd\u6570\uff0c\u8f6c\u5316\u4e3a\u6c42\u89e3\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\uff1a \\[min\\quad (-2x_1-3x_2+53)^2+(x_1+2x_2-10)^2\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=13.36,x_2=5.28,f_1=42.56,f_2=23.92\\) \u65b9\u6cd5\u4e09\u6c42\u89e3\uff1a \u7531\u7406\u60f3\u70b9\u89e3\u77e5\uff0c\u7b2c\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c\u4e3a-53\u3002\u4ee5\u7b2c\u4e8c\u4e2a\u76ee\u6807\u51fd\u6570\u4f5c\u4e3a\u76ee\u6807\u51fd\u6570\uff0c\u95ee\u9898\u7684\u539f\u59cb\u7ea6\u675f\u6761\u4ef6\u518d\u52a0\u7b2c\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\u7b49\u4e8e\u5176\u6700\u4f18\u503c\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u6784\u9020\u5982\u4e0b\u7684\u7ebf\u6027\u89c4\u5212\u6a21\u578b\uff1a \\[min\\quad x_1+2x_2\\] \\[ s.t. = \\begin{cases} 0.5x_1+0.25x_2\\leqslant 8 \\\\ 0.2x_1+0.2x_2\\leqslant 4\\\\ x_1+5x_2\\leqslant 72\\\\ x_1+x_2\\geqslant 10\\\\ -2x_1-3x_2=-53\\\\ x_1,x_2\\geqslant 0\\\\ \\end{cases} \\] \u7ed3\u679c\uff1a \\(x_1=7,x_2=13,f_1=53,f_2=33\\)","title":"\u5b9e\u4f8b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B/%E5%A4%9A%E7%9B%AE%E6%A0%87%E8%A7%84%E5%88%92/#python","text":"import numpy as np import cvxpy as cp c1 = np.array([-2, -3]) c2 = np.array([1, 2]) a = np.array([[0.5, 0.25], [0.2, 0.2], [1, 5], [-1, -1]]) b = np.array([8, 4, 72, -10]) x = cp.Variable(2, pos=True) # 1.\u7ebf\u6027\u52a0\u6743\u6cd5\u6c42\u89e3 obj = cp.Minimize(0.5*(c1+c2)@x) con = [a@x <= b] prob = cp.Problem(obj, con) prob.solve(solver='GLPK_MI') print('\\n======1.\u7ebf\u6027\u52a0\u6743\u6cd5======\\n') print('\u89e3\u6cd5\u4e00\u7406\u60f3\u89e3\uff1a', x.value) print('\u5229\u6da6\uff1a', -c1@x.value) print('\u6c61\u67d3\u6392\u653e\uff1a', c2@x.value) # 2.\u7406\u60f3\u70b9\u6cd5\u6c42\u89e3 obj1 = cp.Minimize(c1@x) prob1 = cp.Problem(obj1, con) prob1.solve(solver='GLPK_MI') v1 = prob1.value # \u7b2c\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c obj2 = cp.Minimize(c2@x) prob2 = cp.Problem(obj2, con) prob2.solve(solver='GLPK_MI') v2 = prob2.value # \u7b2c\u4e8c\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c print('\\n======2.\u7406\u60f3\u70b9\u6cd5======\\n') print('\u4e24\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c\u5206\u522b\u4e3a\uff1a', v1, v2) obj3 = cp.Minimize((c1@x-v1)**2+(c2@x-v2)**2) prob3 = cp.Problem(obj3, con) prob3.solve(solver='CVXOPT') # GLPK_MI \u89e3\u4e0d\u4e86\u4e8c\u6b21\u89c4\u5212\uff0c\u53ea\u80fd\u7528CVXOPT\u6c42\u89e3\u5668 print('\u89e3\u6cd5\u4e8c\u7684\u7406\u60f3\u89e3\uff1a', x.value) print('\u5229\u6da6\uff1a', -c1@x.value) print('\u6c61\u67d3\u6392\u653e\uff1a', c2@x.value) # 3.\u5e8f\u8d2f\u6cd5\u6c42\u89e3 con.append(c1@x == v1) prob4 = cp.Problem(obj2, con) prob4.solve(solver='GLPK_MI') x3 = x.value # \u63d0\u51fa\u6700\u4f18\u89e3\u7684\u503c print('\\n======3.\u5e8f\u8d2f\u6cd5======\\n') print('\u89e3\u6cd5\u4e09\u7684\u7406\u60f3\u89e3\uff1a', x3) print('\u5229\u6da6\uff1a', -c1@x3) print('\u6c61\u67d3\u6392\u653e\uff1a', c2@x3) \u8f93\u51fa\uff1a ======1.\u7ebf\u6027\u52a0\u6743\u6cd5====== \u89e3\u6cd5\u4e00\u7406\u60f3\u89e3\uff1a [12. 8.] \u5229\u6da6\uff1a 47.99999999999999 \u6c61\u67d3\u6392\u653e\uff1a 27.999999999999993 ======2.\u7406\u60f3\u70b9\u6cd5====== \u4e24\u4e2a\u76ee\u6807\u51fd\u6570\u7684\u6700\u4f18\u503c\u5206\u522b\u4e3a\uff1a -53.0 10.0 \u89e3\u6cd5\u4e8c\u7684\u7406\u60f3\u89e3\uff1a [13.3598425 5.28031523] \u5229\u6da6\uff1a 42.560630693008314 \u6c61\u67d3\u6392\u653e\uff1a 23.92047296333103 ======3.\u5e8f\u8d2f\u6cd5====== \u89e3\u6cd5\u4e09\u7684\u7406\u60f3\u89e3\uff1a [ 7. 13.] \u5229\u6da6\uff1a 53.0 \u6c61\u67d3\u6392\u653e\uff1a 33.0 Matlab\u4ee3\u7801 python\u7ebf\u6027\u89c4\u5212","title":"python\u4ee3\u7801"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%BB%9F%E8%AE%A1%E6%A8%A1%E5%9E%8B/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/","text":"K-means\u805a\u7c7b K\u5747\u503c\u805a\u7c7b\uff08k-means\uff09\u662f\u57fa\u4e8e\u6837\u672c\u96c6\u5408\u5212\u5206\u7684\u805a\u7c7b\u7b97\u6cd5\u3002K\u5747\u503c\u805a\u7c7b\u5c06\u6837\u672c\u96c6\u5408\u5212\u5206\u4e3ak\u4e2a\u5b50\u96c6\uff0c\u6784\u6210k\u4e2a\u7c7b\uff0c\u5c06n\u4e2a\u6837\u672c\u5206\u5230k\u4e2a\u7c7b\u4e2d\uff0c\u6bcf\u4e2a\u6837\u672c\u5230\u5176\u6240\u5c5e\u7c7b\u7684\u4e2d\u5fc3\u8ddd\u79bb\u6700\u5c0f\uff0c\u6bcf\u4e2a\u6837\u672c\u4ec5\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u5c31\u662fk\u5747\u503c\u805a\u7c7b\uff0c\u540c\u65f6\u6839\u636e\u4e00\u4e2a\u6837\u672c\u4ec5\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\uff0c\u4e5f\u8868\u793a\u4e86k\u5747\u503c\u805a\u7c7b\u662f\u4e00\u79cd\u786c\u805a\u7c7b\u7b97\u6cd5\u3002 \u57fa\u672c\u6b65\u9aa4 \u5047\u8bbe\u6709n\u4e2a\u6837\u672c\uff0cm\u8868\u793a\u6837\u672c\u7ef4\u5ea6(\u6307\u6807\u53d8\u91cf)\uff0ck\u8868\u793a\u805a\u7c7b\u4e2a\u6570\u3002 1\u3001 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e3a\u6d88\u9664\u6570\u636e\u91cf\u7eb2\u7684\u5f71\u54cd\uff0c\u4f1a\u5bf9\u6570\u636e\u5148\u8fdb\u884c\u6807\u51c6\u5316\u5904\u7406 \\[b_{ij}=\\frac{a_{ij}-\\bar a_j}{s_j}\\] \u5176\u4e2d \\(i=1,2,3,\\dots,n\\) ; \\(j=1,2,3,\\dots,m\\) ; \\(\\bar a_j=\\frac{1}{n}\\sum_{i=1}^{n}a_{ij}\\) ; \\(s_j=\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^n(a_{ij}-\\bar a_j)^2}\\) 2\u3001 \u5728n\u4e2a\u6837\u672c\u4e2d\u968f\u673a\u9009\u53d6K\u4e2a\uff0c\u5bf9\u5e94\u7684m\u4e2a\u6307\u6807\u503c\u505a\u521d\u503c\u5411\u91cf\u3002\u8bb0\u4e3aK\u4e2a\u521d\u503c\u805a\u7c7b\u4e2d\u5fc3 \\({\\{u_1,u_2,\\dots,u_k}\\}\\) \u3002 \u5176\u4e2d \\(u_k={b_{i1},b_{i2},\\dots,b_{im}}\\) ,i\u4e3a\u6240\u9009K\u4e2a\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3\u6240\u5728\u7684\u884c\u7d22\u5f15\u3002 3\u3001 \u9488\u5bf9\u521d\u59cb\u5316\u9009\u62e9\u7684\u805a\u7c7b\u4e2d\u5fc3\uff0c\u8ba1\u7b97\u6240\u4ee5\u6837\u672c\u5230\u6bcf\u4e2a\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff0c\u6309\u7167\u6700\u5c0f\u8ddd\u79bb\u539f\u5219\u5206\u914d\u5230\u6700\u90bb\u8fd1\u805a\u7c7b\uff0c\u4e00\u822c\u91c7\u7528\u6b27\u6c0f\u8ddd\u79bb\u3002 \\[d(x_i,u_k)=\\sqrt{\\sum_{k=1}^n(x_{ik}-u_k)^2}\\] \u5176\u4e2d \\(x_i\\) \u4ee3\u8868\u4efb\u610f\u4e00\u4e2a\u6837\u672c\uff0c\u8ba1\u7b97\u51fa\u7684\u8ddd\u79bb\u8d8a\u5c0f\uff0c\u8bf4\u660e\u5b83\u4e0e\u805a\u7c7b\u4e2d\u65b0 \\(u_k\\) \u7684\u76f8\u4f3c\u6027\u8d8a\u9ad8\uff0c\u53cd\u4e4b\u8ddd\u79bb\u8d8a\u5c0f\uff0c\u5dee\u5f02\u5ea6\u8f83\u5927\u3002 4\u3001 \u8ba1\u7b97\u6bcf\u4e2a\u805a\u7c7b\u4e2d\u6240\u6709\u70b9\u5750\u6807\u7684\u5e73\u5747\u503c\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5e73\u5747\u503c\u4f5c\u4e3a\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3\u3002 \\[\\bar x_i=\\frac{1}{|u_i|}\\sum_x\\in u_ix\\] \u5176\u4e2d \\(i=1,2,\\dots,k\\) 5\u3001 \u53cd\u590d\u6267\u884c\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u805a\u7c7b\u4e2d\u5fc3\u4e0d\u518d\u53d1\u751f\u53d8\u5316\u6216\u8fbe\u5230\u8bbe\u5b9a\u7684\u8fed\u4ee3\u6b21\u6570\uff0c\u8ddd\u79bb\u8bef\u5dee\u76f8\u5bf9\u8f83\u5c0f\uff0c\u6700\u7ec8\u5f97\u5230\u805a\u7c7b\u7ed3\u679c\u3002 \u8ba1\u7b97\u6837\u672c\u5230\u6700\u8fd1\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb\u603b\u548c\uff0c\u505a\u4e3a\u8bef\u5dee\u51c6\u5219\u3002 \\[E=\\sum_{i=1}^k\\sum_{x\\in u_i}||x-\\bar x_i||\\] \u5177\u4f53\u6d41\u7a0b\u56fe\uff1a \u5b9e\u4f8b \u5df2\u77e52010\u5e7414\u5bb6\u94f6\u884c\u4fe1\u606f\uff0c\u5bf9\u5176\u8fdb\u884cK-means\u805a\u7c7b\u3002 1\u3001 \u4e3a\u63d0\u9ad8\u805a\u7c7b\u7ed3\u679c\u7684\u51c6\u786e\u6027\uff0c\u53ef\u4ee5\u5148\u5229\u7528 \u8098\u90e8\u6cd5 \u6216 \u8f6e\u5ed3\u7cfb\u6570\u6cd5 \u786e\u5b9a\u6700\u4f18\u805a\u7c7b\u7c07\u6570k\u3002\u4e0b\u6587\u91c7\u7528\u8098\u90e8\u6cd5\u3002 inertias: \u5176\u662fK\u5747\u503c\u6a21\u578b\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u8868\u793a\u6837\u672c\u8ddd\u79bb\u6700\u8fd1\u7684\u805a\u7c7b\u4e2d\u5fc3\u7684\u603b\u548c\uff0c\u5b83\u662f\u4f5c\u4e3a\u5728\u6ca1\u6709\u771f\u5b9e\u5206\u7c7b\u6807\u7b7e\u4e0b\u7684\u975e\u76d1\u7763\u5f0f\u8bc4\u4f30\u6307\u6807\uff0c \u8be5\u503c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u503c\u8d8a\u5c0f\u8bc1\u660e\u6837\u672c\u5728\u7c7b\u95f4\u7684\u5206\u5e03\u8d8a\u96c6\u4e2d\uff0c\u5373\u7c7b\u5185\u7684\u8ddd\u79bb\u8d8a\u5c0f\u3002 import pandas as pd import numpy as np import matplotlib.pyplot as plt from sklearn.preprocessing import StandardScaler from sklearn.cluster import KMeans from sklearn.decomposition import PCA df = pd.read_excel('/\u6570\u5b66\u5efa\u6a21/\u6691\u5047\u57f9\u8bad/\u4e09\u5e74\u6570\u636e.xlsx',sheet_name='2010\u5e74',index_col=0) columns = df.columns index = df.index data = np.array(df) data_mean = np.mean(data,axis=0) data_std = np.std(data,axis=0) #\u8ba1\u7b97\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee data1 = (data-data_mean)/data_std # pca = PCA(n_components=2) # pca_data = pca.fit_transform(data1) # print(data1) # print(StandardScaler().fit_transform(data)) \u6807\u51c6\u5316\u7ed3\u679c\u76f8\u540c\uff0c\u5bf9\u5217\u6807\u51c6\u5316\uff0c\u5bf9\u884c\u7528\u8f6c\u7f6e # \u786e\u5b9ak\u503c k = np.arange(1,8) jarr = [] fig = plt.figure() for i in k: model = KMeans(n_clusters=i) model.fit(data1) jarr.append(model.inertia_) plt.plot(k,jarr,'bx-') plt.xlabel('K\u503c',fontproperties='SimHei') plt.ylabel('\u805a\u7c7b\u8bef\u5deeE',fontproperties='SimHei') plt.title('K\u5747\u503c\u805a\u7c7b\u8098\u90e8\u56fe',fontproperties='SimHei') plt.show() 2\u3001 \u8fdb\u884cK\u5747\u503c\u805a\u7c7b\u3002 import pandas as pd import numpy as np import matplotlib.pyplot as plt from sklearn.preprocessing import StandardScaler from sklearn.cluster import KMeans df = pd.read_excel('/\u6570\u5b66\u5efa\u6a21/\u6691\u5047\u57f9\u8bad/\u4e09\u5e74\u6570\u636e.xlsx',sheet_name='2010\u5e74',index_col=0) columns = df.columns index = df.index data = np.array(df) data_mean = np.mean(data,axis=0) data_std = np.std(data,axis=0) #\u8ba1\u7b97\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee data1 = (data-data_mean)/data_std K = 4 model1 = KMeans(n_clusters=K) model1.fit(data1) Muk = model1.cluster_centers_ print(Muk) #\u805a\u7c7b\u4e2d\u5fc3\u5750\u6807 ui = model1.predict(data1) u1,u2,u3,u4 = [],[],[],[] for i,j in enumerate(ui): if j==0: u1.append(index[i]) elif j==1: u2.append(index[i]) elif j==2: u3.append(index[i]) elif j==3: u4.append(index[i]) print(\"\u7b2c\u4e00\u7c7b:\",*u1) print('\u7b2c\u4e8c\u7c7b:',*u2) print('\u7b2c\u4e09\u7c7b:',*u3) print('\u7b2c\u56db\u7c7b:',*u4) plt.figure() plt.scatter(data1[:,0],data1[:,1],c=ui,cmap=plt.cm.Paired) plt.scatter(Muk[:,0],Muk[:,1],marker='*',s=60) #\u7ed9\u8fd9\u51e0\u4e2a\u70b9\u6253\u6807 for i in range(K): plt.annotate(f'\u7b2c{i+1}\u7c7b',(Muk[i,0],Muk[i,1]),fontproperties='SimHei') plt.show() [[ 2.35207782 1.77651927 1.25672422 1.90687569 1.41346835 2.09315217 0.93586501 -0.8058846 1.52747097 1.23693717 1.40644991] [-0.60020674 -0.61485892 -0.60708853 -0.60797648 -0.61144243 -0.61179814 -0.59506333 -0.36483604 -0.60722762 -0.60999079 -0.60854734] [ 0.88895831 1.07910013 1.25682796 0.88760693 1.12157491 1.0070794 0.99843684 3.35024509 0.88022714 1.31631523 0.96357678] [ 1.38051564 1.6464849 1.77866656 1.64264107 1.7896905 1.50887493 2.00816572 0.55199997 1.83228906 1.77332772 1.85772336]] \u7b2c\u4e00\u7c7b: \u519c\u4e1a\u94f6\u884c \u7b2c\u4e8c\u7c7b: \u4ea4\u901a\u94f6\u884c \u62db\u5546\u94f6\u884c \u5149\u5927\u94f6\u884c \u4e2d\u4fe1\u94f6\u884c \u5e7f\u53d1\u94f6\u884c \u534e\u590f\u94f6\u884c \u6c11\u751f\u94f6\u884c \u5e73\u5b89\u94f6\u884c \u6d66\u53d1\u94f6\u884c \u5174\u4e1a\u94f6\u884c \u7b2c\u4e09\u7c7b: \u4e2d\u56fd\u94f6\u884c \u7b2c\u56db\u7c7b: \u5de5\u5546\u94f6\u884c \u5efa\u8bbe\u94f6\u884c","title":"\u805a\u7c7b\u5206\u6790"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%BB%9F%E8%AE%A1%E6%A8%A1%E5%9E%8B/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/#k-means","text":"K\u5747\u503c\u805a\u7c7b\uff08k-means\uff09\u662f\u57fa\u4e8e\u6837\u672c\u96c6\u5408\u5212\u5206\u7684\u805a\u7c7b\u7b97\u6cd5\u3002K\u5747\u503c\u805a\u7c7b\u5c06\u6837\u672c\u96c6\u5408\u5212\u5206\u4e3ak\u4e2a\u5b50\u96c6\uff0c\u6784\u6210k\u4e2a\u7c7b\uff0c\u5c06n\u4e2a\u6837\u672c\u5206\u5230k\u4e2a\u7c7b\u4e2d\uff0c\u6bcf\u4e2a\u6837\u672c\u5230\u5176\u6240\u5c5e\u7c7b\u7684\u4e2d\u5fc3\u8ddd\u79bb\u6700\u5c0f\uff0c\u6bcf\u4e2a\u6837\u672c\u4ec5\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u5c31\u662fk\u5747\u503c\u805a\u7c7b\uff0c\u540c\u65f6\u6839\u636e\u4e00\u4e2a\u6837\u672c\u4ec5\u5c5e\u4e8e\u4e00\u4e2a\u7c7b\uff0c\u4e5f\u8868\u793a\u4e86k\u5747\u503c\u805a\u7c7b\u662f\u4e00\u79cd\u786c\u805a\u7c7b\u7b97\u6cd5\u3002","title":"K-means\u805a\u7c7b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%BB%9F%E8%AE%A1%E6%A8%A1%E5%9E%8B/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/#_1","text":"\u5047\u8bbe\u6709n\u4e2a\u6837\u672c\uff0cm\u8868\u793a\u6837\u672c\u7ef4\u5ea6(\u6307\u6807\u53d8\u91cf)\uff0ck\u8868\u793a\u805a\u7c7b\u4e2a\u6570\u3002 1\u3001 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e3a\u6d88\u9664\u6570\u636e\u91cf\u7eb2\u7684\u5f71\u54cd\uff0c\u4f1a\u5bf9\u6570\u636e\u5148\u8fdb\u884c\u6807\u51c6\u5316\u5904\u7406 \\[b_{ij}=\\frac{a_{ij}-\\bar a_j}{s_j}\\] \u5176\u4e2d \\(i=1,2,3,\\dots,n\\) ; \\(j=1,2,3,\\dots,m\\) ; \\(\\bar a_j=\\frac{1}{n}\\sum_{i=1}^{n}a_{ij}\\) ; \\(s_j=\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^n(a_{ij}-\\bar a_j)^2}\\) 2\u3001 \u5728n\u4e2a\u6837\u672c\u4e2d\u968f\u673a\u9009\u53d6K\u4e2a\uff0c\u5bf9\u5e94\u7684m\u4e2a\u6307\u6807\u503c\u505a\u521d\u503c\u5411\u91cf\u3002\u8bb0\u4e3aK\u4e2a\u521d\u503c\u805a\u7c7b\u4e2d\u5fc3 \\({\\{u_1,u_2,\\dots,u_k}\\}\\) \u3002 \u5176\u4e2d \\(u_k={b_{i1},b_{i2},\\dots,b_{im}}\\) ,i\u4e3a\u6240\u9009K\u4e2a\u521d\u59cb\u805a\u7c7b\u4e2d\u5fc3\u6240\u5728\u7684\u884c\u7d22\u5f15\u3002 3\u3001 \u9488\u5bf9\u521d\u59cb\u5316\u9009\u62e9\u7684\u805a\u7c7b\u4e2d\u5fc3\uff0c\u8ba1\u7b97\u6240\u4ee5\u6837\u672c\u5230\u6bcf\u4e2a\u4e2d\u5fc3\u7684\u8ddd\u79bb\uff0c\u6309\u7167\u6700\u5c0f\u8ddd\u79bb\u539f\u5219\u5206\u914d\u5230\u6700\u90bb\u8fd1\u805a\u7c7b\uff0c\u4e00\u822c\u91c7\u7528\u6b27\u6c0f\u8ddd\u79bb\u3002 \\[d(x_i,u_k)=\\sqrt{\\sum_{k=1}^n(x_{ik}-u_k)^2}\\] \u5176\u4e2d \\(x_i\\) \u4ee3\u8868\u4efb\u610f\u4e00\u4e2a\u6837\u672c\uff0c\u8ba1\u7b97\u51fa\u7684\u8ddd\u79bb\u8d8a\u5c0f\uff0c\u8bf4\u660e\u5b83\u4e0e\u805a\u7c7b\u4e2d\u65b0 \\(u_k\\) \u7684\u76f8\u4f3c\u6027\u8d8a\u9ad8\uff0c\u53cd\u4e4b\u8ddd\u79bb\u8d8a\u5c0f\uff0c\u5dee\u5f02\u5ea6\u8f83\u5927\u3002 4\u3001 \u8ba1\u7b97\u6bcf\u4e2a\u805a\u7c7b\u4e2d\u6240\u6709\u70b9\u5750\u6807\u7684\u5e73\u5747\u503c\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5e73\u5747\u503c\u4f5c\u4e3a\u65b0\u7684\u805a\u7c7b\u4e2d\u5fc3\u3002 \\[\\bar x_i=\\frac{1}{|u_i|}\\sum_x\\in u_ix\\] \u5176\u4e2d \\(i=1,2,\\dots,k\\) 5\u3001 \u53cd\u590d\u6267\u884c\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u805a\u7c7b\u4e2d\u5fc3\u4e0d\u518d\u53d1\u751f\u53d8\u5316\u6216\u8fbe\u5230\u8bbe\u5b9a\u7684\u8fed\u4ee3\u6b21\u6570\uff0c\u8ddd\u79bb\u8bef\u5dee\u76f8\u5bf9\u8f83\u5c0f\uff0c\u6700\u7ec8\u5f97\u5230\u805a\u7c7b\u7ed3\u679c\u3002 \u8ba1\u7b97\u6837\u672c\u5230\u6700\u8fd1\u805a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb\u603b\u548c\uff0c\u505a\u4e3a\u8bef\u5dee\u51c6\u5219\u3002 \\[E=\\sum_{i=1}^k\\sum_{x\\in u_i}||x-\\bar x_i||\\] \u5177\u4f53\u6d41\u7a0b\u56fe\uff1a","title":"\u57fa\u672c\u6b65\u9aa4"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%BB%9F%E8%AE%A1%E6%A8%A1%E5%9E%8B/%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/#_2","text":"\u5df2\u77e52010\u5e7414\u5bb6\u94f6\u884c\u4fe1\u606f\uff0c\u5bf9\u5176\u8fdb\u884cK-means\u805a\u7c7b\u3002 1\u3001 \u4e3a\u63d0\u9ad8\u805a\u7c7b\u7ed3\u679c\u7684\u51c6\u786e\u6027\uff0c\u53ef\u4ee5\u5148\u5229\u7528 \u8098\u90e8\u6cd5 \u6216 \u8f6e\u5ed3\u7cfb\u6570\u6cd5 \u786e\u5b9a\u6700\u4f18\u805a\u7c7b\u7c07\u6570k\u3002\u4e0b\u6587\u91c7\u7528\u8098\u90e8\u6cd5\u3002 inertias: \u5176\u662fK\u5747\u503c\u6a21\u578b\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u8868\u793a\u6837\u672c\u8ddd\u79bb\u6700\u8fd1\u7684\u805a\u7c7b\u4e2d\u5fc3\u7684\u603b\u548c\uff0c\u5b83\u662f\u4f5c\u4e3a\u5728\u6ca1\u6709\u771f\u5b9e\u5206\u7c7b\u6807\u7b7e\u4e0b\u7684\u975e\u76d1\u7763\u5f0f\u8bc4\u4f30\u6307\u6807\uff0c \u8be5\u503c\u8d8a\u5c0f\u8d8a\u597d\uff0c\u503c\u8d8a\u5c0f\u8bc1\u660e\u6837\u672c\u5728\u7c7b\u95f4\u7684\u5206\u5e03\u8d8a\u96c6\u4e2d\uff0c\u5373\u7c7b\u5185\u7684\u8ddd\u79bb\u8d8a\u5c0f\u3002 import pandas as pd import numpy as np import matplotlib.pyplot as plt from sklearn.preprocessing import StandardScaler from sklearn.cluster import KMeans from sklearn.decomposition import PCA df = pd.read_excel('/\u6570\u5b66\u5efa\u6a21/\u6691\u5047\u57f9\u8bad/\u4e09\u5e74\u6570\u636e.xlsx',sheet_name='2010\u5e74',index_col=0) columns = df.columns index = df.index data = np.array(df) data_mean = np.mean(data,axis=0) data_std = np.std(data,axis=0) #\u8ba1\u7b97\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee data1 = (data-data_mean)/data_std # pca = PCA(n_components=2) # pca_data = pca.fit_transform(data1) # print(data1) # print(StandardScaler().fit_transform(data)) \u6807\u51c6\u5316\u7ed3\u679c\u76f8\u540c\uff0c\u5bf9\u5217\u6807\u51c6\u5316\uff0c\u5bf9\u884c\u7528\u8f6c\u7f6e # \u786e\u5b9ak\u503c k = np.arange(1,8) jarr = [] fig = plt.figure() for i in k: model = KMeans(n_clusters=i) model.fit(data1) jarr.append(model.inertia_) plt.plot(k,jarr,'bx-') plt.xlabel('K\u503c',fontproperties='SimHei') plt.ylabel('\u805a\u7c7b\u8bef\u5deeE',fontproperties='SimHei') plt.title('K\u5747\u503c\u805a\u7c7b\u8098\u90e8\u56fe',fontproperties='SimHei') plt.show() 2\u3001 \u8fdb\u884cK\u5747\u503c\u805a\u7c7b\u3002 import pandas as pd import numpy as np import matplotlib.pyplot as plt from sklearn.preprocessing import StandardScaler from sklearn.cluster import KMeans df = pd.read_excel('/\u6570\u5b66\u5efa\u6a21/\u6691\u5047\u57f9\u8bad/\u4e09\u5e74\u6570\u636e.xlsx',sheet_name='2010\u5e74',index_col=0) columns = df.columns index = df.index data = np.array(df) data_mean = np.mean(data,axis=0) data_std = np.std(data,axis=0) #\u8ba1\u7b97\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee data1 = (data-data_mean)/data_std K = 4 model1 = KMeans(n_clusters=K) model1.fit(data1) Muk = model1.cluster_centers_ print(Muk) #\u805a\u7c7b\u4e2d\u5fc3\u5750\u6807 ui = model1.predict(data1) u1,u2,u3,u4 = [],[],[],[] for i,j in enumerate(ui): if j==0: u1.append(index[i]) elif j==1: u2.append(index[i]) elif j==2: u3.append(index[i]) elif j==3: u4.append(index[i]) print(\"\u7b2c\u4e00\u7c7b:\",*u1) print('\u7b2c\u4e8c\u7c7b:',*u2) print('\u7b2c\u4e09\u7c7b:',*u3) print('\u7b2c\u56db\u7c7b:',*u4) plt.figure() plt.scatter(data1[:,0],data1[:,1],c=ui,cmap=plt.cm.Paired) plt.scatter(Muk[:,0],Muk[:,1],marker='*',s=60) #\u7ed9\u8fd9\u51e0\u4e2a\u70b9\u6253\u6807 for i in range(K): plt.annotate(f'\u7b2c{i+1}\u7c7b',(Muk[i,0],Muk[i,1]),fontproperties='SimHei') plt.show() [[ 2.35207782 1.77651927 1.25672422 1.90687569 1.41346835 2.09315217 0.93586501 -0.8058846 1.52747097 1.23693717 1.40644991] [-0.60020674 -0.61485892 -0.60708853 -0.60797648 -0.61144243 -0.61179814 -0.59506333 -0.36483604 -0.60722762 -0.60999079 -0.60854734] [ 0.88895831 1.07910013 1.25682796 0.88760693 1.12157491 1.0070794 0.99843684 3.35024509 0.88022714 1.31631523 0.96357678] [ 1.38051564 1.6464849 1.77866656 1.64264107 1.7896905 1.50887493 2.00816572 0.55199997 1.83228906 1.77332772 1.85772336]] \u7b2c\u4e00\u7c7b: \u519c\u4e1a\u94f6\u884c \u7b2c\u4e8c\u7c7b: \u4ea4\u901a\u94f6\u884c \u62db\u5546\u94f6\u884c \u5149\u5927\u94f6\u884c \u4e2d\u4fe1\u94f6\u884c \u5e7f\u53d1\u94f6\u884c \u534e\u590f\u94f6\u884c \u6c11\u751f\u94f6\u884c \u5e73\u5b89\u94f6\u884c \u6d66\u53d1\u94f6\u884c \u5174\u4e1a\u94f6\u884c \u7b2c\u4e09\u7c7b: \u4e2d\u56fd\u94f6\u884c \u7b2c\u56db\u7c7b: \u5de5\u5546\u94f6\u884c \u5efa\u8bbe\u94f6\u884c","title":"\u5b9e\u4f8b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90/","text":"\u5c42\u6b21\u5206\u6790\u6cd5 \u5c42\u6b21\u5206\u6790\u6cd5(AHP)\u662f\u7531\u7f8e\u56fd\u8fd0\u7b79\u5b66\u5bb6\u3001\u5339\u5179\u5821\u5927\u5b66\u6559\u6388T.L.Saaty\u4e8e20\u4e16\u7eaa70\u5e74\u4ee3\u521b\u7acb\u7684\u4e00\u79cd\u7efc\u5408\u8bc4\u4ef7\u65b9\u6cd5\u3002\u5176\u672c\u8d28\u662f\u4e00\u79cd\u5206\u89e3\u590d\u6742\u95ee\u9898\u7684\u8fc7\u7a0b\u3002\u8be5\u8fc7\u7a0b\u7ed3\u5408\u4e86\u4eba\u7c7b\u51b3\u7b56\u65f6\u7684\u57fa\u672c\u6b65\u9aa4\uff0c\u5373\u5206\u89e3\u3001\u5224\u65ad\u3001\u7efc\u5408\u3002\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4e86\u51b3\u7b56\u8005\u7684\u4e3b\u89c2\u6027\u3002 \u57fa\u672c\u6b65\u9aa4 \u5206\u6790\u7cfb\u7edf\u4e2d\u5404\u56e0\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5efa\u7acb\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u3002 \u5bf9\u540c\u4e00\u5c42\u6b21\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u8fdb\u884c\u4e24\u4e24\u6bd4\u8f83\uff0c\u6784\u5efa\u6bd4\u8f83\u77e9\u9635\u3002 \u8ba1\u7b97\u5404\u5c42\u6b21\u6bd4\u8f83\u77e9\u9635\u4e2d\u5404\u5143\u7d20\u7684\u76f8\u5bf9\u6743\u91cd\uff0c\u5bf9\u6bd4\u8f83\u77e9\u9635\u7684\u4e00\u81f4\u6027\u8fdb\u884c\u68c0\u9a8c\u3002 \u8ba1\u7b97\u6574\u4e2a\u7cfb\u7edf\u4e0b\u7684\u5408\u6210\u6743\u91cd\uff0c\u5e76\u8ba1\u7b97\u88ab\u8bc4\u4ef7\u5bf9\u8c61\u7684\u603b\u5206\u3002 \u6240\u8c13\u5c42\u6b21\u7ed3\u6784\u5c31\u662f\u5c42\u6b21\u5206\u6790\u6cd5\u9700\u8981\u5c06\u51b3\u7b56\u5206\u89e3\u6210 \u76ee\u6807\u5c42O\u3001\u51c6\u5219\u5c42C\u3001\u65b9\u6848\u5c42P\u8fd9\u4e09\u4e2a\u5c42\u6b21\u3002 \u4ee5\u6311\u9009\u7f8e\u98df\u4e3a\u4f8b\uff0c\u901a\u8fc7\u5efa\u7acb\u5c42\u6b21\u5206\u6790\u6a21\u578b\u7684\u65b9\u6cd5\u6311\u9009\u51fa\u5bf9\u4f60\u6765\u8bf4\u6700\u597d\u7684\u98df\u7269\u3002 \u56e0\u6b64\u7b2c\u4e00\u6b65\uff0c\u4e09\u4e2a\u5c42\u6b21\u81ea\u4e0a\u5230\u4e0b\uff0c\u5982\u8be5\u5c42\u6b21\u7ed3\u6784\u56fe: \u7b2c\u4e8c\u6b65\u5efa\u7acb\u51c6\u5219\u5c42\u7684\u6bd4\u8f83\u77e9\u9635: \u6ce8\u610f: \u51c6\u5219\u5c42(\u4e00\u4e2a)\u548c\u65b9\u6848\u5c42(\u4e94\u4e2a)\u7684\u6bd4\u8f83\u77e9\u9635\u90fd\u9700\u8981\u6784\u5efa\u3002 \u5176\u4e2d\u51c6\u5219\u5c42\u7684\u6bd4\u8f83\u77e9\u9635\u5982\u4e0b: \u7136\u540e\u5c31\u662f\u65b9\u6848\u5c42\u7684\u6bd4\u8f83\u77e9\u9635\uff0c\u4ee5 \u8272\u6cfd \u4e3a\u4f8b\uff0c\u5982\u4e0b: \u8272\u6cfd \u9ed1\u68ee\u6797\u86cb\u7cd5 \u9178\u83dc\u9c7c \u767d\u5207\u9e21 \u9ed1\u68ee\u6797\u86cb\u7cd5 1.00 2.00 5.00 \u9178\u83dc\u9c7c 0.50 1.00 2.00 \u767d\u5207\u9e21 0.20 0.50 1.00 \u51c6\u5219\u5c42\u6bd4\u8f83\u77e9\u9635A\uff0c\u5176\u4e2d \\(a_{ij}\\) \u4ee3\u8868\u7b2ci\u884c\u5bf9\u5e94\u51c6\u5219\u7684\u91cd\u8981\u7a0b\u5ea6\u662f\u7b2cj\u5217\u5bf9\u5e94\u51c6\u5219\u7684\u91cd\u8981\u7a0b\u5ea6\u7684 \\(a_{ij}\\) \u500d\u3002\u4f8b\u4e0a\u8ff0\u51c6\u5219\u5c42\u6bd4\u8f83\u77e9\u9635\u4e2d\u76844\uff0c\u4ee3\u8868\u8272\u6cfd\u91cd\u8981\u7a0b\u5ea6\u662f\u5473\u9053\u76844\u500d\u3002 \u65b9\u6848\u5c42\u6bd4\u8f83\u77e9\u9635B\uff0c\u5176\u4e2d \\(b_{ij}\\) \u4ee3\u8868\u7b2ci\u884c\u5bf9\u5e94\u65b9\u6848\u7684\u5f97\u5206\u662f\u7b2cj\u5217\u5bf9\u5e94\u65b9\u6848\u7684\u5f97\u5206\u7684 \\(b_{ij}\\) \u500d\u3002\u4f8b\u4e0a\u8ff0\u65b9\u6848\u5c42\u6bd4\u8f83\u77e9\u9635\u4e2d\u76845\uff0c\u4ee3\u8868\u8272\u6cfd\u65b9\u9762\uff0c\u9ed1\u68ee\u6797\u86cb\u7cd5\u7684\u5f97\u5206\u662f\u767d\u5207\u9e21\u76845\u500d\u3002 \u5bf9\u4e8e\u91cd\u8981\u6027\u6807\u5ea6\uff0cSaaty\u7b49\u4eba\u63d0\u51fa1~9\u5c3a\u5ea6\uff0c \\(a_{ij}\\) \u53d6\u503c1,2,...,9\u53ca\u5176\u4e92\u53cd\u65701,1/2,...,1/9 \u4e00\u822c\u4f9d\u7167\u4e0b\u8868: \u5c3a\u5ea6 \\(a_{ij}\\) 1 2 3 4 5 6 7 8 9 \u51c6\u5219 \\(C_i:C_j\\) \u7684\u91cd\u8981\u6027 \u76f8\u540c \u4ecb\u4e8e\u4e4b\u95f4 \u7a0d\u5f3a \u4ecb\u4e8e\u4e4b\u95f4 \u5f3a \u4ecb\u4e8e\u4e4b\u95f4 \u660e\u663e\u5f3a \u4ecb\u4e8e\u4e4b\u95f4 \u7edd\u5bf9\u5f3a \u7b2c\u4e09\u6b65\u5206\u522b\u8ba1\u7b97\u51c6\u5219\u5c42\u548c\u65b9\u6848\u5c42\u5404\u8981\u7d20\u7684\u6743\u91cd \u6211\u4eec\u4ee5\u51c6\u5219\u5c42\u4e3a\u4f8b,\u77e5\u9053\u5224\u65ad\u77e9\u9635A\u5982\u4e0b: \\[\\begin{bmatrix} \\frac{w_1}{w_1} & \\frac{w_1}{w_2} & \\frac{w_1}{w_3} & \\frac{w_1}{w_4} & \\frac{w_1}{w_5} \\\\ \\frac{w_2}{w_1} & \\frac{w_2}{w_2} & \\frac{w_2}{w_3} & \\frac{w_2}{w_4} & \\frac{w_2}{w_5} \\\\ \\frac{w_3}{w_1} & \\frac{w_3}{w_2} & \\frac{w_3}{w_3} & \\frac{w_3}{w_4} & \\frac{w_3}{w_5} \\\\ \\frac{w_4}{w_1} & \\frac{w_4}{w_2} & \\frac{w_4}{w_3} & \\frac{w_4}{w_4} & \\frac{w_4}{w_5} \\\\ \\frac{w_5}{w_1} & \\frac{w_5}{w_2} & \\frac{w_5}{w_3} & \\frac{w_5}{w_4} & \\frac{w_5}{w_5} \\\\ \\end{bmatrix} \\] \u4e00\u822c\u6709\u4e09\u79cd\u6c42\u6743\u91cd\u7684\u65b9\u6cd5: \u7b97\u6570\u5e73\u5747\u6743\u91cd \u51e0\u4f55\u5e73\u5747\u6743\u91cd \u7279\u5f81\u503c\u6c42\u6743\u91cd \u4e00\u822c\u91c7\u7528\u7b2c\u4e09\u79cd\u65b9\u6cd5\u6c42\u6743\u5411\u91cf\uff0c\u6bd4\u8d5b\u53ef\u4ee5\u90fd\u5199\u4e0a\u3002 \u5177\u4f53\u516c\u5f0f\u53c2\u8003 \u8fdb\u884c\u4e00\u81f4\u6027\u68c0\u9a8c \u7531\u4e8e\u5224\u65ad\u77e9\u9635\u6700\u5927\u7279\u5f81\u6839 \\(\\lambda_{max}\\) \u7684\u7279\u5f81\u5411\u91cf\uff0c\u7ecf\u5f52\u4e00\u5316(\u4f7f\u5411\u91cf\u4e2d\u5404\u5143\u7d20\u4e4b\u548c\u7b49\u4e8e1)\u540e\u8bb0\u4e3aW\u3002\u800c\u80fd\u5426\u5c06\u8be5\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u5404\u6307\u6807\u7684\u6743\u5411\u91cf\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u81f4\u6027\u68c0\u9a8c\uff0c\u82e5\u901a\u8fc7\uff0c\u5219\u5f97\u5230\u7684W\u5408\u7406\u3002 \u7531\u4e8e\u03bb\u8fde\u7eed\u7684\u4f9d\u8d56\u4e8e \\(a_{ij}\\) \uff0c\u5219\u03bb\u6bd4n\u5927\u7684\u8d8a\u591a\uff0cA\u7684\u4e0d\u4e00\u81f4\u6027\u8d8a\u4e25\u91cd\uff0c\u4e00\u81f4\u6027\u6307\u6807\u7528CI\u8ba1\u7b97\uff0cCI\u8d8a\u5c0f\uff0c\u8bf4\u660e\u4e00\u81f4\u6027\u8d8a\u5927\u3002\u7528\u6700\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u88ab\u6bd4\u8f83\u56e0\u7d20\u5bf9\u4e0a\u5c42\u67d0\u56e0\u7d20\u5f71\u54cd\u7a0b\u5ea6\u7684\u6743\u5411\u91cf\uff0c\u5176\u4e0d\u4e00\u81f4\u7a0b\u5ea6\u8d8a\u5927\uff0c\u5f15\u8d77\u7684\u5224\u65ad\u8bef\u5dee\u8d8a\u5927\u3002\u56e0\u800c\u53ef\u4ee5\u7528 \u03bb-n \u6570\u503c\u7684\u5927\u5c0f\u6765\u8861\u91cfA \u7684\u4e0d\u4e00\u81f4\u7a0b\u5ea6\u3002\u5b9a\u4e49\u4e00\u81f4\u6027\u6307\u6807\u4e3a\uff1a \\[CI=\\frac{\\lambda_{max}-n}{n-1}\\] CI=0\uff0c\u6709\u5b8c\u5168\u7684\u4e00\u81f4\u6027\uff1bCI \u63a5\u8fd1\u4e8e0\uff0c\u6709\u6ee1\u610f\u7684\u4e00\u81f4\u6027\uff1bCI \u8d8a\u5927\uff0c\u4e0d\u4e00\u81f4\u8d8a\u4e25\u91cd\u3002 \u4e3a\u8861\u91cfCI\u7684\u5927\u5c0f\uff0c\u5f15\u5165\u968f\u673a\u4e00\u81f4\u6027\u6307\u6807RI\uff1a \\[\\frac{CI_1+CI_2+\\dots+CI_n}{n}\\] \u968f\u673a\u4e00\u81f4\u6027\u6307\u6807RI\u4e0e\u5224\u8bfb\u77e9\u9635\u7684\u9636\u6570\u6709\u5173\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u77e9\u9635\u9636\u6570\u8d8a\u5927\uff0c\u5219\u51fa\u73b0\u4e00\u81f4\u6027\u968f\u673a\u504f\u79bb\u7684\u53ef\u80fd\u6027\u4e5f\u8d8a\u5927\uff0c\u5176\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b: \u77e9\u9635\u9636\u6570 1 2 3 4 5 6 7 8 9 10 RI 0 0 0.58 0.90 1.12 1.24 1.32 1.41 1.45 1.49 \u7136\u540e\u5f97\u51fa\u68c0\u9a8c\u7cfb\u6570: \\[CR=\\frac{CI}{RI}\\] \u4e00\u822c\uff0c\u5982\u679cCR<0.1 \uff0c\u5219\u8ba4\u4e3a\u8be5\u5224\u65ad\u77e9\u9635\u901a\u8fc7\u4e00\u81f4\u6027\u68c0\u9a8c\uff0c\u5426\u5219\u5c31\u4e0d\u5177\u6709\u6ee1\u610f\u4e00\u81f4\u6027\u3002 \u7528\u76f8\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u6c42\u51fa\u65b9\u6848\u5c42(\u4e94\u4e2a)\u7684\u6743\u91cd\uff0c\u8bb0\u4e3a\u5404\u4e2a\u65b9\u6848\u5728\u4e0d\u540c\u51c6\u5219\u4e0b\u7684\u5f97\u5206\uff0c\u7ec4\u5408\u5f97\u5230\u4e00\u4e2a5\u00d73\u7684\u77e9\u9635\u3002\u6700\u7ec8\u518d\u5bf9\u5e94\u4e58\u4ee5\u51c6\u5219\u6743\u91cd\uff0c\u6c42\u548c\u8bb0\u4e3a\u5404\u4e2a\u65b9\u6848\u7684\u6700\u7ec8\u5f97\u5206\u3002 \u4ee3\u7801\u5982\u4e0b import numpy as np # \u968f\u673a\u4e00\u81f4\u6027\u6307\u6807RI RI_dict = {1: 0, 2: 0, 3: 0.58, 4: 0.90, 5: 1.12, 6: 1.24, 7: 1.32, 8: 1.41, 9: 1.45} #\u6bd4\u8f83\u77e9\u9635(\u6b63\u4e92\u53cd\u9635) A = [[1, 1/2, 4, 3, 3], [2, 1, 7, 5, 5], [1/4, 1/7, 1, 1/2, 1/3], [1/3, 1/5, 2, 1, 1], [1/3, 1/5, 3, 1, 1]] n = len(A) #\u7531A\u786e\u5b9a\u4e94\u4e2a\u51c6\u5219C\u5bf9\u76ee\u6807\u5c42\u7684\u6743\u91cd #\u7b97\u6570\u5e73\u5747\u6cd5\u6c42\u6743\u91cd def ssa(A,n): sum_A = np.sum(A,axis=0,keepdims=True) w = np.sum(A/sum_A,axis=1)/n return w #\u51e0\u4f55\u5e73\u5747\u6cd5\u6c42\u6743\u91cd def jha(A,n): mul = np.prod(A,axis=1) fz = mul**(1/n) w = fz/np.sum(fz) return w #\u7279\u5f81\u503c\u6cd5\u6c42\u6743\u91cd def tzz(A,n): V,D = np.linalg.eig(A) #V\u662f\u7279\u5f81\u503c\uff0cD\u662f\u7279\u5f81\u5411\u91cf\uff0c\u6bcf\u4e00\u5217\u662f\u4e00\u4e2a\u7279\u5f81\u5411\u91cf maxv = np.max(V) #\u6700\u5927\u7279\u5f81\u503c c = np.where(V==maxv) #\u8fd4\u56demaxv\u6240\u5728\u7684\u884c\u548c\u5217 b = D[:,c[0]] #\u627e\u5230\u6700\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7279\u5f81\u5411\u91cf w = b/sum(b) return np.squeeze(w) #\u5220\u9664\u6570\u7ec4\u5f62\u72b6\u4e2d\u7684\u5355\u7ef4\u5ea6 V,D = np.linalg.eig(A) maxv = np.max(V) CI = (maxv-n)/(n-1) #\u4e00\u81f4\u6027\u6307\u6807 RI = RI_dict[n] #\u968f\u673a\u4e00\u81f4\u6027\u6307\u6807 CR = CI/RI #\u4e00\u81f4\u6027\u6bd4\u7387 if CR<0.1: print(f'\u68c0\u9a8c\u7cfb\u6570\u4e3a:{CR},\u4e00\u81f4\u6027\u68c0\u9a8c\u901a\u8fc7') print(tzz(A,n)) else: print(f'\u68c0\u9a8c\u7cfb\u6570\u4e3a:{CR},\u4e00\u81f4\u6027\u68c0\u9a8c\u672a\u901a\u8fc7') https://zhuanlan.zhihu.com/p/182944251","title":"\u5c42\u6b21\u5206\u6790\u6cd5"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90/#_1","text":"\u5c42\u6b21\u5206\u6790\u6cd5(AHP)\u662f\u7531\u7f8e\u56fd\u8fd0\u7b79\u5b66\u5bb6\u3001\u5339\u5179\u5821\u5927\u5b66\u6559\u6388T.L.Saaty\u4e8e20\u4e16\u7eaa70\u5e74\u4ee3\u521b\u7acb\u7684\u4e00\u79cd\u7efc\u5408\u8bc4\u4ef7\u65b9\u6cd5\u3002\u5176\u672c\u8d28\u662f\u4e00\u79cd\u5206\u89e3\u590d\u6742\u95ee\u9898\u7684\u8fc7\u7a0b\u3002\u8be5\u8fc7\u7a0b\u7ed3\u5408\u4e86\u4eba\u7c7b\u51b3\u7b56\u65f6\u7684\u57fa\u672c\u6b65\u9aa4\uff0c\u5373\u5206\u89e3\u3001\u5224\u65ad\u3001\u7efc\u5408\u3002\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u4e86\u51b3\u7b56\u8005\u7684\u4e3b\u89c2\u6027\u3002","title":"\u5c42\u6b21\u5206\u6790\u6cd5"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90/#_2","text":"\u5206\u6790\u7cfb\u7edf\u4e2d\u5404\u56e0\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5efa\u7acb\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u3002 \u5bf9\u540c\u4e00\u5c42\u6b21\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u8fdb\u884c\u4e24\u4e24\u6bd4\u8f83\uff0c\u6784\u5efa\u6bd4\u8f83\u77e9\u9635\u3002 \u8ba1\u7b97\u5404\u5c42\u6b21\u6bd4\u8f83\u77e9\u9635\u4e2d\u5404\u5143\u7d20\u7684\u76f8\u5bf9\u6743\u91cd\uff0c\u5bf9\u6bd4\u8f83\u77e9\u9635\u7684\u4e00\u81f4\u6027\u8fdb\u884c\u68c0\u9a8c\u3002 \u8ba1\u7b97\u6574\u4e2a\u7cfb\u7edf\u4e0b\u7684\u5408\u6210\u6743\u91cd\uff0c\u5e76\u8ba1\u7b97\u88ab\u8bc4\u4ef7\u5bf9\u8c61\u7684\u603b\u5206\u3002 \u6240\u8c13\u5c42\u6b21\u7ed3\u6784\u5c31\u662f\u5c42\u6b21\u5206\u6790\u6cd5\u9700\u8981\u5c06\u51b3\u7b56\u5206\u89e3\u6210 \u76ee\u6807\u5c42O\u3001\u51c6\u5219\u5c42C\u3001\u65b9\u6848\u5c42P\u8fd9\u4e09\u4e2a\u5c42\u6b21\u3002 \u4ee5\u6311\u9009\u7f8e\u98df\u4e3a\u4f8b\uff0c\u901a\u8fc7\u5efa\u7acb\u5c42\u6b21\u5206\u6790\u6a21\u578b\u7684\u65b9\u6cd5\u6311\u9009\u51fa\u5bf9\u4f60\u6765\u8bf4\u6700\u597d\u7684\u98df\u7269\u3002 \u56e0\u6b64\u7b2c\u4e00\u6b65\uff0c\u4e09\u4e2a\u5c42\u6b21\u81ea\u4e0a\u5230\u4e0b\uff0c\u5982\u8be5\u5c42\u6b21\u7ed3\u6784\u56fe: \u7b2c\u4e8c\u6b65\u5efa\u7acb\u51c6\u5219\u5c42\u7684\u6bd4\u8f83\u77e9\u9635: \u6ce8\u610f: \u51c6\u5219\u5c42(\u4e00\u4e2a)\u548c\u65b9\u6848\u5c42(\u4e94\u4e2a)\u7684\u6bd4\u8f83\u77e9\u9635\u90fd\u9700\u8981\u6784\u5efa\u3002 \u5176\u4e2d\u51c6\u5219\u5c42\u7684\u6bd4\u8f83\u77e9\u9635\u5982\u4e0b: \u7136\u540e\u5c31\u662f\u65b9\u6848\u5c42\u7684\u6bd4\u8f83\u77e9\u9635\uff0c\u4ee5 \u8272\u6cfd \u4e3a\u4f8b\uff0c\u5982\u4e0b: \u8272\u6cfd \u9ed1\u68ee\u6797\u86cb\u7cd5 \u9178\u83dc\u9c7c \u767d\u5207\u9e21 \u9ed1\u68ee\u6797\u86cb\u7cd5 1.00 2.00 5.00 \u9178\u83dc\u9c7c 0.50 1.00 2.00 \u767d\u5207\u9e21 0.20 0.50 1.00 \u51c6\u5219\u5c42\u6bd4\u8f83\u77e9\u9635A\uff0c\u5176\u4e2d \\(a_{ij}\\) \u4ee3\u8868\u7b2ci\u884c\u5bf9\u5e94\u51c6\u5219\u7684\u91cd\u8981\u7a0b\u5ea6\u662f\u7b2cj\u5217\u5bf9\u5e94\u51c6\u5219\u7684\u91cd\u8981\u7a0b\u5ea6\u7684 \\(a_{ij}\\) \u500d\u3002\u4f8b\u4e0a\u8ff0\u51c6\u5219\u5c42\u6bd4\u8f83\u77e9\u9635\u4e2d\u76844\uff0c\u4ee3\u8868\u8272\u6cfd\u91cd\u8981\u7a0b\u5ea6\u662f\u5473\u9053\u76844\u500d\u3002 \u65b9\u6848\u5c42\u6bd4\u8f83\u77e9\u9635B\uff0c\u5176\u4e2d \\(b_{ij}\\) \u4ee3\u8868\u7b2ci\u884c\u5bf9\u5e94\u65b9\u6848\u7684\u5f97\u5206\u662f\u7b2cj\u5217\u5bf9\u5e94\u65b9\u6848\u7684\u5f97\u5206\u7684 \\(b_{ij}\\) \u500d\u3002\u4f8b\u4e0a\u8ff0\u65b9\u6848\u5c42\u6bd4\u8f83\u77e9\u9635\u4e2d\u76845\uff0c\u4ee3\u8868\u8272\u6cfd\u65b9\u9762\uff0c\u9ed1\u68ee\u6797\u86cb\u7cd5\u7684\u5f97\u5206\u662f\u767d\u5207\u9e21\u76845\u500d\u3002 \u5bf9\u4e8e\u91cd\u8981\u6027\u6807\u5ea6\uff0cSaaty\u7b49\u4eba\u63d0\u51fa1~9\u5c3a\u5ea6\uff0c \\(a_{ij}\\) \u53d6\u503c1,2,...,9\u53ca\u5176\u4e92\u53cd\u65701,1/2,...,1/9 \u4e00\u822c\u4f9d\u7167\u4e0b\u8868: \u5c3a\u5ea6 \\(a_{ij}\\) 1 2 3 4 5 6 7 8 9 \u51c6\u5219 \\(C_i:C_j\\) \u7684\u91cd\u8981\u6027 \u76f8\u540c \u4ecb\u4e8e\u4e4b\u95f4 \u7a0d\u5f3a \u4ecb\u4e8e\u4e4b\u95f4 \u5f3a \u4ecb\u4e8e\u4e4b\u95f4 \u660e\u663e\u5f3a \u4ecb\u4e8e\u4e4b\u95f4 \u7edd\u5bf9\u5f3a \u7b2c\u4e09\u6b65\u5206\u522b\u8ba1\u7b97\u51c6\u5219\u5c42\u548c\u65b9\u6848\u5c42\u5404\u8981\u7d20\u7684\u6743\u91cd \u6211\u4eec\u4ee5\u51c6\u5219\u5c42\u4e3a\u4f8b,\u77e5\u9053\u5224\u65ad\u77e9\u9635A\u5982\u4e0b: \\[\\begin{bmatrix} \\frac{w_1}{w_1} & \\frac{w_1}{w_2} & \\frac{w_1}{w_3} & \\frac{w_1}{w_4} & \\frac{w_1}{w_5} \\\\ \\frac{w_2}{w_1} & \\frac{w_2}{w_2} & \\frac{w_2}{w_3} & \\frac{w_2}{w_4} & \\frac{w_2}{w_5} \\\\ \\frac{w_3}{w_1} & \\frac{w_3}{w_2} & \\frac{w_3}{w_3} & \\frac{w_3}{w_4} & \\frac{w_3}{w_5} \\\\ \\frac{w_4}{w_1} & \\frac{w_4}{w_2} & \\frac{w_4}{w_3} & \\frac{w_4}{w_4} & \\frac{w_4}{w_5} \\\\ \\frac{w_5}{w_1} & \\frac{w_5}{w_2} & \\frac{w_5}{w_3} & \\frac{w_5}{w_4} & \\frac{w_5}{w_5} \\\\ \\end{bmatrix} \\] \u4e00\u822c\u6709\u4e09\u79cd\u6c42\u6743\u91cd\u7684\u65b9\u6cd5: \u7b97\u6570\u5e73\u5747\u6743\u91cd \u51e0\u4f55\u5e73\u5747\u6743\u91cd \u7279\u5f81\u503c\u6c42\u6743\u91cd \u4e00\u822c\u91c7\u7528\u7b2c\u4e09\u79cd\u65b9\u6cd5\u6c42\u6743\u5411\u91cf\uff0c\u6bd4\u8d5b\u53ef\u4ee5\u90fd\u5199\u4e0a\u3002 \u5177\u4f53\u516c\u5f0f\u53c2\u8003 \u8fdb\u884c\u4e00\u81f4\u6027\u68c0\u9a8c \u7531\u4e8e\u5224\u65ad\u77e9\u9635\u6700\u5927\u7279\u5f81\u6839 \\(\\lambda_{max}\\) \u7684\u7279\u5f81\u5411\u91cf\uff0c\u7ecf\u5f52\u4e00\u5316(\u4f7f\u5411\u91cf\u4e2d\u5404\u5143\u7d20\u4e4b\u548c\u7b49\u4e8e1)\u540e\u8bb0\u4e3aW\u3002\u800c\u80fd\u5426\u5c06\u8be5\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u5404\u6307\u6807\u7684\u6743\u5411\u91cf\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u81f4\u6027\u68c0\u9a8c\uff0c\u82e5\u901a\u8fc7\uff0c\u5219\u5f97\u5230\u7684W\u5408\u7406\u3002 \u7531\u4e8e\u03bb\u8fde\u7eed\u7684\u4f9d\u8d56\u4e8e \\(a_{ij}\\) \uff0c\u5219\u03bb\u6bd4n\u5927\u7684\u8d8a\u591a\uff0cA\u7684\u4e0d\u4e00\u81f4\u6027\u8d8a\u4e25\u91cd\uff0c\u4e00\u81f4\u6027\u6307\u6807\u7528CI\u8ba1\u7b97\uff0cCI\u8d8a\u5c0f\uff0c\u8bf4\u660e\u4e00\u81f4\u6027\u8d8a\u5927\u3002\u7528\u6700\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u88ab\u6bd4\u8f83\u56e0\u7d20\u5bf9\u4e0a\u5c42\u67d0\u56e0\u7d20\u5f71\u54cd\u7a0b\u5ea6\u7684\u6743\u5411\u91cf\uff0c\u5176\u4e0d\u4e00\u81f4\u7a0b\u5ea6\u8d8a\u5927\uff0c\u5f15\u8d77\u7684\u5224\u65ad\u8bef\u5dee\u8d8a\u5927\u3002\u56e0\u800c\u53ef\u4ee5\u7528 \u03bb-n \u6570\u503c\u7684\u5927\u5c0f\u6765\u8861\u91cfA \u7684\u4e0d\u4e00\u81f4\u7a0b\u5ea6\u3002\u5b9a\u4e49\u4e00\u81f4\u6027\u6307\u6807\u4e3a\uff1a \\[CI=\\frac{\\lambda_{max}-n}{n-1}\\] CI=0\uff0c\u6709\u5b8c\u5168\u7684\u4e00\u81f4\u6027\uff1bCI \u63a5\u8fd1\u4e8e0\uff0c\u6709\u6ee1\u610f\u7684\u4e00\u81f4\u6027\uff1bCI \u8d8a\u5927\uff0c\u4e0d\u4e00\u81f4\u8d8a\u4e25\u91cd\u3002 \u4e3a\u8861\u91cfCI\u7684\u5927\u5c0f\uff0c\u5f15\u5165\u968f\u673a\u4e00\u81f4\u6027\u6307\u6807RI\uff1a \\[\\frac{CI_1+CI_2+\\dots+CI_n}{n}\\] \u968f\u673a\u4e00\u81f4\u6027\u6307\u6807RI\u4e0e\u5224\u8bfb\u77e9\u9635\u7684\u9636\u6570\u6709\u5173\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u77e9\u9635\u9636\u6570\u8d8a\u5927\uff0c\u5219\u51fa\u73b0\u4e00\u81f4\u6027\u968f\u673a\u504f\u79bb\u7684\u53ef\u80fd\u6027\u4e5f\u8d8a\u5927\uff0c\u5176\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b: \u77e9\u9635\u9636\u6570 1 2 3 4 5 6 7 8 9 10 RI 0 0 0.58 0.90 1.12 1.24 1.32 1.41 1.45 1.49 \u7136\u540e\u5f97\u51fa\u68c0\u9a8c\u7cfb\u6570: \\[CR=\\frac{CI}{RI}\\] \u4e00\u822c\uff0c\u5982\u679cCR<0.1 \uff0c\u5219\u8ba4\u4e3a\u8be5\u5224\u65ad\u77e9\u9635\u901a\u8fc7\u4e00\u81f4\u6027\u68c0\u9a8c\uff0c\u5426\u5219\u5c31\u4e0d\u5177\u6709\u6ee1\u610f\u4e00\u81f4\u6027\u3002 \u7528\u76f8\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u6c42\u51fa\u65b9\u6848\u5c42(\u4e94\u4e2a)\u7684\u6743\u91cd\uff0c\u8bb0\u4e3a\u5404\u4e2a\u65b9\u6848\u5728\u4e0d\u540c\u51c6\u5219\u4e0b\u7684\u5f97\u5206\uff0c\u7ec4\u5408\u5f97\u5230\u4e00\u4e2a5\u00d73\u7684\u77e9\u9635\u3002\u6700\u7ec8\u518d\u5bf9\u5e94\u4e58\u4ee5\u51c6\u5219\u6743\u91cd\uff0c\u6c42\u548c\u8bb0\u4e3a\u5404\u4e2a\u65b9\u6848\u7684\u6700\u7ec8\u5f97\u5206\u3002","title":"\u57fa\u672c\u6b65\u9aa4"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90/#_3","text":"import numpy as np # \u968f\u673a\u4e00\u81f4\u6027\u6307\u6807RI RI_dict = {1: 0, 2: 0, 3: 0.58, 4: 0.90, 5: 1.12, 6: 1.24, 7: 1.32, 8: 1.41, 9: 1.45} #\u6bd4\u8f83\u77e9\u9635(\u6b63\u4e92\u53cd\u9635) A = [[1, 1/2, 4, 3, 3], [2, 1, 7, 5, 5], [1/4, 1/7, 1, 1/2, 1/3], [1/3, 1/5, 2, 1, 1], [1/3, 1/5, 3, 1, 1]] n = len(A) #\u7531A\u786e\u5b9a\u4e94\u4e2a\u51c6\u5219C\u5bf9\u76ee\u6807\u5c42\u7684\u6743\u91cd #\u7b97\u6570\u5e73\u5747\u6cd5\u6c42\u6743\u91cd def ssa(A,n): sum_A = np.sum(A,axis=0,keepdims=True) w = np.sum(A/sum_A,axis=1)/n return w #\u51e0\u4f55\u5e73\u5747\u6cd5\u6c42\u6743\u91cd def jha(A,n): mul = np.prod(A,axis=1) fz = mul**(1/n) w = fz/np.sum(fz) return w #\u7279\u5f81\u503c\u6cd5\u6c42\u6743\u91cd def tzz(A,n): V,D = np.linalg.eig(A) #V\u662f\u7279\u5f81\u503c\uff0cD\u662f\u7279\u5f81\u5411\u91cf\uff0c\u6bcf\u4e00\u5217\u662f\u4e00\u4e2a\u7279\u5f81\u5411\u91cf maxv = np.max(V) #\u6700\u5927\u7279\u5f81\u503c c = np.where(V==maxv) #\u8fd4\u56demaxv\u6240\u5728\u7684\u884c\u548c\u5217 b = D[:,c[0]] #\u627e\u5230\u6700\u5927\u7279\u5f81\u503c\u5bf9\u5e94\u7279\u5f81\u5411\u91cf w = b/sum(b) return np.squeeze(w) #\u5220\u9664\u6570\u7ec4\u5f62\u72b6\u4e2d\u7684\u5355\u7ef4\u5ea6 V,D = np.linalg.eig(A) maxv = np.max(V) CI = (maxv-n)/(n-1) #\u4e00\u81f4\u6027\u6307\u6807 RI = RI_dict[n] #\u968f\u673a\u4e00\u81f4\u6027\u6307\u6807 CR = CI/RI #\u4e00\u81f4\u6027\u6bd4\u7387 if CR<0.1: print(f'\u68c0\u9a8c\u7cfb\u6570\u4e3a:{CR},\u4e00\u81f4\u6027\u68c0\u9a8c\u901a\u8fc7') print(tzz(A,n)) else: print(f'\u68c0\u9a8c\u7cfb\u6570\u4e3a:{CR},\u4e00\u81f4\u6027\u68c0\u9a8c\u672a\u901a\u8fc7') https://zhuanlan.zhihu.com/p/182944251","title":"\u4ee3\u7801\u5982\u4e0b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B/","text":"\u7070\u8272\u9884\u6d4b\u6a21\u578b(Grey Prediction Model) \u7b80\u4ecb \u7070\u8272\u9884\u6d4b\u6a21\u578b\u662f\u901a\u8fc7\u5c11\u91cf\u7684\u3001\u4e0d\u5b8c\u5168\u7684\u4fe1\u606f\uff0c\u5efa\u7acb\u6570\u5b66\u6a21\u578b\u5e76\u4f5c\u51fa\u9884\u6d4b\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u5e38\u7528\u7684\u9884\u6d4b\u65b9\u6cd5\u5982\u56de\u5f52\u5206\u6790\u548c\u795e\u7ecf\u7f51\u7edc\uff0c\u9700\u8981\u8f83\u5927\u5bb9\u91cf\u7684\u6837\u672c\uff0c\u82e5\u6837\u672c\u5bb9\u91cf\u8f83\u5c0f\uff0c\u5e38\u9020\u6210\u5f88\u5927\u7684\u8bef\u5dee\uff0c\u4ece\u800c\u4f7f\u5f97\u9884\u6d4b\u76ee\u6807\u5931\u6548\u3002 \u7070\u8272\u9884\u6d4b\u7684\u4e3b\u8981\u7279\u70b9\u662f\u6a21\u578b\u4f7f\u7528\u7684\u4e0d\u662f\u539f\u59cb\u6570\u636e\u5e8f\u5217\uff0c\u800c\u662f\u751f\u6210\u7684\u6570\u636e\u5e8f\u5217\u3002\u5176\u6838\u5fc3\u4f53\u7cfb\u662f\u7070\u8272\u6a21\u578b\uff08Grey Model\uff0c\u7b80\u79f0GM\uff09\uff0c \u5373\u5bf9\u539f\u59cb\u6570\u636e\u4f5c\u7d2f\u52a0\u751f\u6210\u3001\u7d2f\u51cf\u751f\u6210\u3001\u5747\u503c\u751f\u6210\u3001\u6781\u6bd4\u751f\u6210\u7b49\uff0c\u5f97\u5230\u8fd1\u4f3c\u7684\u6307\u6570\u89c4\u5f8b\u518d\u8fdb\u884c\u5efa\u6a21\u7684\u65b9\u6cd5\u3002 \u4f18\u7f3a\u70b9 \u4f18\u70b9 \uff1a\u662f\u4e0d\u9700\u8981\u5f88\u591a\u7684\u6570\u636e\uff0c\u4e00\u822c\u53ea\u9700\u89814\u4e2a\u6570\u636e\u5c31\u591f\uff0c\u80fd\u89e3\u51b3\u5386\u53f2\u6570\u636e\u5c11\u3001\u5e8f\u5217\u7684\u5b8c\u6574\u6027\u53ca\u53ef\u9760\u6027\u4f4e\u7684\u95ee\u9898\uff1b\u80fd\u5229\u7528\u5fae\u5206\u65b9\u7a0b\u6765\u5145\u5206\u6316\u6398\u7cfb\u7edf\u7684\u672c\u8d28\uff0c\u7cbe\u5ea6\u9ad8\uff1b\u80fd\u5c06\u65e0\u89c4\u5f8b\u7684\u539f\u59cb\u6570\u636e\u8fdb\u884c\u751f\u6210\u5f97\u5230\u89c4\u5f8b\u6027\u8f83\u5f3a\u7684\u751f\u6210\u5e8f\u5217\uff0c\u8fd0\u7b97\u7b80\u4fbf\uff0c\u6613\u4e8e\u68c0\u9a8c\uff0c\u5177\u6709\u4e0d\u8003\u8651\u5206\u5e03\u89c4\u5f8b\uff0c\u4e0d\u8003\u8651\u53d8\u5316\u8d8b\u52bf\u3002 \u7f3a\u70b9 \uff1a\u662f\u53ea\u9002\u7528\u4e8e\u4e2d\u77ed\u671f\u7684\u9884\u6d4b\uff0c\u53ea\u9002\u5408\u6307\u6570\u589e\u957f\u7684\u9884\u6d4b\u3002 \u751f\u6210\u6570\u636e\u5e8f\u5217\u65b9\u6cd5 (1)\u7d2f\u52a0\u751f\u6210 \\[ \\begin{equation} \\begin{split} x^{(1)}&=(x^{(1)}(1),x^{(1)}(2),\\dots,x^{(1)}(n))\\\\ &=(x^{(0)}(1),x^{(0)}(1)+x^{(0)}(2),\\dots,x^{(0)}(1)+\\cdots+x^{(0)}(n)) \\end{split} \\end{equation} \\] (2)\u52a0\u6743\u90bb\u503c\u751f\u6210 \\[ z^{(1)}=(z^{(1)}(2),z^{(1)}(3),\\dots,z^{(1)}(n)) \\] \u5176\u4e2d \\[ z^{(1)}(n)=\\alpha x^{(1)}(n)+(1-\\alpha)x^{(1)}(n-1) \\] \\(\\alpha\\) \u4e3a\u52a0\u6743\u503c,\u5f53 \\(\\alpha=0.5\\) \u65f6\uff0c\u5c31\u79f0\u4e3a\u5747\u503c\u751f\u6210\uff0c\u4e5f\u79f0\u7b49\u6743\u90bb\u503c\u751f\u6210\u3002 GM(1,1)\u6a21\u578b GM: \u7070\u8272\u6a21\u578b\uff1b (1,1): \u53ea\u542b\u6709\u4e00\u4e2a\u53d8\u91cf\u7684\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\uff1b \u5df2\u77e5\u539f\u59cb\u6570\u636e\u5e8f\u5217 \\(x^{(0)}=(x^{(0)}(1),x^{(0)}(2),\\dots,x^{(0)}(n))\\) 1\u3001\u7ea7\u6bd4\u68c0\u9a8c \u7ea7\u6bd4\u7684\u8ba1\u7b97\uff1a \\[ \\lambda(k)=\\frac{x^{(0)}(k-1)}{x^{(0)}(k)},k=2,3,\\dots,n \\] \u7ea7\u6bd4\u5206\u6790\u7528\u6765\u5224\u65ad\u7070\u8272\u6a21\u578bGM(1,1)\u80fd\u5426\u89e3\u51b3\u67d0\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6240\u6709\u7ea7\u6bd4 \\(\\lambda(k)\\) \u90fd\u843d\u5728\u533a\u95f4 \\((e^{(-\\frac{2}{n+1})},e^{(\\frac{2}{n+1})})\\) \u5185\uff0c\u5219\u5e8f\u5217 \\(x^{(0)}\\) \u53ef\u4ee5\u4f5c\u4e3a\u6a21\u578bGM(1,1)\u7684\u6570\u636e\u8fdb\u884c\u7070\u8272\u9884\u6d4b\u3002\u5426\u5219\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u7ebf\u6027\u53d8\u5316\uff0c\u4f7f\u5176\u7ea7\u6bd4 \\(\\lambda_y(k)\\) \u6ee1\u8db3\u8981\u6c42\u3002 \u5373\u53d6\u9002\u5f53\u7684\u5e38\u6570c\uff0c\u505a\u5e73\u79fb\u53d8\u5316: \\[ y^{(0)}(k)=x^{(0)}(k)+c ,k=1,2,\\dots,n \\] 2\u3001\u5efa\u7acb\u6a21\u578b (1)\u5bf9\u539f\u59cb\u6570\u636e\u8fdb\u884c\u7d2f\u52a0\uff0c\u5f97\u5230 \\(x^{(1)}\\) ,\u5176\u4e2d \\(x^{(1)}(k)=\\sum_{i=1}^kx^{(0)}(i)\\) (2)\u5bf9\u7d2f\u52a0\u751f\u6210\u4e4b\u540e\u7684\u5e8f\u5217\u8fdb\u884c\u5747\u503c\u751f\u6210,\u5f97\u5230 \\(z^{(1)}\\) ,\u5176\u4e2d \\(z^{(1)}(k)=0.5x^{(1)}(k-1)+0.5x^{(1)}(k)\\) (3)\u5efa\u7acb\u7070\u5fae\u5206\u65b9\u7a0b: \\[ x^{(0)}(k)+az^{(1)}(k)=b,k=2,3,\\dots,n \\] \u76f8\u5e94\u7684\u767d\u5316\u5fae\u5206\u65b9\u7a0b\u4e3a: \\[ \\frac{dx^{(1)}}{dt}+ax^{(1)}(t)=b \\] \u8bb0\u53d1\u5c55\u7cfb\u6570a\u548c\u7070\u4f5c\u7528\u91cfb: \\[ u = \\begin{bmatrix} a\\\\ b\\\\ \\end{bmatrix} \\] (4)\u6784\u9020\u6570\u636e\u77e9\u9635B\uff0c\u53ca\u6570\u636e\u5411\u91cfY \\[B= \\begin{bmatrix} -z^{(1)}(2)\\\\ -z^{(1)}(3)\\\\ \\vdots\\\\ -z^{(1)}(n)\\\\ \\end{bmatrix} =\\begin{bmatrix} -\\frac{1}{2}(x^{(1)}(1)+x^{(1)}(2))&1\\\\ -\\frac{1}{2}(x^{(1)}(2)+x^{(1)}(3))&1\\\\ \\vdots&\\vdots\\\\ -\\frac{1}{2}(x^{(1)}(n-1)+x^{(1)}(n))&1\\\\ \\end{bmatrix} \\] \\[ Y=\\begin{bmatrix} x^{(0)}(2)\\\\ x^{(0)}(3)\\\\ \\vdots\\\\ x^{(0)}(n)\\\\ \\end{bmatrix} \\] \u7531\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff0c\u6c42\u5f97\u4f7f \\(J(u)=(Y-Bu)^T(Y-Bu)\\) \u8fbe\u5230\u6700\u5c0f\u503c\u7684u\u7684\u4f30\u8ba1\u503c\uff0c\u5373\uff1a \\[ \\hat u=\\begin{bmatrix} \\hat a\\\\ \\hat b\\\\ \\end{bmatrix} =(B^TB)^{-1}B^TY \\] (5)\u5efa\u7acb\u6a21\u578b\u6c42\u89e3\u65f6\u95f4\u54cd\u5e94\u51fd\u6570\u5e76\u8fdb\u884c\u9884\u6d4b \u6839\u636e\u4e0a\u8ff0GM(1,1)\u7070\u5fae\u5206\u65b9\u7a0b\u5bf9\u5e94\u7684\u767d\u5316\u5fae\u5206\u65b9\u7a0b\uff0c\u5229\u7528\u5982\u4e0b\u65f6\u95f4\u54cd\u5e94\u51fd\u6570\uff0c\u5f97\u5230\u751f\u6210\u5e8f\u5217\u9884\u6d4b\u503c \\[ \\hat x^{(1)}(k+1)=(x^{(0)}(1)-\\frac{\\hat b}{\\hat a})e^{-\\hat ak}+\\frac{\\hat b}{\\hat a}\\quad,k=1,2,\\dots,n-1 \\] \u8ba1\u7b97\u539f\u59cb\u6570\u636e\u9884\u6d4b\u503c \\[ \\hat x^{(0)}(k+1)=\\hat x^{(1)}(k+1)-\\hat x^{(1)}(k)\\quad,k=1,2,\\dots,n-1 \\] (6)\u68c0\u9a8c\u9884\u6d4b\u503c \u6b8b\u5dee\u68c0\u9a8c \u4ee4\u6b8b\u5dee\u4e3a \\(\\varepsilon(k)\\) ,\u8ba1\u7b97 $$ \\varepsilon(k)=\\frac{x^{(0)}(k)-\\hat x^{(0)}(k)}{x^{(0)}(k)}\\quad,k=1,2,\\dots,n $$ \u5176\u4e2d \\(\\hat x^{(0)}(1)=x^{(0)}(1)\\) ,\u5982\u679c \\(\\varepsilon(k)<0.2\\) ,\u5219\u8ba4\u4e3a\u8fbe\u5230\u4e00\u822c\u8981\u6c42\uff1b \\(\\varepsilon(k)<0.1\\) \uff0c\u5219\u8ba4\u4e3a\u8fbe\u5230\u8f83\u9ad8\u7684\u8981\u6c42\u3002 \u7ea7\u6bd4\u504f\u5dee\u503c\u68c0\u9a8c \u9996\u5148\u7531\u53c2\u8003\u6570\u636e \\(x^{(0)}(k),x^{(0)}(k-1)\\) \u8ba1\u7b97\u51fa\u7ea7\u6bd4 \\(\\lambda(k)\\) ,\u518d\u7528\u53d1\u5c55\u7cfb\u6570a\u6c42\u51fa\u76f8\u5e94\u7684\u7ea7\u6bd4\u504f\u5dee $$ \\rho(k)=1-(\\frac{1-0.5a}{1+0.5a})\\lambda(k) $$ \u5982\u679c \\(\\rho(k)<0.2\\) ,\u5219\u8ba4\u4e3a\u8fbe\u5230\u4e00\u822c\u8981\u6c42\uff1b \\(\\rho(k)<0.1\\) \uff0c\u5219\u8ba4\u4e3a\u8fbe\u5230\u8f83\u9ad8\u7684\u8981\u6c42\u3002 \u5b9e\u4f8b \u9884\u6d4b1997\u52302005\u5e74\u4ea7\u503c \u5e74\u4efd \u4ea7\u503c/\u4e07\u5143 1997 27260 1998 29547 1999 32411 2000 35388 \u6700\u7ec8\u5f97\u5230\u68c0\u9a8c\u8868\uff1a \u4ee3\u7801 import numpy as np import matplotlib.pylab as plt data = np.array([27260,29547,32411,35388]) n = len(data) # \u8ba1\u7b97\u7ea7\u6bd4 lambdas = data[:n-1]/data[1:] #\u786e\u5b9a\u7ea7\u6bd4\u8303\u56f4 min_la = np.exp(-2/(n+1)) max_la = np.exp(2/(n+1)) flag = True for la in lambdas: if (la>max_la or la<min_la): flag = False if flag==False: print('\u6570\u636e\u68c0\u9a8c\u4e0d\u901a\u8fc7') else: print('\u6570\u636e\u68c0\u9a8c\u901a\u8fc7') # GM(1,1) data1 = np.cumsum(data) #\u7d2f\u52a0\u6570\u636e,\u591a\u884c\u65f6\u8bbe\u7f6eaxis=1 #\u6c42B\u548cY B = np.zeros((n-1,2)) for i in range(n-1): B[i,0] = -1/2*(data1[i]+data1[i+1]) #\u7d2f\u52a0\u540e\u7684\u6570\u636e\u5e73\u5747 B[i,1] = 1 Y = data[1:].reshape(-1,1) #\u4e00\u5217 a,b = np.dot(np.dot(np.linalg.inv(np.dot(B.T,B)),B.T),Y) print('a=',a) print('b=',b) #\u9884\u6d4b X = [i for i in range(1997,2001)] #\u5df2\u77e5\u5e74\u4efd X_p = [i for i in range(2001,2006)] #\u9884\u6d4b\u5e74\u4efd cumsum_p = [] #\u7d2f\u52a0\u9884\u6d4b\u503c cumsum_p.append(data[0]) for k in range(1,len(X)+len(X_p)): cumsum_p.append((data[0]-b/a)*np.exp(-a*k)+b/a) data_p = [] #\u771f\u5b9e\u9884\u6d4b\u503c data_p.append(cumsum_p[0]) for i in range(1,len(cumsum_p)): data_p.append(cumsum_p[i]-cumsum_p[i-1]) data_p = list(map(float,data_p)) print(np.round(data_p,4)) #\u68c0\u9a8c\u9884\u6d4b\u503c #\u6b8b\u5dee datap1 = data_p[:len(X)] e = data - datap1 print(np.round(e,4)) #\u76f8\u5bf9\u8bef\u5dee delta = abs(e/data) print(np.round(delta,4)) #\u7ea7\u6bd4\u504f\u5dee rho = 1-(1-0.5*a)/(1+0.5*a)*lambdas print(np.round(rho,4)) plt.figure(figsize=(10,4)) plt.subplot(1,2,1) plt.title('1997-2000\u5e74\u7684\u771f\u5b9e\u503c\u3001\u9884\u6d4b\u503c',fontproperties='SimHei') plt.scatter(X,data,color='blue',label='\u771f\u5b9e\u503c') plt.scatter(X,data_p[:len(X)],color='r',marker='*',label='\u9884\u6d4b\u503c') plt.legend(prop='SimHei') plt.subplot(122) plt.title('2001-2005\u5e74\u7684\u9884\u6d4b\u503c',fontproperties='SimHei') plt.plot(X_p,data_p[len(X):],'b--',marker='^') plt.show() \u8f93\u51fa: \u6570\u636e\u68c0\u9a8c\u901a\u8fc7 a= [-0.08999517] b= [25790.28384245] [27260. 29553.4421 32336.4602 35381.5524 38713.3978 42358.9998 46347.9045 50712.4404 55487.9803] [ 0. -6.4421 74.5398 6.4476] [0. 0.0002 0.0023 0.0002] [-0.0095 0.0025 -0.0022]","title":"\u7070\u8272\u9884\u6d4b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B/#grey-prediction-model","text":"","title":"\u7070\u8272\u9884\u6d4b\u6a21\u578b(Grey Prediction Model)"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B/#_1","text":"\u7070\u8272\u9884\u6d4b\u6a21\u578b\u662f\u901a\u8fc7\u5c11\u91cf\u7684\u3001\u4e0d\u5b8c\u5168\u7684\u4fe1\u606f\uff0c\u5efa\u7acb\u6570\u5b66\u6a21\u578b\u5e76\u4f5c\u51fa\u9884\u6d4b\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u5e38\u7528\u7684\u9884\u6d4b\u65b9\u6cd5\u5982\u56de\u5f52\u5206\u6790\u548c\u795e\u7ecf\u7f51\u7edc\uff0c\u9700\u8981\u8f83\u5927\u5bb9\u91cf\u7684\u6837\u672c\uff0c\u82e5\u6837\u672c\u5bb9\u91cf\u8f83\u5c0f\uff0c\u5e38\u9020\u6210\u5f88\u5927\u7684\u8bef\u5dee\uff0c\u4ece\u800c\u4f7f\u5f97\u9884\u6d4b\u76ee\u6807\u5931\u6548\u3002 \u7070\u8272\u9884\u6d4b\u7684\u4e3b\u8981\u7279\u70b9\u662f\u6a21\u578b\u4f7f\u7528\u7684\u4e0d\u662f\u539f\u59cb\u6570\u636e\u5e8f\u5217\uff0c\u800c\u662f\u751f\u6210\u7684\u6570\u636e\u5e8f\u5217\u3002\u5176\u6838\u5fc3\u4f53\u7cfb\u662f\u7070\u8272\u6a21\u578b\uff08Grey Model\uff0c\u7b80\u79f0GM\uff09\uff0c \u5373\u5bf9\u539f\u59cb\u6570\u636e\u4f5c\u7d2f\u52a0\u751f\u6210\u3001\u7d2f\u51cf\u751f\u6210\u3001\u5747\u503c\u751f\u6210\u3001\u6781\u6bd4\u751f\u6210\u7b49\uff0c\u5f97\u5230\u8fd1\u4f3c\u7684\u6307\u6570\u89c4\u5f8b\u518d\u8fdb\u884c\u5efa\u6a21\u7684\u65b9\u6cd5\u3002","title":"\u7b80\u4ecb"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B/#_2","text":"\u4f18\u70b9 \uff1a\u662f\u4e0d\u9700\u8981\u5f88\u591a\u7684\u6570\u636e\uff0c\u4e00\u822c\u53ea\u9700\u89814\u4e2a\u6570\u636e\u5c31\u591f\uff0c\u80fd\u89e3\u51b3\u5386\u53f2\u6570\u636e\u5c11\u3001\u5e8f\u5217\u7684\u5b8c\u6574\u6027\u53ca\u53ef\u9760\u6027\u4f4e\u7684\u95ee\u9898\uff1b\u80fd\u5229\u7528\u5fae\u5206\u65b9\u7a0b\u6765\u5145\u5206\u6316\u6398\u7cfb\u7edf\u7684\u672c\u8d28\uff0c\u7cbe\u5ea6\u9ad8\uff1b\u80fd\u5c06\u65e0\u89c4\u5f8b\u7684\u539f\u59cb\u6570\u636e\u8fdb\u884c\u751f\u6210\u5f97\u5230\u89c4\u5f8b\u6027\u8f83\u5f3a\u7684\u751f\u6210\u5e8f\u5217\uff0c\u8fd0\u7b97\u7b80\u4fbf\uff0c\u6613\u4e8e\u68c0\u9a8c\uff0c\u5177\u6709\u4e0d\u8003\u8651\u5206\u5e03\u89c4\u5f8b\uff0c\u4e0d\u8003\u8651\u53d8\u5316\u8d8b\u52bf\u3002 \u7f3a\u70b9 \uff1a\u662f\u53ea\u9002\u7528\u4e8e\u4e2d\u77ed\u671f\u7684\u9884\u6d4b\uff0c\u53ea\u9002\u5408\u6307\u6570\u589e\u957f\u7684\u9884\u6d4b\u3002","title":"\u4f18\u7f3a\u70b9"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B/#_3","text":"(1)\u7d2f\u52a0\u751f\u6210 \\[ \\begin{equation} \\begin{split} x^{(1)}&=(x^{(1)}(1),x^{(1)}(2),\\dots,x^{(1)}(n))\\\\ &=(x^{(0)}(1),x^{(0)}(1)+x^{(0)}(2),\\dots,x^{(0)}(1)+\\cdots+x^{(0)}(n)) \\end{split} \\end{equation} \\] (2)\u52a0\u6743\u90bb\u503c\u751f\u6210 \\[ z^{(1)}=(z^{(1)}(2),z^{(1)}(3),\\dots,z^{(1)}(n)) \\] \u5176\u4e2d \\[ z^{(1)}(n)=\\alpha x^{(1)}(n)+(1-\\alpha)x^{(1)}(n-1) \\] \\(\\alpha\\) \u4e3a\u52a0\u6743\u503c,\u5f53 \\(\\alpha=0.5\\) \u65f6\uff0c\u5c31\u79f0\u4e3a\u5747\u503c\u751f\u6210\uff0c\u4e5f\u79f0\u7b49\u6743\u90bb\u503c\u751f\u6210\u3002","title":"\u751f\u6210\u6570\u636e\u5e8f\u5217\u65b9\u6cd5"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B/#gm11","text":"GM: \u7070\u8272\u6a21\u578b\uff1b (1,1): \u53ea\u542b\u6709\u4e00\u4e2a\u53d8\u91cf\u7684\u4e00\u9636\u5fae\u5206\u65b9\u7a0b\uff1b \u5df2\u77e5\u539f\u59cb\u6570\u636e\u5e8f\u5217 \\(x^{(0)}=(x^{(0)}(1),x^{(0)}(2),\\dots,x^{(0)}(n))\\) 1\u3001\u7ea7\u6bd4\u68c0\u9a8c \u7ea7\u6bd4\u7684\u8ba1\u7b97\uff1a \\[ \\lambda(k)=\\frac{x^{(0)}(k-1)}{x^{(0)}(k)},k=2,3,\\dots,n \\] \u7ea7\u6bd4\u5206\u6790\u7528\u6765\u5224\u65ad\u7070\u8272\u6a21\u578bGM(1,1)\u80fd\u5426\u89e3\u51b3\u67d0\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6240\u6709\u7ea7\u6bd4 \\(\\lambda(k)\\) \u90fd\u843d\u5728\u533a\u95f4 \\((e^{(-\\frac{2}{n+1})},e^{(\\frac{2}{n+1})})\\) \u5185\uff0c\u5219\u5e8f\u5217 \\(x^{(0)}\\) \u53ef\u4ee5\u4f5c\u4e3a\u6a21\u578bGM(1,1)\u7684\u6570\u636e\u8fdb\u884c\u7070\u8272\u9884\u6d4b\u3002\u5426\u5219\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u7ebf\u6027\u53d8\u5316\uff0c\u4f7f\u5176\u7ea7\u6bd4 \\(\\lambda_y(k)\\) \u6ee1\u8db3\u8981\u6c42\u3002 \u5373\u53d6\u9002\u5f53\u7684\u5e38\u6570c\uff0c\u505a\u5e73\u79fb\u53d8\u5316: \\[ y^{(0)}(k)=x^{(0)}(k)+c ,k=1,2,\\dots,n \\] 2\u3001\u5efa\u7acb\u6a21\u578b (1)\u5bf9\u539f\u59cb\u6570\u636e\u8fdb\u884c\u7d2f\u52a0\uff0c\u5f97\u5230 \\(x^{(1)}\\) ,\u5176\u4e2d \\(x^{(1)}(k)=\\sum_{i=1}^kx^{(0)}(i)\\) (2)\u5bf9\u7d2f\u52a0\u751f\u6210\u4e4b\u540e\u7684\u5e8f\u5217\u8fdb\u884c\u5747\u503c\u751f\u6210,\u5f97\u5230 \\(z^{(1)}\\) ,\u5176\u4e2d \\(z^{(1)}(k)=0.5x^{(1)}(k-1)+0.5x^{(1)}(k)\\) (3)\u5efa\u7acb\u7070\u5fae\u5206\u65b9\u7a0b: \\[ x^{(0)}(k)+az^{(1)}(k)=b,k=2,3,\\dots,n \\] \u76f8\u5e94\u7684\u767d\u5316\u5fae\u5206\u65b9\u7a0b\u4e3a: \\[ \\frac{dx^{(1)}}{dt}+ax^{(1)}(t)=b \\] \u8bb0\u53d1\u5c55\u7cfb\u6570a\u548c\u7070\u4f5c\u7528\u91cfb: \\[ u = \\begin{bmatrix} a\\\\ b\\\\ \\end{bmatrix} \\] (4)\u6784\u9020\u6570\u636e\u77e9\u9635B\uff0c\u53ca\u6570\u636e\u5411\u91cfY \\[B= \\begin{bmatrix} -z^{(1)}(2)\\\\ -z^{(1)}(3)\\\\ \\vdots\\\\ -z^{(1)}(n)\\\\ \\end{bmatrix} =\\begin{bmatrix} -\\frac{1}{2}(x^{(1)}(1)+x^{(1)}(2))&1\\\\ -\\frac{1}{2}(x^{(1)}(2)+x^{(1)}(3))&1\\\\ \\vdots&\\vdots\\\\ -\\frac{1}{2}(x^{(1)}(n-1)+x^{(1)}(n))&1\\\\ \\end{bmatrix} \\] \\[ Y=\\begin{bmatrix} x^{(0)}(2)\\\\ x^{(0)}(3)\\\\ \\vdots\\\\ x^{(0)}(n)\\\\ \\end{bmatrix} \\] \u7531\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff0c\u6c42\u5f97\u4f7f \\(J(u)=(Y-Bu)^T(Y-Bu)\\) \u8fbe\u5230\u6700\u5c0f\u503c\u7684u\u7684\u4f30\u8ba1\u503c\uff0c\u5373\uff1a \\[ \\hat u=\\begin{bmatrix} \\hat a\\\\ \\hat b\\\\ \\end{bmatrix} =(B^TB)^{-1}B^TY \\] (5)\u5efa\u7acb\u6a21\u578b\u6c42\u89e3\u65f6\u95f4\u54cd\u5e94\u51fd\u6570\u5e76\u8fdb\u884c\u9884\u6d4b \u6839\u636e\u4e0a\u8ff0GM(1,1)\u7070\u5fae\u5206\u65b9\u7a0b\u5bf9\u5e94\u7684\u767d\u5316\u5fae\u5206\u65b9\u7a0b\uff0c\u5229\u7528\u5982\u4e0b\u65f6\u95f4\u54cd\u5e94\u51fd\u6570\uff0c\u5f97\u5230\u751f\u6210\u5e8f\u5217\u9884\u6d4b\u503c \\[ \\hat x^{(1)}(k+1)=(x^{(0)}(1)-\\frac{\\hat b}{\\hat a})e^{-\\hat ak}+\\frac{\\hat b}{\\hat a}\\quad,k=1,2,\\dots,n-1 \\] \u8ba1\u7b97\u539f\u59cb\u6570\u636e\u9884\u6d4b\u503c \\[ \\hat x^{(0)}(k+1)=\\hat x^{(1)}(k+1)-\\hat x^{(1)}(k)\\quad,k=1,2,\\dots,n-1 \\] (6)\u68c0\u9a8c\u9884\u6d4b\u503c \u6b8b\u5dee\u68c0\u9a8c \u4ee4\u6b8b\u5dee\u4e3a \\(\\varepsilon(k)\\) ,\u8ba1\u7b97 $$ \\varepsilon(k)=\\frac{x^{(0)}(k)-\\hat x^{(0)}(k)}{x^{(0)}(k)}\\quad,k=1,2,\\dots,n $$ \u5176\u4e2d \\(\\hat x^{(0)}(1)=x^{(0)}(1)\\) ,\u5982\u679c \\(\\varepsilon(k)<0.2\\) ,\u5219\u8ba4\u4e3a\u8fbe\u5230\u4e00\u822c\u8981\u6c42\uff1b \\(\\varepsilon(k)<0.1\\) \uff0c\u5219\u8ba4\u4e3a\u8fbe\u5230\u8f83\u9ad8\u7684\u8981\u6c42\u3002 \u7ea7\u6bd4\u504f\u5dee\u503c\u68c0\u9a8c \u9996\u5148\u7531\u53c2\u8003\u6570\u636e \\(x^{(0)}(k),x^{(0)}(k-1)\\) \u8ba1\u7b97\u51fa\u7ea7\u6bd4 \\(\\lambda(k)\\) ,\u518d\u7528\u53d1\u5c55\u7cfb\u6570a\u6c42\u51fa\u76f8\u5e94\u7684\u7ea7\u6bd4\u504f\u5dee $$ \\rho(k)=1-(\\frac{1-0.5a}{1+0.5a})\\lambda(k) $$ \u5982\u679c \\(\\rho(k)<0.2\\) ,\u5219\u8ba4\u4e3a\u8fbe\u5230\u4e00\u822c\u8981\u6c42\uff1b \\(\\rho(k)<0.1\\) \uff0c\u5219\u8ba4\u4e3a\u8fbe\u5230\u8f83\u9ad8\u7684\u8981\u6c42\u3002","title":"GM(1,1)\u6a21\u578b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B/#_4","text":"\u9884\u6d4b1997\u52302005\u5e74\u4ea7\u503c \u5e74\u4efd \u4ea7\u503c/\u4e07\u5143 1997 27260 1998 29547 1999 32411 2000 35388 \u6700\u7ec8\u5f97\u5230\u68c0\u9a8c\u8868\uff1a","title":"\u5b9e\u4f8b"},{"location":"%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B/#_5","text":"import numpy as np import matplotlib.pylab as plt data = np.array([27260,29547,32411,35388]) n = len(data) # \u8ba1\u7b97\u7ea7\u6bd4 lambdas = data[:n-1]/data[1:] #\u786e\u5b9a\u7ea7\u6bd4\u8303\u56f4 min_la = np.exp(-2/(n+1)) max_la = np.exp(2/(n+1)) flag = True for la in lambdas: if (la>max_la or la<min_la): flag = False if flag==False: print('\u6570\u636e\u68c0\u9a8c\u4e0d\u901a\u8fc7') else: print('\u6570\u636e\u68c0\u9a8c\u901a\u8fc7') # GM(1,1) data1 = np.cumsum(data) #\u7d2f\u52a0\u6570\u636e,\u591a\u884c\u65f6\u8bbe\u7f6eaxis=1 #\u6c42B\u548cY B = np.zeros((n-1,2)) for i in range(n-1): B[i,0] = -1/2*(data1[i]+data1[i+1]) #\u7d2f\u52a0\u540e\u7684\u6570\u636e\u5e73\u5747 B[i,1] = 1 Y = data[1:].reshape(-1,1) #\u4e00\u5217 a,b = np.dot(np.dot(np.linalg.inv(np.dot(B.T,B)),B.T),Y) print('a=',a) print('b=',b) #\u9884\u6d4b X = [i for i in range(1997,2001)] #\u5df2\u77e5\u5e74\u4efd X_p = [i for i in range(2001,2006)] #\u9884\u6d4b\u5e74\u4efd cumsum_p = [] #\u7d2f\u52a0\u9884\u6d4b\u503c cumsum_p.append(data[0]) for k in range(1,len(X)+len(X_p)): cumsum_p.append((data[0]-b/a)*np.exp(-a*k)+b/a) data_p = [] #\u771f\u5b9e\u9884\u6d4b\u503c data_p.append(cumsum_p[0]) for i in range(1,len(cumsum_p)): data_p.append(cumsum_p[i]-cumsum_p[i-1]) data_p = list(map(float,data_p)) print(np.round(data_p,4)) #\u68c0\u9a8c\u9884\u6d4b\u503c #\u6b8b\u5dee datap1 = data_p[:len(X)] e = data - datap1 print(np.round(e,4)) #\u76f8\u5bf9\u8bef\u5dee delta = abs(e/data) print(np.round(delta,4)) #\u7ea7\u6bd4\u504f\u5dee rho = 1-(1-0.5*a)/(1+0.5*a)*lambdas print(np.round(rho,4)) plt.figure(figsize=(10,4)) plt.subplot(1,2,1) plt.title('1997-2000\u5e74\u7684\u771f\u5b9e\u503c\u3001\u9884\u6d4b\u503c',fontproperties='SimHei') plt.scatter(X,data,color='blue',label='\u771f\u5b9e\u503c') plt.scatter(X,data_p[:len(X)],color='r',marker='*',label='\u9884\u6d4b\u503c') plt.legend(prop='SimHei') plt.subplot(122) plt.title('2001-2005\u5e74\u7684\u9884\u6d4b\u503c',fontproperties='SimHei') plt.plot(X_p,data_p[len(X):],'b--',marker='^') plt.show() \u8f93\u51fa: \u6570\u636e\u68c0\u9a8c\u901a\u8fc7 a= [-0.08999517] b= [25790.28384245] [27260. 29553.4421 32336.4602 35381.5524 38713.3978 42358.9998 46347.9045 50712.4404 55487.9803] [ 0. -6.4421 74.5398 6.4476] [0. 0.0002 0.0023 0.0002] [-0.0095 0.0025 -0.0022]","title":"\u4ee3\u7801"}]}